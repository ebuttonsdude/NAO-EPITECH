<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" robot="" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." bitmap_expanded="1" plugin="" x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="behavior_layer1" mute="0">
                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                    <Diagram scale="85">
                        <Box name="Life" robot="" id="2" tooltip='Behavior template showing how you can structure a behavior. It is a simple &quot;hello&#x0A;world&quot;. Each box and keyframe with a blue star is a box or a keyframe that you&#x0A;should not modify.' bitmap_expanded="1" plugin="" x="192" y="54">
                            <bitmap>media/images/box/interaction/text_read.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass
 
    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="HumanInteraction" type="0" type_size="1" nature="4" stm_value_name="HumanInteraction" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Input name="BehaviorEvent" type="0" type_size="1" nature="4" stm_value_name="BehaviorEvent" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                            <Input name="/Life/Environment/Vision/Human/Face" type="0" type_size="1" nature="4" stm_value_name="/Life/Environment/Vision/Human/Face" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                            <Input name="/Preferences" type="0" type_size="1" nature="4" stm_value_name="/Preferences" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="7" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="TimelineManager" mute="0">
                                    <BehaviorKeyframe name="Load" index="1" bitmap="media/images/bonjour/star_on.png">
                                        <Diagram scale="75">
                                            <Box name="Goto And Stop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="353" y="43">
                                                <bitmap>media/images/bonjour/star_on.png</bitmap>
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("Frame name"))

    def onInput_onStop(self):
        ""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="Stop" robot="" id="5" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="192" y="134">
                                                <bitmap>media/images/bonjour/star_on.png</bitmap>
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.stopTimelineParent()

    def onInput_onStop(self):
        ""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                            </Box>
                                            <Box name="ExtractorManager" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="162" y="20">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.self_events = ["HumanInteraction", "BehaviorEvent"]
        self.tactil_events = {'LeftBumperPressed' : 'Life/Sensors/Bumper/Foot/Left/',
                       'RightBumperPressed' : 'Life/Sensors/Bumper/Foot/Right/',
                       'FrontTactilTouched' : 'Life/Sensors/Tactil/Head/Front/',
                       'MiddleTactilTouched' : 'Life/Sensors/Tactil/Head/Middle/',
                       'RearTactilTouched' : 'Life/Sensors/Tactil/Head/Rear/'}
        self.noFace = True
        self.facedetection = ALProxy("ALFaceDetection")
        self.facedetectionLowPeriod = 3000
        self.facedetectionHighPeriod = 800
        
    def tactilsensors(self, data, value, message):
        """Here we handle all tactil sensors"""
        self.log("tactilsensors" "in da callback")
        if data in self.tactil_events.keys():
            e = self.tactil_events[data]
            if value > 0.5:
                e = e + "Touched"
            else:
                e = e + "Released"   
            ALMemory.raiseEvent(e, 1)

    #~ def facedetected(self, data, value, message):
        #~ """Here we handle face detection"""
        #~ event = [0, []]
        #~ if value == []:
            #~ self.noFace = True
            #~ time.sleep(2)
            #~ if self.noFace:
                #~ ALMemory.raiseEvent("/Life/Environment/Vision/Human/Face", event)
                #~ self.facedetection.updatePeriod(self.getName()+"FaceDetected", self.facedetectionLowPeriod) 
            #~ return
        #~ self.noFace = False
        #~ timestamp, faces, camera = value
        #~ faces = faces[:-1]
        #~ event[0] = len(faces)
        #~ for face in faces:
            #~ event[1].append(face[0][1:])
        #~ ALMemory.raiseEvent("/Life/Environment/Vision/Human/Face", event)
        #~ self.facedetection.updatePeriod(self.getName()+"FaceDetected", self.facedetectionHighPeriod)
 
    def onLoad(self):
        pass
        
    def onUnload(self):
        pass
        
    def onInput_onStart(self):
        # Subscribing to tactil events :
        for k,v in self.tactil_events.iteritems():
            ALMemory.declareEvent(k)
            ALMemory.subscribeToEvent(k, self.getName(), "message", "tactilsensors")

# This part has been desactivated ftm
        # Subscribing to vision events :
#        ALMemory.subscribeToEvent("FaceDetected", self.getName(), "", "facedetected")
#        self.facedetection.updatePeriod(self.getName()+"FaceDetected", self.facedetectionHighPeriod) # setting period to 1.5s to save CPU

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Unload" index="10" bitmap="media/images/bonjour/star_on.png">
                                        <Diagram scale="-1">
                                            <Link inputowner="0" indexofinput="8" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Start" index="20" bitmap="media/images/bonjour/star_on.png">
                                        <Diagram scale="-1">
                                            <Box name="Notifications_Launchers" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="103" y="34">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import os, copy, time
from xml.dom import minidom

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.proxyBehavior = ALProxy("ALBehaviorManager")
        self.aBehaviors = []
        self.aRunningNotificationBehaviors = []

    def onLoad(self):
        #~ puts code for box initialization here
        self.sNotificationName = ""
        self.bStop = False
        self.bRunning = False
        
    def onUnload(self):
        #~ puts code for box cleanup here
        self.bStop = True
        try:
            ALMemory.unsubscribeToEvent(self.sNotificationName, self.getName())
        except:
            pass
        for i in self.aRunningNotificationBehaviors:
            try:
                if self.proxyBehavior.isBehaviorRunning(i):
                    self.proxyBehavior.stopBehavior(i)
            except Exception as e:
                pass 
        self.aRunningNotificationBehaviors = []
        
    def runNewBehaviors(self, aBehaviors):
        for i in aBehaviors:
            sNotification = os.path.join(i, "notifications")
            try:
                self.aRunningNotificationBehaviors.append(sNotification)
                if not self.proxyBehavior.isBehaviorRunning(sNotification) and self.proxyBehavior.isBehaviorInstalled(sNotification):
                    self.proxyBehavior.post.runBehavior(sNotification)
            except:
                pass     
            
    def pythonDataChanged(self, strVarName, value,message):
        """callback when data change"""
        if value != None:
            ALMemory.raiseEvent("BehaviorEvent", strVarName)
        
    def getText(self, nodelist):
        res = []
        for node in nodelist:
            if node.nodeType == node.TEXT_NODE:
                res.append (node.data)
        return ''.join(res)  
        
    def getMetaData(self, sData, aAttributes, aPath):
        aAllRes = []
        sGlobalPath = "/home/nao/behaviors"
        for s in aPath:
            try:
                sPath = os.path.join(os.path.join(sGlobalPath, s), "metadata.xml")
                if os.path.isfile(sPath):
                    fMetadata = open(sPath)
                else:
                    continue
            except:
                continue
            else:
                xmlMetadata = minidom.parseString(fMetadata.read()) 
                aRes = [s]
                xmlLauncher = xmlMetadata.getElementsByTagName(sData)[0]
                if xmlLauncher.hasAttributes():
                        for i in aAttributes:
                            aRes.append(str(self.getText(xmlLauncher.getAttributeNode(i).childNodes)))
                fMetadata.close()
                aAllRes.append(aRes)
        return aAllRes
        
    def subscribeToNewEvents(self, aNotifier):
        for i in aNotifier:
            fFrequency = float(i[2])
            self.sNotificationName = i[1]
            sApplication = i[0]
            ALMemory.subscribeToEvent(self.sNotificationName, self.getName(), "pythonDataChanged")

    def onInput_onStart(self):
        #~ self.onStoppedNotification() #~ activate output of the box
        self.bStop = False
        if self.bRunning:
            return
        self.bRunning = True
        while not self.bStop:
            aPath = self.proxyBehavior.getInstalledBehaviors()
            aNotifierPath = list(set(aPath)-set(self.aBehaviors))  #OK for new Behaviors. TODO: remove the subscription to deprecated behaviors. 2010/12/21
            if aNotifierPath != []:
                self.aBehaviors = copy.deepcopy(aPath)
                self.runNewBehaviors(aNotifierPath)
                try:
                    aNotifier = self.getMetaData("Notification", ["name", "frequency"], aNotifierPath)
                except:
                    pass
                else:
                    self.subscribeToNewEvents(aNotifier)
            time.sleep(10.0)
        self.bRunning = False

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            </Box>
                                            <Box name="GotoAndStopInteractiveActivity" robot="" id="6" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="222" y="134">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALMemory.insertData("Life/State", self.getParameter("Frame name"))
        self.gotoAndStopParent(self.getParameter("Frame name"))

    def onInput_onStop(self):
        ""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Interactive Activity" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="BehaviorDownloader" robot="" id="4" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="112" y="373">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import os
import ftplib
import subprocess
import shutil
import time

class ContentDownloader():

    def __init__(self, user, passwd):
        self.__user = user
        self.__passwd = passwd
        self.__host = 'src.aldebaran-robotics.com'
        self.__tmp = '/tmp/'
        self.__dest = '/home/nao/behaviors/'
        self.__ar = 'ar -x'
        self.__session_channels = None
        self.__session_store = None
        self.__update_channel_running = False

    def __connect_channels(self):
        self.__session_channels = ftplib.FTP(self.__host, self.__user, self.__passwd)

    def __connect_store(self):
        self.__session_store = ftplib.FTP(self.__host, self.__user, self.__passwd)

    def __disconnect_channels(self):
        try:
            self.__session_channels.quit()
        except Exception, e:
            pass

    def __disconnect_store(self):
        try:
            self.__session_store.quit()
        except Exception, e:
            pass

    def __clean(self, behavior):
        try:
            os.unlink(self.__tmp + behavior + '.md5')
        except Exception, e:
            pass
        try:
            os.unlink(self.__tmp + behavior)
        except Exception, e:
            pass
        try:
            shutil.rmtree(self.__tmp + behavior[:-4])
        except Exception, e:
            pass

    def __get_and_install(self, session, behavior, prefix=""):
        self.__clean(behavior)
        checksum_name = behavior + '.md5'

        # Step 1 : downloading behavior checksum
        try:
            remote_sum_file = open(self.__tmp + checksum_name, 'w')
            session.cwd('checksums')
            session.retrlines('RETR ' + checksum_name, remote_sum_file.write)
            remote_sum_file.close()
            session.cwd('..')
        except Exception, e:
            self.__clean(behavior)
            raise Exception("Unable to download behavior checksum " + behavior)
        
        # Step 2 : comparing checksums
        is_new_behavior = False
        try:
            local_sum_file = open(self.__dest + prefix + behavior[:-4] + '/' + checksum_name, 'r')
            local_sum = local_sum_file.readline()
            local_sum_file.close()

            remote_sum_file = open(self.__tmp + checksum_name, 'r')
            remote_sum = remote_sum_file.readline()
            remote_sum_file.close()

            if remote_sum == local_sum:
                self.__clean(behavior)
                return
        except Exception, e:
            is_new_behavior = True

        # Step 3 : effective download
        try:
            behavior_file = open(self.__tmp + behavior, 'w')
            session.retrbinary('RETR ' + behavior, behavior_file.write)
            behavior_file.close()
        except Exception, e:
            self.__clean(behavior)
            raise Exception("Unable to download behavior " + behavior)

        # Step 4 : installation
        try:
            cmd = 'mkdir -p ' + self.__tmp + behavior[:-4]              \
                + ' && cd ' + self.__tmp + behavior[:-4]                \
                + ' && ' + self.__ar + ' ' + self.__tmp + behavior      \
                + ' && tar xzf data.tar.gz'                             \
                + ' && tar xzf control.tar.gz'                          \
                + ' && rm -rf data.tar.gz control.tar.gz debian-binary' \
                + ' && mv control .metadata'                            \
                + ' && mv ' + self.__tmp + checksum_name + ' .'  \
                + ' && cd ..'                                           \
                + ' && mkdir -p ' + self.__dest
            cmd = cmd + ' && rm -rf ' + self.__dest + prefix + behavior[:-4]
            cmd = cmd + ' && mv ' + self.__tmp + behavior[:-4] + ' ' + self.__dest + prefix + behavior[:-4]
            retcode = subprocess.call(cmd, shell=True)
            if retcode != 0:
                self.__clean(behavior)
                raise Exception("Unable to install downloaded behavior : " + behavior)
            l = ALProxy('ALLogger')
            if is_new_behavior:
                l.info("Nao's Life", "a new behavior has been downloaded : '" + behavior + "'")
            else:
                l.info("Nao's Life", "behavior has been updated : '" + behavior + "'")            
        except Exception, e:
            self.__clean(behavior)
            raise Exception("Unable to install downloaded behavior " + behavior)

        self.__clean(behavior)

    def update_behavior(self, behavior):
        try:
            self.__connect_store()
        except Exception, e:
            raise Exception("Unable to connect to the content server : please ensure that your robot is registered")
        try:
            self.__session_store.cwd('store')
            self.__session_store.cwd(behavior)
        except Exception, e:
            raise Exception("Behavior " + behavior + " is not in the content server")
        behaviors = []
        try:
            listing = self.__session_store.nlst()
            behaviors = [l for l in listing if l.endswith('.crg')]
        except Exception, e:
            raise Exception("Unable to list available downloads for " + behavior)

        for b in behaviors:
            try:
                self.__get_and_install(self.__session_store, b, "store_" + behavior + "_")
            except Exception, e:
                raise Exception('Unable to get store behavior ' + b)
        self.__disconnect_store()

    def update_channel(self, channel):
        self.__update_channel_running = True
        try:
            self.__connect_channels()
        except Exception, e:
            raise Exception("Unable to connect to the content server : please ensure that your robot is registered")
        self.__session_channels.cwd('channels')
        self.__session_channels.cwd(channel)
        listing = self.__session_channels.nlst()
        behaviors = [l for l in listing if l.endswith('.crg')]
        for b in behaviors:
            if not self.__update_channel_running:
                self.__disconnect_channels()
                return
            try:
                self.__get_and_install(self.__session_channels, b, "channel_" + channel + "_")
            except:
                l = ALProxy("ALLogger")
                l.info("Nao's Life channel", 'Unable to get channel behavior ' + b)
        self.__disconnect_channels()
        
        bm = ALProxy("ALBehaviorManager")
        local_channels_behaviors = [b for b in bm.getInstalledBehaviors() if b.startswith("channel_naos-life_")]
        
        # Removing outdated behaviors        
        l = ALProxy("ALLogger")
        oldBehaviors = []
        for i in local_channels_behaviors:
            oldBehaviors.append(i)
        for b in local_channels_behaviors:
            for ref in behaviors:
#                l.info("checking", b + " against  " +  "channel_naos-life_" + ref[:-4])
                if b == "channel_naos-life_" + ref[:-4]:
                    oldBehaviors.remove(b)
        for b in oldBehaviors:
            os.system("rm -rf /home/nao/behaviors/" + b + " 2>/dev/null >/dev/null")
            l.info("Nao's Life", "A channel behavior has been removed : '" + str(b) + "'")
        
    def stop_update_channel(self):
        self.__update_channel_running = False

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.downloader = None

    def onLoad(self):
            bm = ALProxy("ALBehaviorManager")

    def onUnload(self):
        try:
            ALMemory.unsubscribeToEvent("ALTelepathe/login", self.getName())
        except:
            pass
        self.running = False
        if self.downloader:
            self.downloader.stop_update_channel()
            
    def __start_content_downloader(self):
        self.running = True
        try:
            preferences = ALProxy("ALPreferences")
            version = ALMemory.version()
            if version == '1.10.44' or version == '1.10.43':
                prefs = preferences.readPrefFile("ALTelepathe", False)
            else:
                prefs = preferences.readPrefFile("ALUser", False)
            login = ""
            password = ""
            for p in prefs:
                if p[0] == "login":
                    login = p[2].split('@')[0]
                if p[0] == "password":
                    password = p[2]
            if login != "":
                self.downloader = ContentDownloader(login, password)
                if version == '1.10.44' or version == '1.10.43':
                    l = ALProxy('ALLogger')
                    while self.running:
                        l.info("Nao's Life channel", "Checking for behaviors updates")
                        self.downloader.update_channel('naos-life')
                        l.info("Nao's Life channel", "Behaviors are up-to-date")
                        time.sleep(300)
        except:
            pass
        self.running = False

    def onLogin(self, data, value, message):
        """Here we handle ALTelepathe/login changes"""
        self.__start_content_downloader()
                
    def onInput_onStart(self):
        ALMemory.subscribeToEvent("ALTelepathe/Login", self.getName(), "message", "onLogin")
        self.__start_content_downloader()

    def onInput_onNaoStoreEvent(self, p):
        if not self.downloader:
            return
            
        l = ALProxy("ALLogger")
        naostoreBehaviors = []
        
        # Checking for new behaviors
        for member in p:
            if member[0] == 'NaoStore':
                for app in member[2]:
                    for attr in app[2]:
                        try:
                            l.info("Nao's Life", "Downloading application : '" + str(app[0]) + "'")
                            self.downloader.update_behavior(app[0])
                            l.info("Nao's Life", "NaoStore application is up-to-date : '" + str(app[0]) + "'")
                        except Exception, e:
                            l.info("Nao's Life", "Unable to update application : " + str(e))                            
                        naostoreBehaviors.append("store_" + app[0] + "_")

        bm = ALProxy("ALBehaviorManager")
        installedBehaviors = bm.getInstalledBehaviors()
        naostoreInstalledBehaviors = [b for b in installedBehaviors if b.startswith("store_")]
        
        # Removing outdated behaviors        
        oldBehaviors = []
        for i in naostoreInstalledBehaviors:
            oldBehaviors.append(i)
        for b in naostoreInstalledBehaviors:
            for ref in naostoreBehaviors:
                if b.startswith(ref): # Removing all sub-behaviors
                    oldBehaviors.remove(b)
        for b in oldBehaviors:
            os.system("rm -rf /home/nao/behaviors/" + b + " 2>/dev/null >/dev/null")
            l.info("Nao's Life", "NaoStore application has been removed : '" + str(b) + "'")
                    
    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onNaoStoreEvent" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                            </Box>
                                            <Box name="Mind" robot="" id="9" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="103" y="135">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <bitmap>media/images/box/interaction/social_behavior.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import random
from xml.dom import minidom

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.proxyBehavior = ALProxy("ALBehaviorManager")
        self.aBehaviorEvent = []
        self.tts = ALProxy("ALTextToSpeech")
        self.aPromotedBehaviors = ["channel_naos-life-interactive_touchmyhead","channel_naos-life-interactive_random_dance","channel_naos-life-interactive_almanac"]

    def onLoad(self):
        #~ puts code for box initialization here
        self.aBehaviorEvent = []
        
    def pickAccordingToLanguage(self, aSentences):
        #aSentences[0] : French, aSentences[1]: English
        sLanguage = self.tts.getLanguage()
        if sLanguage == "French":
            return aSentences[0]
        else:
            return aSentences[1]
        
    def onUnload(self):
        #~ puts code for box cleanup here
        pass
        
    def getText(self, nodelist):
        res = []
        for node in nodelist:
            if node.nodeType == node.TEXT_NODE:
                res.append (node.data)
        return ''.join(res)  
        
    def getMetaData(self, sData, aAttributes, aPath):
        aAllRes = []
        sGlobalPath = "/home/nao/behaviors"
        for s in aPath:
            try:
                sPath = os.path.join(os.path.join(sGlobalPath, s), "metadata.xml")
                fMetadata = open(sPath)
            except:
                continue
            else:
                xmlMetadata = minidom.parseString(fMetadata.read()) 
                aRes = [s]
                xmlLauncher = xmlMetadata.getElementsByTagName(sData)[0]
                if xmlLauncher.hasAttributes():
                        for i in aAttributes:
                            aRes.append(str(self.getText(xmlLauncher.getAttributeNode(i).childNodes)))
                fMetadata.close()
                aAllRes.append(aRes)
        return aAllRes
        
    def onInput_BehaviorEvent(self, p):
        self.aBehaviorEvent.append(p)
        
    def computeBehavior(self, aBehaviors):
        aGoodBehaviors = aBehaviors
        if self.aBehaviorEvent != []:
            sLastEvent = self.aBehaviorEvent[len(self.aBehaviorEvent)-1]
            aRes = self.getMetaData("Notification", ['name'], aBehaviors)
            aGoodBehaviors = [b[0] for b in aRes if b[1] == sLastEvent]
        if len(aGoodBehaviors) > 0:
            return aGoodBehaviors[random.randint(0,len(aGoodBehaviors)-1)]
        else:
            return ""
        
    def onInput_HumanInteraction(self, p):
        aBehaviors = self.proxyBehavior.getInstalledBehaviors()
        aChoiceSentences = []
        aChoiceResults = []
        aInteractiveBehaviors = [b for b in aBehaviors if (b.startswith("channel_naos-life-interactive") or b.startswith("store_") and not b.startswith("store_telepathe-for"))]
        try:
            sChosenBehavior = self.computeBehavior(aInteractiveBehaviors)
            if sChosenBehavior != "":
                aChoiceSentences.append(self.pickAccordingToLanguage(["oui/ok","yes/ok"]))
                aChoiceResults.append(sChosenBehavior)
                aChoiceSentences.append(self.pickAccordingToLanguage(["non","no"]))
                aChoiceResults.append("no_behavior")
                for sBehavior in aInteractiveBehaviors:
                    if sBehavior == self.aPromotedBehaviors[0]:
                        aChoiceSentences.append(self.pickAccordingToLanguage(["Touche ma tête, le jeu","Touch my head game"]))
                        aChoiceResults.append(sBehavior)
                    elif sBehavior == self.aPromotedBehaviors[1]:
                        aChoiceSentences.append(self.pickAccordingToLanguage(["Je veux voir une danse/Danse","I want to see you dance/Dance"]))
                        aChoiceResults.append(sBehavior)
                    elif sBehavior == self.aPromotedBehaviors[2]:
                        aChoiceSentences.append(self.pickAccordingToLanguage(["Quels événements ont eu lieu le même jour dans le passé ?/Ephémérides","What events happened on the same day in the past?/Almanac"]))
                        aChoiceResults.append(sBehavior)
                    else:
                        pass
                aChoiceSentences.append(self.pickAccordingToLanguage(["surprends-moi","suprise me"]))
                aChoiceResults.append("random_behavior")
                ALMemory.insertData("naos-life_interactive-life_behaviors", aChoiceResults)
                ALMemory.insertData("naos-life_interactive-life_sentences",aChoiceSentences)
                self.onStopped()
        except:
            pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def onInput_input_memory(self, p):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="HumanInteraction" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Input name="BehaviorEvent" type="0" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="5" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                                            </Box>
                                            <Box name="ALXmppBroker" robot="" id="16" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="104" y="260">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import xmlrpclib
from xmpp import protocol
from xmpp import simplexml
import uuid
import time

class MethodMissing(object):
    def __getattribute__(self, attr):
        try:
            return object.__getattribute__(self, attr)
        except:
            class MethodMissing(object):
                def __init__(self, wrapped, method):
                    self.__wrapped__ = wrapped
                    self.__method__ = method
                def __call__(self, *args, **kwargs):
                    return self.__wrapped__.method_missing(self.__method__, *args, **kwargs)
            return MethodMissing(self, attr)

    def method_missing(self, *args, **kwargs):
        raise NotImplementedError(str(self.__wrapped__))

class ALXmppProxy(MethodMissing):
    calls = {}

    def __init__(self, module, dest):
        self.module = module
        self.dest = dest
        
    def pCall(self, method, *args):
        s = xmlrpclib.dumps(args[0], self.module + "." + method)
        
        # Building an iq from the message
        iq = protocol.Iq('set', to=self.dest, queryNS=protocol.NS_RPC, payload=[simplexml.XML2Node(s)])
        
        # Generating a unique command id (useless for postCall methods)
        iq_id = str(uuid.uuid4())
        iq.setID(iq_id)
        
        # sending the built request to the proxy destination
        self.calls[iq_id] = None
        aluser = ALProxy("ALUser")
        aluser.send(self.dest, str(iq))
        
        return iq_id
        
    def call(self, method, args):
        # generating a call, and waiting for a reply
        iq_id = self.pCall(method, args)
        while not ALXmppProxy.calls[iq_id]:
            time.sleep(0.02)
        res = str(ALXmppProxy.calls[iq_id])
        del ALXmppProxy.calls[iq_id]
        return res

    def method_missing(self, method, *args, **kwargs):
        """myProxy.myMethod falls down here"""
        return self.call(method, args)
        
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.subscriptions = {} 
        self.ids = []
        self.blacklist = []
        
    def callback(self, name, value, message):
        """Don't remove this comment or the method would not be bound xD"""
        if name in self.subscriptions.keys():
            c = self.subscriptions[name]
            p = ALXmppProxy(c[1], c[0])
            p.pCall(c[2], (name, value))
                
    def setSubscriber(self, jid, data, module, method, timeout):
        l = ALProxy("ALLogger")
        l.info("Subscribing to" + str(data) + " for ", str(timeout))
        self.subscriptions[data] = [jid, module, method]
        ALMemory.subscribeToEvent(data, self.getName(), "message", "callback")
        if data == "AllSensors":
            ALMemory.raiseEvent("XmppSubscribe", [data, jid, module, method])
            if timeout > 0:
                time.sleep(int(timeout))
                self.removeSubscriber(jid, data)

    def removeSubscriber(self, jid, data):
        if data in self.subscriptions.keys():
            del self.subscriptions[data]
            ALMemory.unsubscribeToEvent(data, self.getName())
            if data == "AllSensors":
                ALMemory.raiseEvent("XmppUnsubscribe", [data, jid])
   
    def eval(self, jid, message):
        """called when a message received"""
        
        # Getting the iq type and switching if it's not a "set" request
        msg = simplexml.XML2Node(message)
        # Retrieving the method call id
        iq_id = str(msg.getAttr("id"))

        # parsing request in module, method, (params)  
        params, method = xmlrpclib.loads("<?xml version='1.0'?>%s" % message)
  
        # result case : we received a return value                  
        if msg.getAttr("type") == "result":
            ALXmppProxy.calls[iq_id] = str(params[0])
            return

        # call case : we received a call request
        if msg.getAttr("type") == "set":
            # skipping duplicates and self-requests
            if iq_id in self.ids or iq_id in ALXmppProxy.calls.keys():
                return
            self.ids.append(iq_id)
            module, function = method.split(".", 1)
            
            # Security check : only allow a few modules
            if module in self.blacklist:
                return

            if module == "ALSubscribe":
                if function == "post.subscribe":
                    if len(params) > 3 and params[3] != None:
                        self.setSubscriber(jid, str(params[0]), str(params[1]), str(params[2]), str(params[3]))
                    else:
                        self.setSubscriber(jid, str(params[0]), str(params[1]), str(params[2]), -1)
                elif function == "post.unsubscribe":
                    self.removeSubscriber(jid, str(params[0]))
                return
                
            postCall = False
            if function.startswith("post."):
                function = function[5:]
                postCall = True
                
#            l = ALProxy("ALLogger")
#            l.info("Module = ", str(module))
#            l.info("Method = ", str(function))
#            l.info("Params = ", str(params))
#            l.info("Length = ", str(len(params)))
#            l.info("PostCall = ", str(postCall))
            
      
            # Calling the method, and building the xmlrpc response
            try:
                p = ALProxy(str(module))
                if len(params) == 0:
                    result = p.call(str(function), ())     
                elif len(params) == 1 or params[1] == None:
                    result = p.call(str(function), params[0])
                elif len(params) == 2:
                    result = p.call(str(function), params[0], params[1])
                elif len(params) == 3:
                    result = p.call(str(function), params[0], params[1], params[2])
                elif len(params) == 4:
                    result = p.call(str(function), params[0], params[1], params[2], params[3])
                elif len(params) == 5:
                    result = p.call(str(function), params[0], params[1], params[2], params[3], params[4])
                xmlrpc_res = xmlrpclib.dumps(tuple([result]), methodresponse=True, allow_none=True)
            except Exception, e:
                xmlrpc_res =  xmlrpclib.dumps(xmlrpclib.Fault(404, "method error:" + str(e)))
                
            if not postCall:
                # Building a new iq containing xmlrpc results/faults
                iq = protocol.Iq('result', to=jid, queryNS=protocol.NS_RPC, payload=[simplexml.XML2Node(xmlrpc_res)])
                iq.setID(iq_id)
        
                # Finally, sending back the response
                aluser = ALProxy("ALUser")
                aluser.send(jid, str(iq))
                
    def onLoad(self):
        ALMemory.subscribeToEvent("XmppMessage", self.getName(), "", "onMessage")

    def onUnload(self):
        ALMemory.unsubscribeToEvent("XmppMessage", self.getName())

    def onMessage(self, data, value, message):
        """bound callback"""
        p = ALProxy("ALUser")
        id = str(value[0])
        if id == p.id() or id == "_preferences@xmpp.aldebaran-robotics.com":
            self.eval(str(value[0]), str(value[1]))
            

    def onInput_onStart(self):
        pass
        
    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="4" indexofinput="3" outputowner="0" indexofoutput="7" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="9" indexofinput="3" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="9" indexofinput="4" outputowner="0" indexofoutput="5" />
                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="6" />
                                            <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="ExitManager" mute="0">
                                    <BehaviorKeyframe name="ExitManager" index="20" bitmap="media/images/bonjour/star_on.png">
                                        <Diagram scale="-1">
                                            <Box name="Goto And Stop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="270" y="35">
                                                <bitmap>media/images/bonjour/star_on.png</bitmap>
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALMemory.insertData("Life/State", self.getParameter("Frame name"))
        self.gotoAndStopParent(self.getParameter("Frame name"))

    def onInput_onStop(self):
        ""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Idle" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="DetectChoregraphe" robot="" id="1" tooltip="Only allows a few softs to get hand over Nao&apos;s Life" bitmap_expanded="1" plugin="" x="115" y="71">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        ALMemory.unsubscribeToMicroEvent("ClientConnected", self.getName())
        ALMemory.unsubscribeToMicroEvent("ClientDisconnected", self.getName())
        
    def onClientConnected(self, pDataName, pValue, pMessage):
        """ClientConnected callback"""
        if pValue.lower() == "choregraphe":
            self.onChoregraphe()

    def onClientDisconnected(self, pDataName, pValue, pMessage):
        """ClientDisconnected callback"""
        if pValue.lower() == "choregraphe":
            self.onNoChoregraphe()

    def onInput_onStart(self):
        # Subscribing to ClientConnected / ClientDisconnected event :
        ALMemory.subscribeToMicroEvent("ClientConnected", self.getName(), "", "onClientConnected")
        ALMemory.subscribeToMicroEvent("ClientDisconnected", self.getName(), "", "onClientDisconnected")

        # initial try : is there a Choregraphe connected ?
        try:
            choregraphe = ALProxy( 'ALChoregraphe' );
            self.onChoregraphe()
        except BaseException, err:
            self.onNoChoregraphe()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onChoregraphe" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="onNoChoregraphe" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Goto And Stop" robot="" id="2" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="264" y="118">
                                                <bitmap>media/images/bonjour/star_on.png</bitmap>
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALMemory.insertData("Life/State", self.getParameter("Frame name"))
        self.gotoAndStopParent(self.getParameter("Frame name"))

    def onInput_onStop(self):
        ""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Solitary Activity" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="Reactivities" mute="0">
                                    <BehaviorKeyframe name="Stimuli Reactivity" index="20" bitmap="media/images/box/movement/move.png">
                                        <Diagram scale="79">
                                            <Box name="Text Edit" robot="" id="2" tooltip="Transmits the text you entered when the input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="339" y="160">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("We should define a priority for each extractor. Today we can do it with an ossociated frequency.")]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <text>We should define a priority for each extractor. Today we can do it with an ossociated frequency.</text>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                            </Box>
                                            <Box name="Text Edit" robot="" id="3" tooltip="Transmits the text you entered when the input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="305" y="43">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("postures have to be handled by reactions")]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <text>postures have to be handled by reactions</text>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                            </Box>
                                            <Box name="Reactivity" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="130" y="94">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="onLeftBumper" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Bumper/Foot/Left/Touched" inner="1" tooltip="" id="4" />
                                                <Input name="onRightBumper" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Bumper/Foot/Right/Touched" inner="1" tooltip="" id="5" />
                                                <Input name="Life/Sensors/Bumper/Foot/Left/Released" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Bumper/Foot/Left/Released" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                <Input name="Life/Sensors/Bumper/Foot/Right/Released_2" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Bumper/Foot/Right/Released" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="7" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
                                                <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="Primary" mute="0">
                                                        <BehaviorKeyframe name="Primary" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="ReactToBumpers" robot="" id="4" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="95" y="60">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass
        
    def __touched(self, leds):
        state = "unknown"
        try:
            state = ALMemory.getData("Life/State")
        except:
            pass
        if state == "Idle":
            ALLeds.fadeRGB(leds, 0x00aaff, 0.0)
        elif state == "Interactive Activity":
            ALLeds.fadeRGB(leds, 0x00ff00, 0.0)
        else:
            ALLeds.fadeRGB(leds, 0xffffff, 0.0)
            
    def __released(self, leds):
        ALLeds.fadeRGB(leds, 0x000000, 0.5)
        
    def onInput_onLeftBumperTouched(self):
        self.__touched("LeftFootLeds")
        self.onFinished()

    def onInput_onRightBumperTouched(self):
        self.__touched("RightFootLeds")
        self.onFinished()

    def onInput_onLeftBumperReleased(self):
        self.__released("LeftFootLeds")
        self.onFinished()

    def onInput_onRightBumperReleased(self):
        self.__released("RightFootLeds")
        self.onFinished()
        
    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onLeftBumperTouched" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                    <Input name="onRightBumperTouched" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Input name="onLeftBumperReleased" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Input name="onRightBumperReleased" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                    <Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                                                                </Box>
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="3" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="4" indexofinput="4" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="4" indexofinput="5" outputowner="0" indexofoutput="7" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="Activities" mute="0">
                                    <BehaviorKeyframe name="Solitary Activity" index="20" bitmap="media/images/box/interaction/vocabulary.png">
                                        <Diagram scale="81">
                                            <Box name="Timer" robot="" id="10" tooltip="Send a bang with a predefined period." bitmap_expanded="1" plugin="" x="115" y="21">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import threading # opkg install python-threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False;

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value (seconds)." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the timer." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="60" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds). The box output will be stimulated at this period." id="6" />
                                            </Box>
                                            <Box name="Suitability Filter" robot="" id="11" tooltip="Filter behaviors according to their necessary conditions" bitmap_expanded="1" plugin="" x="495" y="20">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_input(self, p):
        # if no behavior, we output an empty array
        if len(p) < 1:
            return self.output([])
        idx = random.randint(0, len(p) - 1)
        self.output([p[idx]])]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="input" type="0" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Output name="output" type="0" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="Favourable Sort" robot="" id="2" tooltip="Sort behaviors" bitmap_expanded="1" plugin="" x="617" y="20">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_input(self, p):
        self.output(p) #~ activate output of the box
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="input" type="0" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Output name="output" type="0" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="PeriodicityFilter" robot="" id="1" tooltip="Filter behaviors according to their periodicity" bitmap_expanded="1" plugin="" x="370" y="20">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_input(self, p):
        self.output(p) #~ activate output of the box
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="input" type="0" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Output name="output" type="0" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="List Behaviors" robot="" id="3" tooltip="List all available solitary activities" bitmap_expanded="1" plugin="" x="246" y="20">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.behaviorManager = ALProxy("ALBehaviorManager")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        # The final behavior's list
        behaviors = []
        
        # Getting a list of all installed behaviors
        installedBehaviors = self.behaviorManager.getInstalledBehaviors()
        
        # Filtering behaviors according to their channel
        channelBehaviors = [b for b in installedBehaviors if b.startswith("channel_") and not b.startswith("channel_naos-life-interactive") and b != "channel_naos-life_NaoLife"]
        
        # Filtering behaviors according to robot's pose
        try:
            robotpose = ALProxy("ALRobotPose")
            pose = robotpose.getActualPoseAndTime()[0]
            if pose == "Stand":
                behaviors = [b for b in channelBehaviors if not b.startswith('channel_naos-life_sit_')]
            elif pose == "Sit":
                behaviors = [b for b in channelBehaviors if not b.startswith('channel_naos-life_stand_')]
            else:
                behaviors = channelBehaviors
            self.behaviorNames(behaviors)
        except:
            pass # Unable to retrieve current robot's pose

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="behaviorNames" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            </Box>
                                            <Box name="HumanInteraction" robot="" id="6" tooltip='raise &quot;Life/HumanInteraction&quot; event when a human is interacting' bitmap_expanded="1" plugin="" x="122" y="136">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="Life/Sensors/Tactil/Head/Front/Touched" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Tactil/Head/Front/Touched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Input name="Life/Sensors/Tactil/Head/Middle/Touched" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Tactil/Head/Middle/Touched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                <Input name="Life/Sensors/Tactil/Head/Rear/Touched" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Tactil/Head/Rear/Touched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="HumanInteraction" mute="0">
                                                        <BehaviorKeyframe name="Tactil" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="DoubleTap" robot="" id="1" tooltip="Raise an event passed in parameter when onStart is called" bitmap_expanded="1" plugin="" x="111" y="139">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.maximumGap = 0.5
        self.tactils = [0] * 3

    def onLoad(self):
        pass

    def onUnload(self):
        pass
        
    def __checkDoubleTap(self, index):
        t = time.time()
        if self.tactils[index] and t < self.tactils[index] + self.maximumGap:
            self.doubleTap()
            self.tactils[index] = 0
        else:
            self.tactils[index] = t
            

    def onInput_onFront(self):
        self.__checkDoubleTap(0)
 
    def onInput_onMiddle(self):
        self.__checkDoubleTap(1)

    def onInput_onRear(self):
        self.__checkDoubleTap(2)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onFront" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onMiddle" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Input name="onRear" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Output name="doubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Parameter name="eventName" inherits_from_parent="0" content_type="3" value="HumanInteraction" default_value="" custom_choice="0" tooltip="" id="6" />
                                                                    <Parameter name="eventValue" inherits_from_parent="0" content_type="1" value="1" default_value="0" min="0" max="100" tooltip="" id="7" />
                                                                </Box>
                                                                <Box name="Stop" robot="" id="4" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="133" y="30">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.stopTimelineParent()

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Box name="RaiseEvent" robot="" id="2" tooltip="Raise an event passed in parameter when onStart is called" bitmap_expanded="1" plugin="" x="242" y="140">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALMemory.raiseEvent(self.getParameter("eventName"), self.getParameter("eventValue"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Parameter name="eventName" inherits_from_parent="0" content_type="3" value="HumanInteraction" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                    <Parameter name="eventValue" inherits_from_parent="0" content_type="1" value="1" default_value="0" min="0" max="100" tooltip="" id="4" />
                                                                </Box>
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="3" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="4" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Box name="Launch Behaviors" robot="" id="7" tooltip="Launch behaviors passed in parameters" bitmap_expanded="1" plugin="" x="749" y="22">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.loadedBehaviors = []

    def onLoad(self):
        self.behaviorManager = ALProxy("ALBehaviorManager")

    def onUnload(self):
        runningBehaviors = self.behaviorManager.getRunningBehaviors()
        behaviorsToStop = [b for b in runningBehaviors if b.startswith("channel_naos-life_") and b != "channel_naos-life_NaoLife"]
        for behavior in behaviorsToStop:
            self.behaviorManager.stopBehavior(behavior)
        self.onStopped()
        
    def onInput_onStart(self, p):
        logger = ALProxy("ALLogger")
        for behavior in p:
            try:
                logger.info("Nao's Life", "Loading behavior '" + str(behavior) + "'")
                isLoaded = self.behaviorManager.preloadBehavior(behavior)
                if isLoaded:
                    logger.info("Nao's Life", "Playing behavior '" + str(behavior) + "'")
                    self.anticollision()
                    time.sleep(3)
                    behavior = self.behaviorManager.runBehavior(behavior)
            except Exception, e:
                l = ALProxy("ALLogger")
                l.info("Unable to play behavior " + str(p[0]), str(e))

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Output name="anticollision" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="FaceTracker" robot="" id="5" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="125" y="371">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.nbFaces = 0
        self.threshold = 0.05
        self.rm = ALProxy("ALResourceManager")

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self, facedetected):
        nbFaces, faces = facedetected

        if self.rm.areResourcesFree(["Head"]):
            if nbFaces:
                if abs(faces[0][0]) > self.threshold or abs(faces[0][1]) > self.threshold:
                    ALMotion.setStiffnesses("Head", 1.0)
                    ALMotion.post.changeAngles("Head", [faces[0][0], faces[0][1]], 0.05)
            else:
                ALMotion.setStiffnesses("Head", 1.0)
                ALMotion.post.setAngles("Head", [0.0, 0.0], 0.05)

        if self.rm.areResourcesFree(["LeftEye", "RightEye"]):
            self.rm.lock
            if nbFaces:
                if not self.nbFaces:
                    ALLeds.post.fadeRGB("FaceLed0", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed1", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed2", 0xFFFFFF, 0.05)
                    ALLeds.post.fadeRGB("FaceLed3", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed4", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed5", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed6", 0xFFFFFF, 0.05)
                    ALLeds.post.fadeRGB("FaceLed7", 0x000000, 0.05)
                    time.sleep(0.15);
                    ALLeds.post.fadeRGB("FaceLeds", 0x1111FF, 0.05)

                elif abs(faces[0][0]) > 3.0 * self.threshold or abs(faces[0][1]) > 3.0 * self.threshold:
                    ALLeds.post.fadeRGB("FaceLed0", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed1", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed2", 0x1111FF, 0.05)
                    ALLeds.post.fadeRGB("FaceLed3", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed4", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed5", 0x000000, 0.05)
                    ALLeds.post.fadeRGB("FaceLed6", 0x1111FF, 0.05)
                    ALLeds.post.fadeRGB("FaceLed7", 0x000000, 0.05)
                    time.sleep(0.15);
                    ALLeds.post.fadeRGB("FaceLeds", 0x1111FF, 0.05)

            else:
                ALLeds.post.fadeRGB("FaceLeds", 0xFFFFFF, 3)

        self.nbFaces = nbFaces

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="ReactToSoundEnergy" robot="" id="4" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="256" y="136">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time
import math

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.earLedsGroups = []
        self.earLedsGroups.append(["LeftEarLed8", "RightEarLed8", "LeftEarLed9", "RightEarLed9"])
        self.earLedsGroups.append(["LeftEarLed7", "RightEarLed7", "LeftEarLed10", "RightEarLed10"])
        self.earLedsGroups.append(["LeftEarLed1", "RightEarLed1", "LeftEarLed6", "RightEarLed6"])
        self.earLedsGroups.append(["LeftEarLed2", "RightEarLed2", "LeftEarLed5", "RightEarLed5"])
        self.earLedsGroups.append(["LeftEarLed3", "RightEarLed3", "LeftEarLed4", "RightEarLed4"])

    def onResource(self, name):
        self.onInput_onStop()
        return True

    def onLoad(self):
        pass

    def onUnload(self):
        self.run = False

    def onInput_onStart(self):
        ALLeds.on("EarLeds")
        self.run = True
        audio = ALProxy("ALAudioDevice")
        audio.enableEnergyComputation()
        period = self.getParameter("period")
        while self.run:
            time.sleep(0.15)
            energyF = audio.getFrontMicEnergy()
            if energyF > 4000:
                ALLeds.post.fade("EarLeds", 0, 0)
            else:
                ALLeds.post.fade("EarLeds", 1, 1)
            time.sleep(period)

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="period" inherits_from_parent="0" content_type="2" value="0.15" default_value="0" min="0" max="1" tooltip="" id="5" />
                                            </Box>
                                            <Box name="ArmAnticollision" robot="" id="8" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="887" y="24">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="behavior_layer1" mute="0">
                                                        <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="CheckArmsColision" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="131" y="45">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        leftArm = ALMotion.getPosition("LArm", 0, True)
        rightArm = ALMotion.getPosition("RArm", 0, True)
        
        robotpose = ALProxy("ALRobotPose")
        position = robotpose.getActualPoseAndTime()[0]
        
        if leftArm[0] <= -0.07 and position == "Stand":
            ALMotion.setStiffnesses("LArm", 1)
            self.onLeftArmKoStand()
        elif leftArm[0] <= 0.07 and position == "Sit":
            ALMotion.setStiffnesses("LArm", 1)
            self.onLeftArmKoSit()
        else:
            self.onLeftArmOk()

        if rightArm[0] <= -0.07 and position == "Stand":
            ALMotion.setStiffnesses("RArm", 1)
            self.onRightArmKoStand()
        elif rightArm[0] <= 0.07 and position == "Sit":
            ALMotion.setStiffnesses("RArm", 1)
            self.onRightArmKoSit()
        else:
            self.onRightArmOk()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onRightArmOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="onLeftArmOk" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Output name="onRightArmKoSit" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Output name="onRightArmKoStand" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                    <Output name="onLeftArmKoSit" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Output name="onLeftArmKoStand" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                </Box>
                                                                <Box name="Stand_MoveLeftArm" robot="" id="9" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="437" y="405">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-24.7879" />
                                                                                <Key frame="60" value="87.7135" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="76" />
                                                                                <Key frame="60" value="7.64418" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-27.6" />
                                                                                <Key frame="45" value="-86.4" />
                                                                                <Key frame="60" value="-67.1517" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-2" />
                                                                                <Key frame="45" value="-69" />
                                                                                <Key frame="60" value="-28.2108" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Stand_MoveRightArm" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="445" y="204">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-24.7879" />
                                                                                <Key frame="60" value="87.7135" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-76" />
                                                                                <Key frame="60" value="-7.64418" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="27.6" />
                                                                                <Key frame="45" value="86.4" />
                                                                                <Key frame="60" value="67.1517" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="2" />
                                                                                <Key frame="45" value="69" />
                                                                                <Key frame="60" value="28.2108" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Sit_MoveRightArm" robot="" id="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="446" y="107">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-24.7879" />
                                                                                <Key frame="50" value="31.4" />
                                                                                <Key frame="60" value="55.3742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-76" />
                                                                                <Key frame="60" value="-13.4498" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="27.6" />
                                                                                <Key frame="40" value="36.2" />
                                                                                <Key frame="50" value="53.3" />
                                                                                <Key frame="60" value="28.0351" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="2" />
                                                                                <Key frame="40" value="8.5" />
                                                                                <Key frame="60" value="72.3373" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Sit_MoveLeftArm" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="441" y="310">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-24.7879" />
                                                                                <Key frame="50" value="31.4" />
                                                                                <Key frame="60" value="55.3742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="76" />
                                                                                <Key frame="60" value="13.4498" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-27.6" />
                                                                                <Key frame="40" value="-36.2" />
                                                                                <Key frame="50" value="-53.3" />
                                                                                <Key frame="60" value="-28.0351" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-2" />
                                                                                <Key frame="40" value="-8.5" />
                                                                                <Key frame="60" value="-72.3373" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Wait For Signals" robot="" id="2" tooltip="Wait for both inputs to be stimulated before stimulating its output." bitmap_expanded="1" plugin="" x="701" y="33">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""
        
    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                                    <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                                    <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                                                </Box>
                                                                <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="9" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="7" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="8" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Box name="Breathe" robot="" id="13" tooltip="tags:&#x0A;breath; loop" bitmap_expanded="1" plugin="" x="386" y="254">
                                                <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        self.onInput_onStop()

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="head" mute="0">
                                                        <BehaviorKeyframe name="head breathe" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Head Breathe" robot="" id="12" tooltip="tags:&#x0A;breath; loop" bitmap_expanded="1" plugin="" x="99" y="34">
                                                                    <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="loop" mute="0">
                                                                            <BehaviorKeyframe name="keyframe227" index="227" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Goto And Play (number)" robot="" id="5" tooltip="Jump to the frame number set in parameters and start playing the parent timeline." bitmap_expanded="1" plugin="" x="86" y="34">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndPlayParent(self.getParameter("Frame number"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame number" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="10000" tooltip="Number of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="stiffness" mute="0">
                                                                            <BehaviorKeyframe name="keyframe2" index="2" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Set Stiffness" robot="" id="1" tooltip="Set motors stiffness." bitmap_expanded="1" plugin="" x="96" y="74">
                                                                                        <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                                        <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                                        <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                                        <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                                        <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                                        <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                                        <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                                        <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="30" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="103" value="-1.23289" />
                                                                                <Key frame="128" value="-1.23289" />
                                                                                <Key frame="203" value="-1.23289" />
                                                                                <Key frame="228" value="-0.969213" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="103" value="0.261271" />
                                                                                <Key frame="128" value="0.261271" />
                                                                                <Key frame="203" value="4.4" />
                                                                                <Key frame="228" value="2.98591" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Pause on demand (beta)" timeout="-1" />
                                                                    <Resource name="Head" type="Pause on demand (beta)" timeout="-1" />
                                                                    <Resource name="Head" type="Pause on demand (beta)" timeout="-1" />
                                                                </Box>
                                                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="body" mute="0">
                                                        <BehaviorKeyframe name="body breathe" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Body Breathe" robot="" id="12" tooltip="tags:&#x0A;breath; loop" bitmap_expanded="1" plugin="" x="102" y="39">
                                                                    <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="loop" mute="0">
                                                                            <BehaviorKeyframe name="keyframe225" index="225" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Goto And Play (number)" robot="" id="5" tooltip="Jump to the frame number set in parameters and start playing the parent timeline." bitmap_expanded="1" plugin="" x="74" y="35">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndPlayParent(self.getParameter("Frame number"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame number" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="10000" tooltip="Number of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="stiffness" mute="0">
                                                                            <BehaviorKeyframe name="keyframe2" index="2" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Set Stiffness" robot="" id="1" tooltip="Set motors stiffness." bitmap_expanded="1" plugin="" x="66" y="52">
                                                                                        <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                                        <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                                        <Parameter name="Head" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                                        <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                                        <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                                        <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                                        <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                                        <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="30" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="101" value="53.5237" />
                                                                                <Key frame="126" value="53.5237" />
                                                                                <Key frame="201" value="52.9963" />
                                                                                <Key frame="226" value="53.1721" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="101" value="4.39218" />
                                                                                <Key frame="126" value="4.39218" />
                                                                                <Key frame="201" value="5.62267" />
                                                                                <Key frame="226" value="5.62267" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="101" value="-34.7196" />
                                                                                <Key frame="126" value="-34.7196" />
                                                                                <Key frame="201" value="-31.9071" />
                                                                                <Key frame="226" value="-32.5223" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="101" value="-60.6429" />
                                                                                <Key frame="126" value="-60.6429" />
                                                                                <Key frame="201" value="-62.8402" />
                                                                                <Key frame="226" value="-61.7855" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="101" value="14.8513" />
                                                                                <Key frame="126" value="14.7634" />
                                                                                <Key frame="201" value="3.60116" />
                                                                                <Key frame="226" value="5.2711" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="101" value="0.1248" />
                                                                                <Key frame="126" value="0.1248" />
                                                                                <Key frame="201" value="0.2" />
                                                                                <Key frame="226" value="0.2" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="99" value="56.6926" />
                                                                                <Key frame="124" value="56.6047" />
                                                                                <Key frame="199" value="56.4289" />
                                                                                <Key frame="224" value="56.7805" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="99" value="-11.6041" />
                                                                                <Key frame="124" value="-11.6041" />
                                                                                <Key frame="199" value="-11.7799" />
                                                                                <Key frame="224" value="-11.8678" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="99" value="36.7363" />
                                                                                <Key frame="124" value="36.6484" />
                                                                                <Key frame="199" value="36.4727" />
                                                                                <Key frame="224" value="36.8242" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="99" value="68.6458" />
                                                                                <Key frame="124" value="68.7337" />
                                                                                <Key frame="199" value="67.4154" />
                                                                                <Key frame="224" value="67.4154" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="99" value="-18.196" />
                                                                                <Key frame="124" value="-18.196" />
                                                                                <Key frame="199" value="-7.29742" />
                                                                                <Key frame="224" value="-8.26423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="99" value="0.224" />
                                                                                <Key frame="124" value="0.2244" />
                                                                                <Key frame="199" value="0.3" />
                                                                                <Key frame="224" value="0.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="-41.7462" />
                                                                                <Key frame="125" value="-41.6583" />
                                                                                <Key frame="200" value="-41.3067" />
                                                                                <Key frame="225" value="-41.3067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="16.7018" />
                                                                                <Key frame="125" value="16.7018" />
                                                                                <Key frame="200" value="18.1081" />
                                                                                <Key frame="225" value="18.0202" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="-88.8561" />
                                                                                <Key frame="125" value="-89.2077" />
                                                                                <Key frame="200" value="-89.1198" />
                                                                                <Key frame="225" value="-89.1198" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="80.1548" />
                                                                                <Key frame="125" value="79.8912" />
                                                                                <Key frame="200" value="85.1647" />
                                                                                <Key frame="225" value="84.9889" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="50.0959" />
                                                                                <Key frame="125" value="50.0959" />
                                                                                <Key frame="200" value="46.9318" />
                                                                                <Key frame="225" value="46.9318" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="0.178188" />
                                                                                <Key frame="125" value="0.178188" />
                                                                                <Key frame="200" value="0.266079" />
                                                                                <Key frame="225" value="0.353971" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="-16.9607" />
                                                                                <Key frame="125" value="-16.8728" />
                                                                                <Key frame="200" value="-17.4002" />
                                                                                <Key frame="225" value="-17.2244" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="-90.7067" />
                                                                                <Key frame="125" value="-90.6188" />
                                                                                <Key frame="200" value="-90.6188" />
                                                                                <Key frame="225" value="-90.6188" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="83.8511" />
                                                                                <Key frame="125" value="83.6753" />
                                                                                <Key frame="200" value="88.8609" />
                                                                                <Key frame="225" value="88.773" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="47.4639" />
                                                                                <Key frame="125" value="47.4639" />
                                                                                <Key frame="200" value="44.3877" />
                                                                                <Key frame="225" value="44.4756" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="100" value="0.617646" />
                                                                                <Key frame="125" value="0.617646" />
                                                                                <Key frame="200" value="-0.0854875" />
                                                                                <Key frame="225" value="-0.173379" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Pause on demand (beta)" timeout="-1" />
                                                                    <Resource name="Arms" type="Pause on demand (beta)" timeout="-1" />
                                                                    <Resource name="Legs" type="Pause on demand (beta)" timeout="-1" />
                                                                </Box>
                                                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Box name="Sensors Reactivity" robot="" id="12" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="381" y="139">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="onLeftBumper" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Bumper/Foot/Left/Touched" inner="1" tooltip="" id="4" />
                                                <Input name="onRightBumper" type="0" type_size="1" nature="4" stm_value_name="Life/Sensors/Bumper/Foot/Right/Touched" inner="1" tooltip="" id="5" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                                                <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="Secondary" mute="0">
                                                        <BehaviorKeyframe name="Secondary" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Bumper_1" robot="" id="12" tooltip="tags:&#x0A;bumper; foot; touch" bitmap_expanded="1" plugin="" x="254" y="8">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="LED" mute="0">
                                                                            <BehaviorKeyframe name="hey" index="5" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="Light_SurprisedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Surprise&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SurprisedEyes.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="115" y="68">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.3;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xffff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0xffff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLed4", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.post.fadeRGB( "FaceLed7", 0xffff00, rTime );      
      ALLeds.fadeRGB( "FaceLed4", 0xffff00, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-15.3835" />
                                                                                <Key frame="33" value="-17.1413" />
                                                                                <Key frame="48" value="9.05044" />
                                                                                <Key frame="59" value="12.3903" />
                                                                                <Key frame="84" value="-0.353971" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="30.2323" />
                                                                                <Key frame="33" value="29.705" />
                                                                                <Key frame="48" value="30.5839" />
                                                                                <Key frame="59" value="30.5839" />
                                                                                <Key frame="84" value="-8.87947" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="92.987" />
                                                                                <Key frame="44" value="97.6453" />
                                                                                <Key frame="55" value="97.118" />
                                                                                <Key frame="81" value="89.4714" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="9.66569" />
                                                                                <Key frame="44" value="9.05044" />
                                                                                <Key frame="55" value="8.25942" />
                                                                                <Key frame="81" value="7.55628" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-97.0349" />
                                                                                <Key frame="44" value="-114.701" />
                                                                                <Key frame="55" value="-119.271" />
                                                                                <Key frame="81" value="-67.9427" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-28.3866" />
                                                                                <Key frame="44" value="-32.3418" />
                                                                                <Key frame="55" value="-29.9687" />
                                                                                <Key frame="81" value="-28.5624" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-37.4443" />
                                                                                <Key frame="44" value="-39.29" />
                                                                                <Key frame="81" value="5.71056" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="0.0680262" />
                                                                                <Key frame="44" value="0.0680262" />
                                                                                <Key frame="81" value="0.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="102.22" />
                                                                                <Key frame="40" value="99.9353" />
                                                                                <Key frame="51" value="99.8474" />
                                                                                <Key frame="77" value="87.6305" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-5.18802" />
                                                                                <Key frame="40" value="-6.77007" />
                                                                                <Key frame="51" value="-5.3638" />
                                                                                <Key frame="77" value="-4.74856" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="114.784" />
                                                                                <Key frame="40" value="119.97" />
                                                                                <Key frame="51" value="119.794" />
                                                                                <Key frame="77" value="67.3227" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="35.7743" />
                                                                                <Key frame="40" value="28.6551" />
                                                                                <Key frame="51" value="24.7879" />
                                                                                <Key frame="77" value="24.0847" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="6" />
                                                                                <Key frame="40" value="6.3258" />
                                                                                <Key frame="77" value="9.31412" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="0.139662" />
                                                                                <Key frame="40" value="0.139662" />
                                                                                <Key frame="77" value="0.302" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-26.8926" />
                                                                                <Key frame="53" value="-26.8925" />
                                                                                <Key frame="79" value="-8.96255" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="0.774103" />
                                                                                <Key frame="53" value="0.705538" />
                                                                                <Key frame="79" value="6.24272" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-0.180802" />
                                                                                <Key frame="53" value="-0.261271" />
                                                                                <Key frame="79" value="11.6041" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="2.4341" />
                                                                                <Key frame="53" value="2.37067" />
                                                                                <Key frame="79" value="-5.27591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="6" />
                                                                                <Key frame="53" value="6.15002" />
                                                                                <Key frame="79" value="3.86483" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-5" />
                                                                                <Key frame="53" value="-5.00742" />
                                                                                <Key frame="79" value="-5.79845" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="0" />
                                                                                <Key frame="53" value="0.178188" />
                                                                                <Key frame="79" value="-3.60116" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-1.15253" />
                                                                                <Key frame="53" value="-1.0571" />
                                                                                <Key frame="79" value="11.072" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="1.45326" />
                                                                                <Key frame="53" value="1.40867" />
                                                                                <Key frame="79" value="-3.95272" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="7" />
                                                                                <Key frame="53" value="6.94585" />
                                                                                <Key frame="79" value="3.86964" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="1" />
                                                                                <Key frame="53" value="1.0571" />
                                                                                <Key frame="79" value="3.78175" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Standing" type="Lock" timeout="2" />
                                                                    <Resource name="Left eye" type="Lock" timeout="2" />
                                                                    <Resource name="Right eye" type="Lock" timeout="2" />
                                                                    <Resource name="All motors" type="Lock" timeout="2" />
                                                                </Box>
                                                                <Box name="Bumper_2" robot="" id="14" tooltip="tags:&#x0A;bumper; foot; touch" bitmap_expanded="1" plugin="" x="257" y="111">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="LED" mute="0">
                                                                            <BehaviorKeyframe name="hey" index="5" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="Light_SurprisedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Surprise&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SurprisedEyes.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="115" y="68">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.3;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xffff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0xffff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLed4", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.post.fadeRGB( "FaceLed7", 0xffff00, rTime );      
      ALLeds.fadeRGB( "FaceLed4", 0xffff00, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="15.3835" />
                                                                                <Key frame="33" value="17.1413" />
                                                                                <Key frame="48" value="-9.05044" />
                                                                                <Key frame="59" value="-12.3903" />
                                                                                <Key frame="81" value="-1.40867" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="30.2323" />
                                                                                <Key frame="33" value="29.705" />
                                                                                <Key frame="48" value="30.5839" />
                                                                                <Key frame="59" value="30.5839" />
                                                                                <Key frame="81" value="-9.40682" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="102.22" />
                                                                                <Key frame="40" value="99.9353" />
                                                                                <Key frame="51" value="99.8474" />
                                                                                <Key frame="73" value="88.153" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="5.18802" />
                                                                                <Key frame="40" value="6.77007" />
                                                                                <Key frame="51" value="5.3638" />
                                                                                <Key frame="73" value="5.00742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-114.784" />
                                                                                <Key frame="40" value="-119.97" />
                                                                                <Key frame="51" value="-119.794" />
                                                                                <Key frame="73" value="-68.0306" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-35.7743" />
                                                                                <Key frame="40" value="-28.6551" />
                                                                                <Key frame="51" value="-24.7879" />
                                                                                <Key frame="73" value="-26.8046" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-6" />
                                                                                <Key frame="40" value="-6.3258" />
                                                                                <Key frame="73" value="5.97423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="0.139662" />
                                                                                <Key frame="40" value="0.139662" />
                                                                                <Key frame="73" value="0.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="92.987" />
                                                                                <Key frame="44" value="97.6453" />
                                                                                <Key frame="55" value="97.118" />
                                                                                <Key frame="77" value="88.773" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-9.66569" />
                                                                                <Key frame="44" value="-9.05044" />
                                                                                <Key frame="55" value="-8.25942" />
                                                                                <Key frame="77" value="-6.15482" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="97.0349" />
                                                                                <Key frame="44" value="114.701" />
                                                                                <Key frame="55" value="119.271" />
                                                                                <Key frame="77" value="67.3227" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="28.3866" />
                                                                                <Key frame="44" value="32.3418" />
                                                                                <Key frame="55" value="29.9687" />
                                                                                <Key frame="77" value="24.7" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="37.4443" />
                                                                                <Key frame="44" value="39.29" />
                                                                                <Key frame="77" value="10.5446" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="0.0680262" />
                                                                                <Key frame="44" value="0.0680262" />
                                                                                <Key frame="77" value="0.3024" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-26.8926" />
                                                                                <Key frame="53" value="-26.8925" />
                                                                                <Key frame="75" value="-9.13834" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="0" />
                                                                                <Key frame="53" value="0.00240423" />
                                                                                <Key frame="75" value="6.4185" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-1.15253" />
                                                                                <Key frame="53" value="-1.31597" />
                                                                                <Key frame="75" value="11.6041" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="1.45326" />
                                                                                <Key frame="53" value="1.40386" />
                                                                                <Key frame="75" value="-5.27591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="7" />
                                                                                <Key frame="53" value="6.94104" />
                                                                                <Key frame="75" value="3.95272" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-1" />
                                                                                <Key frame="53" value="-1.14019" />
                                                                                <Key frame="75" value="-6.15002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-0.774103" />
                                                                                <Key frame="53" value="-0.876513" />
                                                                                <Key frame="75" value="-3.77694" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-0.180802" />
                                                                                <Key frame="53" value="-0.441863" />
                                                                                <Key frame="75" value="10.8962" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="2.4341" />
                                                                                <Key frame="53" value="2.1997" />
                                                                                <Key frame="75" value="-4.2164" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="6" />
                                                                                <Key frame="53" value="5.97904" />
                                                                                <Key frame="75" value="3.60596" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="5" />
                                                                                <Key frame="53" value="4.92434" />
                                                                                <Key frame="75" value="3.78175" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Standing" type="Lock" timeout="2" />
                                                                    <Resource name="Left eye" type="Lock" timeout="2" />
                                                                    <Resource name="Right eye" type="Lock" timeout="2" />
                                                                    <Resource name="All motors" type="Lock" timeout="2" />
                                                                </Box>
                                                                <Box name="Bumper_3" robot="" id="15" tooltip="tags:&#x0A;bumper; foot; touch" bitmap_expanded="1" plugin="" x="261" y="227">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="LED" mute="0">
                                                                            <BehaviorKeyframe name="hey" index="5" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="Light_SurprisedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Surprise&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SurprisedEyes.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="115" y="68">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.3;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xffff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0xffff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLed4", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.post.fadeRGB( "FaceLed7", 0xffff00, rTime );      
      ALLeds.fadeRGB( "FaceLed4", 0xffff00, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="5.44688" />
                                                                                <Key frame="33" value="13.2692" />
                                                                                <Key frame="48" value="-16.7897" />
                                                                                <Key frame="59" value="-11.8678" />
                                                                                <Key frame="82" value="-1.40867" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="30.5839" />
                                                                                <Key frame="33" value="30.5839" />
                                                                                <Key frame="48" value="30.4081" />
                                                                                <Key frame="59" value="30.6718" />
                                                                                <Key frame="82" value="-9.05525" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="102.22" />
                                                                                <Key frame="40" value="99.9353" />
                                                                                <Key frame="51" value="99.8474" />
                                                                                <Key frame="75" value="88.2409" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="5.18802" />
                                                                                <Key frame="40" value="6.77007" />
                                                                                <Key frame="51" value="5.3638" />
                                                                                <Key frame="75" value="5.00742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-114.784" />
                                                                                <Key frame="40" value="-119.97" />
                                                                                <Key frame="51" value="-119.794" />
                                                                                <Key frame="75" value="-68.0306" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-35.7743" />
                                                                                <Key frame="40" value="-28.6551" />
                                                                                <Key frame="51" value="-24.7879" />
                                                                                <Key frame="75" value="-26.7167" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-6" />
                                                                                <Key frame="40" value="-6.3258" />
                                                                                <Key frame="75" value="5.97423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="0.139662" />
                                                                                <Key frame="40" value="0.139662" />
                                                                                <Key frame="75" value="0.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="92.987" />
                                                                                <Key frame="44" value="97.6453" />
                                                                                <Key frame="55" value="97.118" />
                                                                                <Key frame="79" value="88.773" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-9.66569" />
                                                                                <Key frame="44" value="-9.05044" />
                                                                                <Key frame="55" value="-8.25942" />
                                                                                <Key frame="79" value="-6.24272" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="97.0349" />
                                                                                <Key frame="44" value="114.701" />
                                                                                <Key frame="55" value="119.271" />
                                                                                <Key frame="79" value="67.3227" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="28.3866" />
                                                                                <Key frame="44" value="32.3418" />
                                                                                <Key frame="55" value="29.9687" />
                                                                                <Key frame="79" value="24.5242" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="37.4443" />
                                                                                <Key frame="44" value="39.29" />
                                                                                <Key frame="79" value="10.4567" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="0.0680262" />
                                                                                <Key frame="44" value="0.0680262" />
                                                                                <Key frame="79" value="0.302" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-26.8926" />
                                                                                <Key frame="53" value="-26.8925" />
                                                                                <Key frame="77" value="-9.13834" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="0" />
                                                                                <Key frame="53" value="-0.0854875" />
                                                                                <Key frame="77" value="6.33061" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-1.15253" />
                                                                                <Key frame="53" value="-1.31597" />
                                                                                <Key frame="77" value="11.692" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="1.45326" />
                                                                                <Key frame="53" value="1.40386" />
                                                                                <Key frame="77" value="-5.10012" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="7" />
                                                                                <Key frame="53" value="7.11683" />
                                                                                <Key frame="77" value="4.04062" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-1" />
                                                                                <Key frame="53" value="-1.14019" />
                                                                                <Key frame="77" value="-6.15002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-0.774103" />
                                                                                <Key frame="53" value="-0.876513" />
                                                                                <Key frame="77" value="-3.86483" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-0.180802" />
                                                                                <Key frame="53" value="-0.353971" />
                                                                                <Key frame="77" value="10.8083" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="2.4341" />
                                                                                <Key frame="53" value="2.28759" />
                                                                                <Key frame="77" value="-4.30429" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="6" />
                                                                                <Key frame="53" value="5.89115" />
                                                                                <Key frame="77" value="3.60596" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="5" />
                                                                                <Key frame="53" value="4.92434" />
                                                                                <Key frame="77" value="3.60596" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Standing" type="Lock" timeout="2" />
                                                                    <Resource name="Left eye" type="Lock" timeout="2" />
                                                                    <Resource name="Right eye" type="Lock" timeout="2" />
                                                                    <Resource name="All motors" type="Lock" timeout="2" />
                                                                </Box>
                                                                <Box name="Bumper_1" robot="" id="16" tooltip="tags:&#x0A;bumper; foot; touch" bitmap_expanded="1" plugin="" x="380" y="8">
                                                                    <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="LED" mute="0">
                                                                            <BehaviorKeyframe name="hey" index="5" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="Light_SurprisedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Surprise&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SurprisedEyes.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="115" y="68">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.3;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xffff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0xffff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLed4", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.post.fadeRGB( "FaceLed7", 0xffff00, rTime );      
      ALLeds.fadeRGB( "FaceLed4", 0xffff00, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="-25.7547" />
                                                                                <Key frame="47" value="-27.0731" />
                                                                                <Key frame="71" value="9.05044" />
                                                                                <Key frame="89" value="19.0701" />
                                                                                <Key frame="120" value="-1.76024" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="26.8925" />
                                                                                <Key frame="47" value="23.9041" />
                                                                                <Key frame="71" value="30.5839" />
                                                                                <Key frame="89" value="27.6835" />
                                                                                <Key frame="120" value="-2.1997" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="34.4" />
                                                                                <Key frame="35" value="29.9" />
                                                                                <Key frame="56" value="28.4" />
                                                                                <Key frame="85" value="67.2" />
                                                                                <Key frame="117" value="52.9963" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="10.3688" />
                                                                                <Key frame="56" value="17.6638" />
                                                                                <Key frame="85" value="21.9705" />
                                                                                <Key frame="117" value="13.445" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-8.17633" />
                                                                                <Key frame="56" value="-3.07861" />
                                                                                <Key frame="85" value="-76.9956" />
                                                                                <Key frame="117" value="-24.6121" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-48.4259" />
                                                                                <Key frame="56" value="-75.7603" />
                                                                                <Key frame="85" value="-87.8893" />
                                                                                <Key frame="117" value="-72.1567" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="8.17153" />
                                                                                <Key frame="85" value="6.06212" />
                                                                                <Key frame="117" value="5.71056" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="0.0549355" />
                                                                                <Key frame="85" value="0.0549355" />
                                                                                <Key frame="117" value="0.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="62.7" />
                                                                                <Key frame="52" value="58.3" />
                                                                                <Key frame="81" value="56.8" />
                                                                                <Key frame="113" value="56.2531" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="-34.456" />
                                                                                <Key frame="52" value="-32.1708" />
                                                                                <Key frame="81" value="-23.6453" />
                                                                                <Key frame="113" value="-15.4713" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="62.8402" />
                                                                                <Key frame="52" value="60.6429" />
                                                                                <Key frame="81" value="49.3049" />
                                                                                <Key frame="113" value="28.2987" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="89.2125" />
                                                                                <Key frame="52" value="89.8278" />
                                                                                <Key frame="81" value="88.9488" />
                                                                                <Key frame="113" value="74.7104" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="9.84147" />
                                                                                <Key frame="81" value="9.75358" />
                                                                                <Key frame="113" value="-3.60596" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="0.150571" />
                                                                                <Key frame="81" value="0.150935" />
                                                                                <Key frame="113" value="0.3004" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-54.2269" />
                                                                                <Key frame="83" value="-33.5724" />
                                                                                <Key frame="115" value="-35.418" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="19.495" />
                                                                                <Key frame="83" value="7.89333" />
                                                                                <Key frame="115" value="15.8229" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-90" />
                                                                                <Key frame="83" value="-90" />
                                                                                <Key frame="115" value="-90.3503" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="55" />
                                                                                <Key frame="83" value="77.7573" />
                                                                                <Key frame="115" value="79.8033" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="45" />
                                                                                <Key frame="83" value="44.5547" />
                                                                                <Key frame="115" value="47.9865" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-1.21168" />
                                                                                <Key frame="83" value="1.51296" />
                                                                                <Key frame="115" value="-0.524946" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="3.90872" />
                                                                                <Key frame="83" value="-5.31991" />
                                                                                <Key frame="115" value="-15.2908" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-90" />
                                                                                <Key frame="83" value="-90" />
                                                                                <Key frame="115" value="-90.7067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="86.4446" />
                                                                                <Key frame="83" value="55.9461" />
                                                                                <Key frame="115" value="80.5112" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="45" />
                                                                                <Key frame="83" value="43.0547" />
                                                                                <Key frame="115" value="48.6944" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-10" />
                                                                                <Key frame="83" value="-3.44298" />
                                                                                <Key frame="115" value="1.0571" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Lock" timeout="2" />
                                                                    <Resource name="Left eye" type="Lock" timeout="2" />
                                                                    <Resource name="Right eye" type="Lock" timeout="2" />
                                                                    <Resource name="All motors" type="Lock" timeout="2" />
                                                                </Box>
                                                                <Box name="Bumper_2" robot="" id="17" tooltip="tags:&#x0A;bumper; foot; touch" bitmap_expanded="1" plugin="" x="381" y="112">
                                                                    <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="LED" mute="0">
                                                                            <BehaviorKeyframe name="hey" index="5" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="Light_SurprisedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Surprise&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SurprisedEyes.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="115" y="68">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.3;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xffff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0xffff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLed4", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.post.fadeRGB( "FaceLed7", 0xffff00, rTime );      
      ALLeds.fadeRGB( "FaceLed4", 0xffff00, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="15.3835" />
                                                                                <Key frame="36" value="19.7732" />
                                                                                <Key frame="54" value="-9.05044" />
                                                                                <Key frame="68" value="-17.1413" />
                                                                                <Key frame="91" value="-2.99072" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="30.2323" />
                                                                                <Key frame="36" value="30.0566" />
                                                                                <Key frame="54" value="30.5839" />
                                                                                <Key frame="68" value="30.1445" />
                                                                                <Key frame="91" value="-2.11181" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="59.8" />
                                                                                <Key frame="64" value="49.3" />
                                                                                <Key frame="76" value="44.8" />
                                                                                <Key frame="87" value="52.9084" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="24.2557" />
                                                                                <Key frame="64" value="25.662" />
                                                                                <Key frame="87" value="13.445" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-78.9292" />
                                                                                <Key frame="64" value="-48.7823" />
                                                                                <Key frame="87" value="-24.7" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-81.8248" />
                                                                                <Key frame="64" value="-77.9576" />
                                                                                <Key frame="87" value="-69.52" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="1.14019" />
                                                                                <Key frame="64" value="1.14019" />
                                                                                <Key frame="87" value="4.2164" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="0.05639" />
                                                                                <Key frame="64" value="0.05639" />
                                                                                <Key frame="87" value="0.3004" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="44.8" />
                                                                                <Key frame="60" value="52.3" />
                                                                                <Key frame="72" value="46.3" />
                                                                                <Key frame="83" value="55.9894" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-20.4812" />
                                                                                <Key frame="60" value="-26.7215" />
                                                                                <Key frame="83" value="-15.8229" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="34.8027" />
                                                                                <Key frame="60" value="59.4124" />
                                                                                <Key frame="83" value="28.4745" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="67.5033" />
                                                                                <Key frame="60" value="65.1302" />
                                                                                <Key frame="83" value="72.6889" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="6.23791" />
                                                                                <Key frame="60" value="6.3258" />
                                                                                <Key frame="83" value="-3.34229" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="0.150935" />
                                                                                <Key frame="60" value="0.151299" />
                                                                                <Key frame="83" value="0.3004" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-42.3615" />
                                                                                <Key frame="62" value="-42.4494" />
                                                                                <Key frame="85" value="-35.3301" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="11.4969" />
                                                                                <Key frame="62" value="10.3543" />
                                                                                <Key frame="85" value="15.9987" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-87.721" />
                                                                                <Key frame="62" value="-88.3362" />
                                                                                <Key frame="85" value="-90.1745" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="72.1322" />
                                                                                <Key frame="62" value="74.5932" />
                                                                                <Key frame="85" value="79.9791" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="44.4668" />
                                                                                <Key frame="62" value="43.9394" />
                                                                                <Key frame="85" value="47.8986" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="2.30399" />
                                                                                <Key frame="62" value="4.23761" />
                                                                                <Key frame="85" value="-0.437054" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-6.19883" />
                                                                                <Key frame="62" value="-4.52889" />
                                                                                <Key frame="85" value="-15.3786" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-90" />
                                                                                <Key frame="62" value="-90" />
                                                                                <Key frame="85" value="-90.7067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="82.2258" />
                                                                                <Key frame="62" value="83.7199" />
                                                                                <Key frame="85" value="80.5112" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="44.0215" />
                                                                                <Key frame="62" value="43.1426" />
                                                                                <Key frame="85" value="48.6944" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-6.78286" />
                                                                                <Key frame="62" value="-7.57389" />
                                                                                <Key frame="85" value="1.0571" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Lock" timeout="2" />
                                                                    <Resource name="Left eye" type="Lock" timeout="2" />
                                                                    <Resource name="Right eye" type="Lock" timeout="2" />
                                                                    <Resource name="All motors" type="Lock" timeout="2" />
                                                                </Box>
                                                                <Box name="Bumper_3" robot="" id="18" tooltip="tags:&#x0A;bumper; foot; touch" bitmap_expanded="1" plugin="" x="385" y="227">
                                                                    <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="LED" mute="0">
                                                                            <BehaviorKeyframe name="hey" index="5" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="Light_SurprisedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Surprise&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SurprisedEyes.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="115" y="68">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.3;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xffff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0xffff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLed4", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.post.fadeRGB( "FaceLed7", 0xffff00, rTime );      
      ALLeds.fadeRGB( "FaceLed4", 0xffff00, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-15.3835" />
                                                                                <Key frame="36" value="-19.7732" />
                                                                                <Key frame="54" value="9.05044" />
                                                                                <Key frame="68" value="17.1413" />
                                                                                <Key frame="90" value="-1.84813" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="30.2323" />
                                                                                <Key frame="36" value="30.0566" />
                                                                                <Key frame="54" value="30.5839" />
                                                                                <Key frame="68" value="30.1445" />
                                                                                <Key frame="90" value="-2.1997" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="38.8" />
                                                                                <Key frame="60" value="50.8" />
                                                                                <Key frame="72" value="44.8" />
                                                                                <Key frame="83" value="53.26" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="20.4812" />
                                                                                <Key frame="60" value="26.7215" />
                                                                                <Key frame="83" value="13.3571" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-34.8027" />
                                                                                <Key frame="60" value="-59.4124" />
                                                                                <Key frame="83" value="-24.4363" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-67.5033" />
                                                                                <Key frame="60" value="-65.1302" />
                                                                                <Key frame="83" value="-72.1567" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-6.23791" />
                                                                                <Key frame="60" value="-6.3258" />
                                                                                <Key frame="83" value="4.2164" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="0.150935" />
                                                                                <Key frame="60" value="0.151299" />
                                                                                <Key frame="83" value="0.3004" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="56.8" />
                                                                                <Key frame="64" value="46.3" />
                                                                                <Key frame="87" value="55.3742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-24.2557" />
                                                                                <Key frame="64" value="-25.662" />
                                                                                <Key frame="87" value="-15.5592" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="78.9292" />
                                                                                <Key frame="64" value="48.7823" />
                                                                                <Key frame="87" value="27.7714" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="81.8248" />
                                                                                <Key frame="64" value="77.9576" />
                                                                                <Key frame="87" value="72.0736" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-1.14019" />
                                                                                <Key frame="64" value="-1.14019" />
                                                                                <Key frame="87" value="-3.51807" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="0.05639" />
                                                                                <Key frame="64" value="0.05639" />
                                                                                <Key frame="87" value="0.3016" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-42.3615" />
                                                                                <Key frame="62" value="-42.4494" />
                                                                                <Key frame="85" value="-35.3301" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="6.19883" />
                                                                                <Key frame="62" value="4.52889" />
                                                                                <Key frame="85" value="15.9987" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-90" />
                                                                                <Key frame="62" value="-90" />
                                                                                <Key frame="85" value="-90.1745" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="82.2258" />
                                                                                <Key frame="62" value="83.7199" />
                                                                                <Key frame="85" value="79.9791" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="44.0215" />
                                                                                <Key frame="62" value="43.1426" />
                                                                                <Key frame="85" value="47.8986" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="6.78286" />
                                                                                <Key frame="62" value="7.57389" />
                                                                                <Key frame="85" value="-0.437054" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-11.4969" />
                                                                                <Key frame="62" value="-10.3543" />
                                                                                <Key frame="85" value="-15.3786" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-87.721" />
                                                                                <Key frame="62" value="-88.3362" />
                                                                                <Key frame="85" value="-90.7067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="72.1322" />
                                                                                <Key frame="62" value="74.5932" />
                                                                                <Key frame="85" value="80.5112" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="44.4668" />
                                                                                <Key frame="62" value="43.9394" />
                                                                                <Key frame="85" value="48.6944" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="30" value="-2.30399" />
                                                                                <Key frame="62" value="-4.23761" />
                                                                                <Key frame="85" value="1.0571" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Lock" timeout="2" />
                                                                    <Resource name="Left eye" type="Lock" timeout="2" />
                                                                    <Resource name="Right eye" type="Lock" timeout="2" />
                                                                    <Resource name="All motors" type="Lock" timeout="2" />
                                                                </Box>
                                                                <Box name="Randomize" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="96" y="59">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        val = random.randint(1, 3)
        func = getattr(self, "on" + str(val))
        func()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="on1" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="on2" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                    <Output name="on3" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="14" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="15" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="17" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="18" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Box name="Timer" robot="" id="9" tooltip="Send a bang with a predefined period." bitmap_expanded="1" plugin="" x="126" y="252">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import threading # opkg install python-threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False;

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value (seconds)." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the timer." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="600" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds). The box output will be stimulated at this period." id="6" />
                                            </Box>
                                            <Box name="Toggle" robot="" id="14" tooltip="Toggle&#x0A;v0.9&#x0A;&#x0A;Activate one input, then the other, then the first one, then ..." bitmap_expanded="1" plugin="" x="259" y="256">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import mutex

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.mutex = mutex.mutex()
        self.other = False

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self, p):
        while self.mutex.testandset() == False:
            time.sleep(0.3)
        self.other = not self.other
        if self.other:
            self.output_1(p)
        else:
            self.output_2(p)
        
        self.mutex.unlock()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="one output" id="3" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="then the others" id="4" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="3" />
                                            <Link inputowner="11" indexofinput="2" outputowner="1" indexofoutput="3" />
                                            <Link inputowner="3" indexofinput="2" outputowner="10" indexofoutput="5" />
                                            <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                            <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="6" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                            <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" />
                                            <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="5" />
                                            <Link inputowner="13" indexofinput="2" outputowner="14" indexofoutput="3" />
                                            <Link inputowner="13" indexofinput="3" outputowner="14" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Interactive Activity" index="32" bitmap="media/images/box/interaction/social_behavior.png">
                                        <Diagram scale="-1">
                                            <Box name="Goto And Stop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="639" y="39">
                                                <bitmap>media/images/bonjour/star_on.png</bitmap>
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALMemory.insertData("Life/State", self.getParameter("Frame name"))
        self.gotoAndStopParent(self.getParameter("Frame name"))

    def onInput_onStop(self):
        ""]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="PlayBehavior" robot="" id="8" tooltip="Load and play a subBehavior." bitmap_expanded="1" plugin="" x="505" y="192">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.behaviorManager = ALProxy("ALBehaviorManager")
        self.bIsRunning = False
        self.bStop = False
        self.sBehavior = ""

    def onLoad(self):
        #~ puts code for box initialization here
        self.bIsRunning = False
        self.bStop = False

    def onUnload(self):
        #~ puts code for box cleanup here
        self.bStop = True
        if self.sBehavior != "":
            if self.behaviorManager.isBehaviorRunning(self.sBehavior):
                try:
                    self.behaviorManager.stopBehavior(self.sBehavior)
                except:
                    pass

    def onInput_onStart(self, p):
        #~ self.onStopped() #~ activate output of the box
        if self.bIsRunning:
            return
        self.bIsRunning = True
        self.sBehavior = p
        try:
            if not self.bStop:
                bLoad = self.behaviorManager.preloadBehavior(self.sBehavior)
                self.onLoaded()
        except:
            pass
        try:
            if not self.bStop:
                self.behaviorManager.runBehavior(self.sBehavior)
        except:
            pass
        self.bIsRunning = False
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                <Output name="onLoaded" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                            </Box>
                                            <Box name="getBehavior" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="352" y="54">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.behaviorProxy = ALProxy("ALBehaviorManager")

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        #~ self.onStopped(p) #~ activate output of the box
        self.aBehaviors = ALMemory.getData("naos-life_interactive-life_behaviors_backup")
        try:
            if isinstance(p, basestring):
                if p == "timeout":
                    self.onStopped(self.aBehaviors[0])
                else:
                    self.onQuit()
            else:
                if p < len(self.aBehaviors) -1:
                    if self.aBehaviors[p] == "no_behavior":
                        self.onQuit()
                    else:
                        self.onStopped(self.aBehaviors[p])
                else:
                    aBehaviors = self.behaviorProxy.getInstalledBehaviors()
                    aInteractiveBehaviors = [b for b in aBehaviors if b.startswith("channel_naos-life-interactive") ] 
                    sChosenBehavior = self.aBehaviors[0]
                    aInteractiveBehaviors.remove(sChosenBehavior)
                    sBehavior = random.choice(aInteractiveBehaviors)
                    self.onStopped(sBehavior)
        except:
            self.onQuit()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onQuit" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                            </Box>
                                            <Box name="BrainLeds_AnimWaitLoading" robot="" id="2" tooltip="Worm animation on brain leds, to show that the behavior is loading." bitmap_expanded="1" plugin="" x="497" y="324">
                                                <bitmap>media/images/box/icons_appu/brainleds2_n&amp;b.png</bitmap>
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

def getBrainLedName( nNumLed ):
    "get the name of the dcm led device by it's number"
    "0 => front left; 1 => next in clock wise"
    if( nNumLed <= 1 ):
        return "Head/Led/Front/Right/%d/Actuator/Value" % (1-nNumLed);
    if( nNumLed >= 10 ):
        return "Head/Led/Front/Left/%d/Actuator/Value" % (nNumLed-10);
    if( nNumLed <= 2 ):
        return "Head/Led/Middle/Right/%d/Actuator/Value" % (2-nNumLed);
    if( nNumLed >= 9 ):
        return "Head/Led/Middle/Left/%d/Actuator/Value" % (nNumLed-9);

    if( nNumLed <= 5 ):
        return "Head/Led/Rear/Right/%d/Actuator/Value" % (nNumLed-3);
    if( nNumLed >= 6 ):
        return "Head/Led/Rear/Left/%d/Actuator/Value" % (8-nNumLed);

    print( "ERR: getBrainLedName: index out of range (%d)" % nNumLed );
    return "";
    
class MyClass(GeneratedClass):
    """ insert here your comments about this class """
    def __init__(self):
        GeneratedClass.__init__(self);
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        self.bMustStop = False;
        self.bIsRunning = False;

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        self.log( self.boxName + ": start - begin" );
        
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" );
            return;

        self.bIsRunning = True;
        self.bMustStop = False;
        
        dcm = ALProxy( "DCM" );
        rValueMax = 0.8;
        nLenWorm = self.getParameter( 'nLenWorm' );
        nPosWorm = 0;
        while( not self.bMustStop ):
            rPeriod= self.getParameter( 'rPeriod' );
            # light the first one
            riseTime = dcm.getTime( int(rPeriod*1000) );
            strDeviceName = getBrainLedName( nPosWorm );
            dcm.set( [ strDeviceName, "Merge",  [[ rValueMax, riseTime ]] ] );
            strDeviceName = getBrainLedName( (nPosWorm-nLenWorm)%12 );            
            dcm.set( [ strDeviceName, "Merge",  [[ 0.0, riseTime ]] ] );            
            # erase last one
            nPosWorm += 1;
            if( nPosWorm > 11 ):
                nPosWorm = 0;
#            self.log( "nPosWorm: %d" % nPosWorm );
            time.sleep( rPeriod );
        # end while
        self.bIsRunning = False;
        self.onStopped();    
        self.log( self.boxName + ": start - end" ); 

    def onInput_onStop(self):
        self.bMustStop = True; # stop current loop execution
        ALLeds.fade("BrainLeds",0.0, 0.1)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="rPeriod" inherits_from_parent="0" content_type="2" value="0.05" default_value="0.5" min="0" max="100" tooltip="period in second (actually it&apos;s the period / 12)" id="5" />
                                                <Parameter name="nLenWorm" inherits_from_parent="0" content_type="1" value="4" default_value="4" min="1" max="10" tooltip="" id="6" />
                                            </Box>
                                            <Box name="DetectHeadSlap" robot="" id="7" tooltip="Detect head slap on head tactil sensor.&#x0A;It will end the application." bitmap_expanded="1" plugin="" x="503" y="86">
                                                <bitmap>media/images/box/interaction/face.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.bMustStop = False;
        self.bIsRunning = False;
        strTemplate ="%sTactilTouched";
        self.aVarName = [ ( strTemplate % "Front" ), ( strTemplate % "Middle" ), ( strTemplate % "Rear" ) ];
        self.aSequence = [       
                [
                    "Slap",
                    [ 0.0, 0.0, 0.0 ],
                    [ 1.0, 1.0, 1.0 ],
                    [ 0.0, 0.0, 0.0 ],
                ],
            ];
        self.anPosInSequence = [1]*len( self.aSequence ); # 1 * n; next waited combination of each sequence
        self.anErrorsInSequence = [0]*len( self.aSequence ); # 0 * n ; number of errors in current sequence
        self.nNbrMaxErrorsPerSequence = 2;
        

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        #~ 
        
        if( self.bIsRunning ):
            #~ 
            return;

        self.bIsRunning = True;
        self.bMustStop = False;
        
        while( not self.bMustStop ):
            # insert some good and powerful code there
            time.sleep( 0.100 );
            actualState = ALMemory.getListData( self.aVarName );
            #~ self.log( "actualState: %s" % str( actualState ) );
            
            # iterate each sequence to advance the counter
            nNumSequence = 0;
            for seq in self.aSequence:
                nCurrentLocation = self.anPosInSequence[nNumSequence];
                bAdvanceOne = False;                
                if( seq[nCurrentLocation] == actualState ):
                    # it's the next position, advancing
                    bAdvanceOne = True;
                else:
                    if( nCurrentLocation > 1 and seq[nCurrentLocation-1] != actualState ):
                        self.anErrorsInSequence[nNumSequence] += 1;
                        if( self.anErrorsInSequence[nNumSequence] > self.nNbrMaxErrorsPerSequence ):
                            # it's not the next sequence, and notthe  current one, restarting from the beginning
                            self.anErrorsInSequence[nNumSequence] = 0;
                            nCurrentLocation = 1;
                            if( seq[nCurrentLocation] == actualState ): # it's the first one, advancing to the following
                                bAdvanceOne = True;
                            else:
                                self.anPosInSequence[nNumSequence] = nCurrentLocation; # reset it!
                # if( seq[nCurrentLocation] == actualState ) - end
    
                                
                if( bAdvanceOne ):
                    nCurrentLocation += 1;
                    if( nCurrentLocation >= len( seq ) ):
                        # activate the right output
                        #~ self.log( "triggerring: " + str( seq[0] ) );
                        func = getattr( self, "output_" +  str( seq[0] ) );
                        func();                    
                        self.anPosInSequence[nNumSequence] = 1;
                        self.anErrorsInSequence[nNumSequence] = 0;
                    else:
                        self.anPosInSequence[nNumSequence] = nCurrentLocation;
#                self.log( "seq: '%s', newPos: %d" % ( seq[0], self.anPosInSequence[nNumSequence] ) );
                nNumSequence += 1;
                # for seq - end
        # while - end
        self.bIsRunning = False;
        self.onStopped();
        #~ 

    def onInput_onStop(self):
        self.bMustStop = True; # stop current loop execution]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="qsdqsd" id="4" />
                                                <Output name="output_Slap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="ChoiceBox" robot="" id="4" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="226" y="50">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.aRepeat = ["Répéter/Quelle est la question ?","Repeat/What is the question?"]
        self.aHelp = ["Aide/Que puis-je faire ?","Help/What can I do?"]
        self.aStop = ["Stop/Arrêter/Quitter","Stop/Quit"]
        self.tts = ALProxy("ALTextToSpeech")
        self.bQuestion = False
        self.bChoice = False

    def onLoad(self):
        #~ puts code for box initialization here
        self.bQuestion = False
        self.bChoice = False
        self.aQuestion = ""
        self.aChoices = []

    def onUnload(self):
        #~ puts code for box cleanup here
        pass
        
    def onStart(self):
        #~ self.onStoppedQuestion(p) #~ activate output of the box
        self.bQuestion = False
        self.bChoice = False
        ALMemory.insertData("choicejams_choice_question", self.aQuestion)
        ALMemory.insertData("choicejams_choice_say", self.aQuestion)
        ALMemory.insertData("choicejams_choice_choices", self.aChoices)
        ALMemory.insertData("choicejams_choice_next", "Choice")
        self.gotoAndStop(1)

    def onInput_onStartQuestion(self, p):
        if p != None:
            self.aQuestion = p
        self.bQuestion = True
        if self.bChoice:
            self.onStart()

    def onInput_choicesList(self, p):
        #~ self.logger.debug("in onstart choices")
        if p != None:
            i = 1
            if self.tts.getLanguage() == "French":
                i = 0
            p.append(self.aRepeat[i])
            p.append(self.aHelp[i])
            p.append(self.aStop[i])
            self.aChoices = p
        self.bChoice = True
        if self.bQuestion:
            self.onStart()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStartQuestion" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is&#x0A;received on this input. The signal can be&#x0A;either a string so that NAO asks a&#x0A;question before the recognition of a&#x0A;choice, or a bang so that the speech&#x0A;recognition starts immediately without any question." id="2" />
                                                <Input name="choicesList" type="0" type_size="1" nature="1" inner="0" tooltip="To have extern choices list (for example,&#x0A;depending on extern variables).&#x0A;!! Warning !! : Must be set before each&#x0A;time the box is started (with onStart&#x0A;input). Otherwise, the choices displayed&#x0A;on the box will be selected." id="3" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                <Output name="other" type="0" type_size="1" nature="1" inner="0" tooltip='- &quot;timeout&quot; if the user has not replied.&#x0A;- &quot;notUnderstood&quot; if the interaction with the speech recognition failed.&#x0A;- &quot;onStop&quot; if the onStop input has been activated.&#x0A;- &quot;wordRecognised&quot; if the exit command has been understood.&#x0A;- &quot;onTactileSensor&quot; if the user has tapped the tactile sensor of NAO.&#x0A;- an integer being the number of the external choice in the input list.' id="5" />
                                                <Parameter name="Activate head" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="" id="6" />
                                                <Parameter name="Activate arms" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="7" />
                                                <Parameter name="Activate legs" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="8" />
                                                <Parameter name="Confidence" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="" id="9" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="10" default_value="5" min="0" max="15" tooltip="" id="10" />
                                                <Parameter name="Number of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="" id="11" />
                                                <Parameter name="Repeat choice" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="12" />
                                                <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="behavior_layer1" mute="0">
                                                        <BehaviorKeyframe name="Say" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Say Text" robot="" id="2" tooltip="Say the text set in parameters." bitmap_expanded="1" plugin="" x="83" y="9">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            p = ALMemory.getData("choicejams_choice_say")
        except:
            p = ""
        if p == None or p == "":
            self.onStopped() # activate output of the box
            self.bIsRunning = False
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="TactileCodes" robot="" id="3" tooltip="Detection de sequence tactile sur la tête de Nao." bitmap_expanded="1" plugin="" x="84" y="105">
                                                                    <bitmap>media/images/box/appu/fingerprint.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class SequenceHandler():
    def __init__(self, aSeq):
        self.aTactilSequence = aSeq
        self.reset()
    
    def reset(self):
        self.nTapTime = None
        self.nTapIndex = 2
        
    def update(self, aState, nTime):
        # In any case, if too much time elasped, sequence is invalidated
        if self.nTapTime != None and (nTime - self.nTapTime) > self.aTactilSequence[self.nTapIndex-1]:
            self.reset()
        # If current sensors state match current expected shape
        if aState == self.aTactilSequence[self.nTapIndex]:
            self.nTapTime = nTime
            self.nTapIndex += 2
        # If current sensor state does not match sequence at current index BUT match sequence at first index
        elif aState == self.aTactilSequence[1]:
            self.nTapTime = nTime
            self.nTapIndex = 4
        # If we've reach the end of the sequence, then output !!
        if self.nTapIndex > len(self.aTactilSequence):
            return self.aTactilSequence[0]
        else:
            return None
        
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        # Build a list of devices with full name
        self.aDeviceNames = ["%sTactilTouched" % name for name in ["Front", "Middle", "Rear"]]
        
        # Parameters
        parameters = [   ["SingleFront", "Single front", [1, 0, 0], 1.0, [0, 0, 0]],
                                ["SingleMiddle", "Single middle", [0, 1, 0], 1.0, [0, 0, 0]],
                                ["SingleRear", "Single rear", [0, 0, 1], 1.0, [0, 0, 0]],
                                ["CaressFtoR", "Caress front to rear", [1, 0, 0], 0.5, [1, 1, 0], 0.5, [0, 1, 0], 0.5, [0, 1, 1], 0.5, [0, 0, 1]],
                                ["CaressRtoF", "Caress rear to front", [0, 0, 1], 0.5, [0, 1, 1], 0.5, [0, 1, 0], 0.5, [1, 1, 0], 0.5, [1, 0, 0]],
                                ["SingleTap", "Single tap", [1, 1, 1], 0.5, [0, 0, 0]],
                                ["EnumerateFtoR", "Enumerate front to rear", [1, 0, 0], 1.0, [0, 1, 0], 1.0, [0, 0, 1]],
                                ["EnumerateRtoF", "Enumerate rear to front", [0, 0, 1], 1.0, [0, 1, 0], 1.0, [1, 0, 0]],
                                ["ZoomIn", "Zoom in", [1, 0, 1], 1.0, [0, 1, 0]],
                                ["ZoomOut", "Zoom out", [0, 1, 0], 1.0, [1, 0, 1]],
                                ["DoubleFront", "Double front", [1, 0, 0], 1.0, [0, 0, 0], 1.0, [1, 0, 0]],
                                ["DoubleMiddle", "Double middle", [0, 1, 0], 1.0, [0, 0, 0], 1.0, [0, 1, 0]],
                                ["DoubleRear", "Double rear", [0, 0, 1], 1.0, [0, 0, 0], 1.0, [0, 0, 1]],
                                ["DoubleTap", "Double tap", [1, 1, 1], 1.0, [0, 0, 0], 1.0, [1, 1, 1]],
                                ["SecretCode", "Secret code", [1, 0, 1], 1.0, [0, 0, 0], 1.0, [1, 0, 1], 1.0, [0, 1, 0]],                                
                                ["CalmDown", "Calm down", [1, 1, 1], 8.0, [0, 0, 0]]    ]
        # Create a sequence handler object for each enable sequence
        self.aSequenceHandler = []
        for seq in parameters:
            if self.getParameter(seq[1]):
                self.aSequenceHandler.append(SequenceHandler(seq))

    def onLoad(self):
        self.bIsRunning = False
        self.onInput_reset()
        
    def onUnload(self):
        self.onInput_onStop()

    def onSensorChange(self, pDataName, pValue, pMessage):
        "This is called whenever one of the three tactil sensors state change"    
        aState = ALMemory.getListData( self.aDeviceNames )
        # This prevent to process several times the same sensor state
        if aState != self.aState:
            self.aState = aState
            nTime = time.time()
            #~ self.log(str(aState))
            for seq in self.aSequenceHandler:
                sOutput = seq.update(aState, nTime)
                if  sOutput != None:
                    self.Match(sOutput)
                    # Force all other sequence to be reset to prevent multiple match.
                    # But this will prevent sequences like "DoubleTap" to work since each "SingleTap" will reset "DoubleTap"
                    self.onInput_reset()
                    # Get the output function from the sequence name
                    try:
                        func = getattr(self, sOutput)
                        func()
                    # If no output function found, just forget it
                    except:
                        pass

    def onInput_onStart(self):
        if not self.bIsRunning:
            self.bIsRunning = True
            # Save initial sensor state
            self.aState = None#ALMemory.getListData( self.aDeviceNames )        
            # Subscribe to each sensor device
            for device in self.aDeviceNames:
                ALMemory.subscribeToEvent( device, self.getName(), "onSensorChange" )            
    
    def onInput_onStop(self):
        if self.bIsRunning:
            for device in self.aDeviceNames:
                try:
                    ALMemory.unsubscribeToEvent( device, self.getName() )
                except:
                    pass
            self.onInput_reset()
            self.bIsRunning = False
            
    def onInput_reset(self):
        for seq in self.aSequenceHandler:
            seq.reset()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="Match" type="3" type_size="1" nature="2" inner="0" tooltip="double tap" id="4" />
                                                                    <Output name="SingleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Output name="DoubleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Output name="DoubleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                    <Output name="DoubleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Output name="EnumerateRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                    <Output name="EnumerateFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                    <Output name="CaressRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                    <Output name="CaressFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                    <Output name="DoubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                                    <Output name="ZoomIn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                                    <Output name="ZoomOut" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" />
                                                                    <Output name="CalmDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" />
                                                                    <Output name="SingleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" />
                                                                    <Output name="SingleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="18" />
                                                                    <Output name="SingleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="19" />
                                                                    <Parameter name="Caress front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Caress front to rear" id="20" />
                                                                    <Parameter name="Caress rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="21" />
                                                                    <Parameter name="Single tap" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="22" />
                                                                    <Parameter name="Double front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="23" />
                                                                    <Parameter name="Double middle" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="24" />
                                                                    <Parameter name="Double rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="25" />
                                                                    <Parameter name="Calm down" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="26" />
                                                                    <Parameter name="Enumerate front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="27" />
                                                                    <Parameter name="Enumerate rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="28" />
                                                                    <Parameter name="Zoom in" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="29" />
                                                                    <Parameter name="Zoom out" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="30" />
                                                                    <Parameter name="Double tap" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="31" />
                                                                    <Parameter name="Secret code" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="32" />
                                                                    <Parameter name="Single front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="33" />
                                                                    <Parameter name="Single middle" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="34" />
                                                                    <Parameter name="Single rear" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="35" />
                                                                </Box>
                                                                <Box name="GotoNext" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="228" y="303">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        try:
            next = ALMemory.getData("choicejams_choice_next")
            if not next == "None":
                self.logger.debug(next)
                self.gotoAndStopParent(next)
        except:
            self.onStopped("onStop")

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="stopTactile" robot="" id="4" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="224" y="108">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped(p) #~ activate output of the box
        self.onStopped("onTactileSensor")

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="bodyTalk" robot="" id="5" tooltip="nouvelle boite bodytalk" bitmap_expanded="1" plugin="" x="96" y="413">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.gotoAndPlay(20);
        pass

    def onInput_onStart(self):
        #self.gotoAndStop(1);
        pass        
        
    def onInput_onStop(self):    
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="onStart" id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Parameter name="eyesColor" inherits_from_parent="0" content_type="3" value="Normal" default_value="Redeyes" custom_choice="0" tooltip="" id="5">
                                                                        <Choice value="Happy" />
                                                                        <Choice value="Normal" />
                                                                        <Choice value="Angry" />
                                                                        <Choice value="Redeyes" />
                                                                    </Parameter>
                                                                    <Parameter name="activeEyes" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="6" />
                                                                    <Parameter name="activeHeadcheck" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="7" />
                                                                    <Parameter name="turnEyes" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="8" />
                                                                    <Timeline fps="1" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="arms" mute="0">
                                                                            <BehaviorKeyframe name="arms" index="1" bitmap="">
                                                                                <Diagram scale="53">
                                                                                    <Box name="RandomInt" robot="" id="1" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="264" y="28">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                        <Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                        <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                    </Box>
                                                                                    <Box name="Dispatcher" robot="" id="2" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" bitmap_expanded="1" plugin="dispatcher_plugin" x="392" y="28">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		elif(p == (3)):
			self.output_4(p)
		elif(p == (4)):
			self.output_5(p)
		elif(p == (5)):
			self.output_6(p)
		elif(p == (6)):
			self.output_7(p)
		elif(p == (7)):
			self.output_8(p)
		elif(p == (8)):
			self.output_9(p)
		elif(p == (9)):
			self.output_10(p)
		elif(p == (10)):
			self.output_11(p)
		elif(p == (11)):
			self.output_12(p)
		else:
			self.onDefault()]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <keywords>
                                                                                                <keyword>0</keyword>
                                                                                                <keyword>1</keyword>
                                                                                                <keyword>2</keyword>
                                                                                                <keyword>3</keyword>
                                                                                                <keyword>4</keyword>
                                                                                                <keyword>5</keyword>
                                                                                                <keyword>6</keyword>
                                                                                                <keyword>7</keyword>
                                                                                                <keyword>8</keyword>
                                                                                                <keyword>9</keyword>
                                                                                                <keyword>10</keyword>
                                                                                                <keyword>11</keyword>
                                                                                                <keyword></keyword>
                                                                                            </keywords>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" />
                                                                                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" />
                                                                                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" />
                                                                                        <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" />
                                                                                        <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" />
                                                                                        <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" />
                                                                                        <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" />
                                                                                        <Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" />
                                                                                        <Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" />
                                                                                        <Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" />
                                                                                        <Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" />
                                                                                        <Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" />
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk1" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="775" y="27">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="66.9711" />
                                                                                                    <Key frame="28" value="42.0977" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="8.78677" />
                                                                                                    <Key frame="28" value="1.75543" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="-108.197" />
                                                                                                    <Key frame="28" value="-53.7921" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="-71.6294" />
                                                                                                    <Key frame="28" value="-80.2427" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="2.98591" />
                                                                                                    <Key frame="28" value="-11" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="0.181844" />
                                                                                                    <Key frame="28" value="0.890909" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="68.6458" />
                                                                                                    <Key frame="27" value="48.4307" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-7.38531" />
                                                                                                    <Key frame="27" value="-4.92434" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="106.61" />
                                                                                                    <Key frame="27" value="62.6644" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="67.679" />
                                                                                                    <Key frame="27" value="86.8394" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-14.8561" />
                                                                                                    <Key frame="27" value="9" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="0.161844" />
                                                                                                    <Key frame="27" value="0.818182" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk2" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="777" y="123">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="40.1641" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="5.09532" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-82.5327" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-78.7486" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="9" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="0.654545" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="73.7436" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-6.68218" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="100.985" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="74.6225" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="43" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="0.645455" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk3" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="777" y="220">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="58.5335" />
                                                                                                    <Key frame="28" value="77.9576" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="9.57779" />
                                                                                                    <Key frame="28" value="2.72224" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-36.038" />
                                                                                                    <Key frame="28" value="-46.9366" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-65.4769" />
                                                                                                    <Key frame="28" value="-57.2151" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="-14" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="0.345455" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="13" value="47.9913" />
                                                                                                    <Key frame="25" value="44.2998" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="13" value="-18.2839" />
                                                                                                    <Key frame="25" value="-3.43018" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="13" value="24.6952" />
                                                                                                    <Key frame="25" value="85.4284" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="13" value="89.5017" />
                                                                                                    <Key frame="25" value="83.2359" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="51" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="0.345455" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="StandUp" robot="" id="6" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="779" y="318">
                                                                                        <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="89.1198" />
                                                                                                    <Key frame="48" value="82.2643" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="6.67737" />
                                                                                                    <Key frame="48" value="1.22808" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-64.5149" />
                                                                                                    <Key frame="48" value="-56.6926" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-31.5507" />
                                                                                                    <Key frame="48" value="-32.2539" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="5.79845" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="0.183662" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="88.6852" />
                                                                                                    <Key frame="45" value="86.8394" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-3.07861" />
                                                                                                    <Key frame="45" value="-0.705538" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="70.9262" />
                                                                                                    <Key frame="45" value="59.3245" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="33.577" />
                                                                                                    <Key frame="45" value="45.1787" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-16.526" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="0.162208" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk4" robot="" id="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="781" y="417">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="3.07381" />
                                                                                                    <Key frame="31" value="2.54646" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="9.57779" />
                                                                                                    <Key frame="31" value="7.20472" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="6.67737" />
                                                                                                    <Key frame="31" value="-90.7067" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-76.1997" />
                                                                                                    <Key frame="31" value="-67.3227" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-25" />
                                                                                                    <Key frame="31" value="-10.6373" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="0.709091" />
                                                                                                    <Key frame="31" value="0.334571" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="92.904" />
                                                                                                    <Key frame="27" value="86.5758" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-9.31893" />
                                                                                                    <Key frame="27" value="-6.24272" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="73.0356" />
                                                                                                    <Key frame="27" value="51.9416" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="72.0736" />
                                                                                                    <Key frame="27" value="70.6674" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="62" />
                                                                                                    <Key frame="27" value="52.6447" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="0.254545" />
                                                                                                    <Key frame="27" value="0.33748" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk5" robot="" id="7" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="781" y="516">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="52.2053" />
                                                                                                    <Key frame="36" value="46.1408" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="16.2576" />
                                                                                                    <Key frame="36" value="6.15002" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-54.4953" />
                                                                                                    <Key frame="36" value="-33.6649" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-88.6803" />
                                                                                                    <Key frame="36" value="-89.1198" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="36" value="-45" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="36" value="0.454545" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="28.2156" />
                                                                                                    <Key frame="33" value="40.1689" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="-1.0571" />
                                                                                                    <Key frame="33" value="-0.881321" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="53.1721" />
                                                                                                    <Key frame="33" value="78.9244" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="88.9488" />
                                                                                                    <Key frame="33" value="88.773" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="33" value="-17" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="33" value="0.418182" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk6" robot="" id="9" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="782" y="713">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="62.8402" />
                                                                                                    <Key frame="34" value="59.1487" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="1.14019" />
                                                                                                    <Key frame="34" value="6.94104" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-26.3699" />
                                                                                                    <Key frame="34" value="-108.988" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-52.7326" />
                                                                                                    <Key frame="34" value="-60.4671" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="34" value="-30" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="34" value="0.727273" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="87.6305" />
                                                                                                    <Key frame="31" value="70.8431" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-1.40867" />
                                                                                                    <Key frame="31" value="-0.498473" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="118.564" />
                                                                                                    <Key frame="31" value="65.8285" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="44.0362" />
                                                                                                    <Key frame="31" value="75.3256" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="31" value="25" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="31" value="0.509091" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk5" robot="" id="10" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="782" y="614">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="74.9692" />
                                                                                                    <Key frame="34" value="69.2563" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="3.42537" />
                                                                                                    <Key frame="34" value="5.62267" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="-54.0558" />
                                                                                                    <Key frame="34" value="-66.9759" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="-75.8482" />
                                                                                                    <Key frame="34" value="-76.0239" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="34" value="-37" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="34" value="0.507273" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="72.8646" />
                                                                                                    <Key frame="31" value="72.9525" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-3.95753" />
                                                                                                    <Key frame="31" value="-3.43018" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="42.0098" />
                                                                                                    <Key frame="31" value="67.5863" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="54.1437" />
                                                                                                    <Key frame="31" value="57.5715" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="31" value="46.3" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="31" value="0.592727" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk7" robot="" id="11" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="784" y="813">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="81.4732" />
                                                                                                    <Key frame="46" value="86.6588" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="3.24959" />
                                                                                                    <Key frame="46" value="9.75358" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-57.4836" />
                                                                                                    <Key frame="46" value="-65.5696" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-31.9902" />
                                                                                                    <Key frame="46" value="-28.5624" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="46" value="-11" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="46" value="0.163636" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="87.5426" />
                                                                                                    <Key frame="43" value="88.1578" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-1.23289" />
                                                                                                    <Key frame="43" value="-2.1997" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="69.7836" />
                                                                                                    <Key frame="43" value="87.1862" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="39.9053" />
                                                                                                    <Key frame="43" value="28.1278" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="-5.4" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="0.2" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk8" robot="" id="12" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="785" y="912">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="79.0123" />
                                                                                                    <Key frame="40" value="68.641" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="1.22808" />
                                                                                                    <Key frame="40" value="5.88634" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-106.615" />
                                                                                                    <Key frame="40" value="-38.499" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-43.0645" />
                                                                                                    <Key frame="40" value="-58.0061" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="40" value="-39" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="40" value="0.745455" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="79.8081" />
                                                                                                    <Key frame="37" value="75.853" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="-3.16651" />
                                                                                                    <Key frame="37" value="-0.617646" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="110.302" />
                                                                                                    <Key frame="37" value="56.6878" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="36.9169" />
                                                                                                    <Key frame="37" value="64.0755" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="12" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="0.818182" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk9" robot="" id="13" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="786" y="1011">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="71.8051" />
                                                                                                    <Key frame="40" value="89.5593" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="1.49176" />
                                                                                                    <Key frame="40" value="12.7419" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-37.3564" />
                                                                                                    <Key frame="40" value="-79.8081" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-43.504" />
                                                                                                    <Key frame="40" value="-24.871" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="40" value="-36" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="40" value="0.381818" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="88.8609" />
                                                                                                    <Key frame="37" value="100.375" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-1.93602" />
                                                                                                    <Key frame="37" value="-6.50639" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="61.346" />
                                                                                                    <Key frame="37" value="95.448" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="72.3373" />
                                                                                                    <Key frame="37" value="45.7061" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="10" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="0.363636" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalk11" robot="" id="14" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="787" y="1111">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="39.9883" />
                                                                                                    <Key frame="24" value="52.0295" />
                                                                                                    <Key frame="33" value="53.0842" />
                                                                                                    <Key frame="43" value="57.7425" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="9.05044" />
                                                                                                    <Key frame="24" value="9.66569" />
                                                                                                    <Key frame="33" value="1.31597" />
                                                                                                    <Key frame="43" value="4.48007" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-11.9557" />
                                                                                                    <Key frame="24" value="-41.1357" />
                                                                                                    <Key frame="33" value="-47.9913" />
                                                                                                    <Key frame="43" value="-78.3139" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-72.0688" />
                                                                                                    <Key frame="24" value="-57.8303" />
                                                                                                    <Key frame="33" value="-65.7406" />
                                                                                                    <Key frame="43" value="-54.4905" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="-2" />
                                                                                                    <Key frame="33" value="-71" />
                                                                                                    <Key frame="43" value="-53" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="0.176364" />
                                                                                                    <Key frame="43" value="0.507273" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="86.2242" />
                                                                                                    <Key frame="41" value="91.3219" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-0.617646" />
                                                                                                    <Key frame="41" value="-8.79158" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="77.1665" />
                                                                                                    <Key frame="41" value="93.3386" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="32.6981" />
                                                                                                    <Key frame="41" value="28.4793" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="activeArms" robot="" id="15" tooltip="activeArms" bitmap_expanded="1" plugin="" x="106" y="21">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
    
        p=self.getParameter("Activate arms");
        if p:
            self.armsOk();
            
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                    <Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                                    <Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                    <Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                                    <Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" />
                                                                                    <Link inputowner="15" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="15" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="--EMPTY--" index="20" bitmap="">
                                                                                <Diagram scale="-1" />
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="legs" mute="0">
                                                                            <BehaviorKeyframe name="legs" index="1" bitmap="">
                                                                                <Diagram scale="82">
                                                                                    <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="131" y="51">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
    
        p=self.getParameter("Activate legs");
        if p:
            self.legsOk();
            
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="RandomInt" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="398" y="53">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                        <Parameter name="max" inherits_from_parent="0" content_type="1" value="6" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                        <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                    </Box>
                                                                                    <Box name="Dispatcher" robot="" id="3" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" bitmap_expanded="1" plugin="dispatcher_plugin" x="526" y="53">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		elif(p == (3)):
			self.output_4(p)
		elif(p == (4)):
			self.output_5(p)
		elif(p == (5)):
			self.output_6(p)
		else:
			self.onDefault()]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <keywords>
                                                                                                <keyword>0</keyword>
                                                                                                <keyword>1</keyword>
                                                                                                <keyword>2</keyword>
                                                                                                <keyword>3</keyword>
                                                                                                <keyword>4</keyword>
                                                                                                <keyword>5</keyword>
                                                                                                <keyword></keyword>
                                                                                            </keywords>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" />
                                                                                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" />
                                                                                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" />
                                                                                        <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" />
                                                                                        <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" />
                                                                                        <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" />
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalkLegs1" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="782" y="74">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-16.3455" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="16.9655" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="14.6803" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-5.18802" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.2711" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-13.0935" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-1.14019" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="15.3786" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-4.48007" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="4.66067" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="2.72705" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalkLegs3" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="782" y="268">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-16.6091" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="10.6373" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="11.8678" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-4.13332" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.35899" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-9.31412" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-7.3805" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="13.5329" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-4.48007" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="4.66067" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="7.03374" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalkLegs2" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="782" y="170">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-16.3455" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="1.14019" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="15.3786" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-4.48007" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="4.66067" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-2.72705" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-16.9655" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="14.6803" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-5.18802" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.2711" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="13.0935" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalkLegs4" robot="" id="7" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="784" y="365">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-21.5311" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="9.84628" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="4.39699" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="1.14019" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="7.55628" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-8.78677" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-5.44688" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="3.1617" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.10012" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.18802" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.45169" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalkLegs6" robot="" id="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="785" y="560">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-22.8494" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="6.59428" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="2.11181" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="13.2692" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="0.70073" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-4.2164" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-4.65586" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="13.6208" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-2.28278" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.62747" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="4.3091" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_bodytalkLegs5" robot="" id="9" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="785" y="463">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-20.9158" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="9.23104" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="13.0983" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="12.4782" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-5.18802" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-5.97423" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-7.90785" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="13.9724" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="8.35212" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="-1.66754" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="75" value="5.3638" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="7" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="8" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="9" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="--EMPTY--" index="20" bitmap="">
                                                                                <Diagram scale="-1" />
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="LED" mute="0">
                                                                            <BehaviorKeyframe name="LED" index="1" bitmap="">
                                                                                <Diagram scale="71">
                                                                                    <Box name="activeEyes" robot="" id="1" tooltip="activeEyes" bitmap_expanded="1" plugin="" x="116" y="57">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
    
        p=self.getParameter("activeEyes");
        pTurn=self.getParameter("turnEyes");
        
        if(p == 1 and pTurn == 0):
            self.eyesOk();
            
        if(pTurn == 1 and p == 1):
            self.turnOk();
            
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                        <Output name="turnOk" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Parameter name="activeEyes" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="5" />
                                                                                        <Parameter name="turnEyes" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="blink" robot="" id="2" tooltip="blink" bitmap_expanded="1" plugin="" x="330" y="34">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
    
        p=self.getParameter("eyesColor");
        
        if(p == "Normal"):
            rColor = 0xffffff
        elif(p == "Happy"):
            rColor = 0x0055ff
        elif(p == "Angry"):
            rColor = 0xff5500
        elif(p == "Redeyes"):
            rColor = 0xff0000    
            
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", rColor, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", rColor, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", rColor, rDuration );
        
        time.sleep(random.randint( 1, 7 ));
        
        self.onStopped();
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="eyesColor" inherits_from_parent="1" content_type="3" value="Normal" default_value="Normal" custom_choice="0" tooltip="" id="5">
                                                                                            <Choice value="Happy" />
                                                                                            <Choice value="Normal" />
                                                                                            <Choice value="Angry" />
                                                                                        </Parameter>
                                                                                    </Box>
                                                                                    <Box name="CircleEyes" robot="" id="4" tooltip="Beautiful eyes circle animation" bitmap_expanded="1" plugin="" x="332" y="147">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
  """ comments """
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):

    p=self.getParameter("eyesColor");
        
    if(p == "Normal"):
        rColor = 0xffffff
    elif(p == "Happy"):
        rColor = 0x0055ff
    elif(p == "Angry"):
        rColor = 0xff5500
    elif(p == "Redeyes"):
        rColor = 0xff0000    

    self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    while( not self.bMustStop ):
        nColor = rColor
        nNbrSegment = 8;
        nNbrTurn = 2
        rTime = 0.3
        for i in range( nNbrSegment*nNbrTurn ):
            ALLeds.post.fadeRGB( "FaceLed%d" % (i%nNbrSegment) , nColor, rTime )
            ALLeds.post.fadeRGB( "FaceLed%d" % (i%nNbrSegment) , 0x000000, rTime*1.25 )
            time.sleep( rTime*0.25 )
        time.sleep( rTime*0.5 );
    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="eyesColor" inherits_from_parent="1" content_type="3" value="Normal" default_value="Normal" custom_choice="0" tooltip="" id="5">
                                                                                            <Choice value="Happy" />
                                                                                            <Choice value="Normal" />
                                                                                            <Choice value="Angry" />
                                                                                            <Choice value="Redeyes" />
                                                                                        </Parameter>
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="--EMPTY--" index="20" bitmap="">
                                                                                <Diagram scale="-1" />
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="event" mute="0">
                                                                            <BehaviorKeyframe name="event" index="1" bitmap="">
                                                                                <Diagram scale="71">
                                                                                    <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="114" y="40">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.stopTimelineParent()

    def onInput_onStop(self):
        ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="end" index="20" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="StandUp" robot="" id="1" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="201" y="53">
                                                                                        <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="31" value="-0.441863" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="31" value="-11.1647" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="89.5593" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="6.23791" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="-63.9876" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="-31.8144" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="-9.67049" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="0.186207" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="89.1246" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-3.95753" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="71.1899" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="33.0497" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-16.3503" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="0.167662" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-19.6853" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="12.1315" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="19.6902" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-5.10012" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="4.83164" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-8.96255" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-7.29261" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="21.9705" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-4.39218" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="2.46337" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="5.53958" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="activeLegs" robot="" id="2" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="85" y="55">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
    
        p=self.getParameter("Activate legs");
        if p:
            self.legsOk();
            
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="head" mute="0">
                                                                            <BehaviorKeyframe name="head" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="126" y="44">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
    
        p=self.getParameter("Activate head");
        if p:
            self.eyesOk();
            
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="headCheckRandom" robot="" id="2" tooltip="headchecks à intervales variables" bitmap_expanded="1" plugin="" x="310" y="46">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onStopped();
        pass

    def onInput_RandomInt_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="RandomInt_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="55">
                                                                                                        <Box name="RandomInt" robot="" id="1" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="142" y="26">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                                            <Parameter name="max" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                                            <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" robot="" id="2" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="261" y="273">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self, p):
    self.startTimer( p );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                                            <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="Dispatcher" robot="" id="3" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" bitmap_expanded="1" plugin="dispatcher_plugin" x="312" y="26">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		elif(p == (3)):
			self.output_4(p)
		else:
			self.onDefault()]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <keywords>
                                                                                                                    <keyword>0</keyword>
                                                                                                                    <keyword>1</keyword>
                                                                                                                    <keyword>2</keyword>
                                                                                                                    <keyword>3</keyword>
                                                                                                                    <keyword></keyword>
                                                                                                                </keywords>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" />
                                                                                                        </Box>
                                                                                                        <Box name="Anim_headCheck4" robot="" id="7" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="308">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="6" value="-2.1997" />
                                                                                                                        <Key frame="14" value="-2.72705" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="6" value="5.88634" />
                                                                                                                        <Key frame="14" value="-7" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Anim_headCheck2" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="119">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="8" value="-2.1997" />
                                                                                                                        <Key frame="15" value="-2.81494" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="8" value="5.88634" />
                                                                                                                        <Key frame="15" value="-5.01223" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Anim_headCheck3" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="213">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="9" value="-2.1997" />
                                                                                                                        <Key frame="19" value="-2.28759" />
                                                                                                                        <Key frame="27" value="-2.72705" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="9" value="5.88634" />
                                                                                                                        <Key frame="19" value="-11" />
                                                                                                                        <Key frame="27" value="-7" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Anim_headCheck1" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="25">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="12" value="-2.63916" />
                                                                                                                        <Key frame="22" value="-2.81494" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="12" value="7" />
                                                                                                                        <Key frame="22" value="-7" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="RandomInt" robot="" id="8" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="751" y="154">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(1, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 1, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                                            <Parameter name="max" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                                            <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="6" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="7" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                        <Link inputowner="8" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="--EMPTY--" index="20" bitmap="">
                                                                                <Diagram scale="-1" />
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="3" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="17" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="18" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="19" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="5" indexofinput="3" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Choice" index="10" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="TransformResults" robot="" id="5" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="314" y="52">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.aAllSentenceHelpEnum = {"French" : "Tu peux répondre ",
                                     "English" : "Your answer can be "}
        self.aAllSentenceHelpTactil = {"French" : ["Tu peux aussi choisir une réponse à l'aide de mon capteur tactile.", "\\Pau=600\\ Appuie sur l'avant ou l'arrière de ma calotte pour naviguer parmi les réponses possibles. Appuie ensuite sur le rond du milieu pour valider ton choix."],
                                       "English" : ["You can also use my tactile sensor to choose the answer.", "\\Pau=600\\ Press front or rear of my skull cap to go through all of the available answers. Press then the circle in the middle to validate your choice."]}
        self.tts = ALProxy("ALTextToSpeech")

    def onLoad(self):
        #~ puts code for box initialization here
        try:
            self.aChoices = ALMemory.getData("choicejams_choice_choices")
        except:
            self.aChoices = []

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        #~ self.onStopped(p) #~ activate output of the box
        nLen = len(self.aChoices)
        if p == nLen - 1:
            self.onStopped("wordRecognised")
        elif p == nLen - 2:
            self.onHelp()
        elif p == nLen - 3:
            try:
                sSentence = ALMemory.getData("choicejams_choice_question")
            except:
                sSentence = ""
            if sSentence == "":
                if self.tts.getLanguage() == "French":
                    sSentence = "Il n'y a pas de question."
                else:
                    sSentence = "There is no question."
            ALMemory.insertData("choicejams_choice_say", sSentence)
            ALMemory.insertData("choicejams_choice_next", "Choice")
            self.onStoppedSay()
        else:
            self.onStopped(p)
        
    def onInput_inputChoices(self, p):
        self.aChoices = p
        
    def onHelp(self):
        sLanguage = self.tts.getLanguage()
        aChoices = [random.choice(i.split("/")) for i in self.aChoices]
        nLen = len(aChoices)
        sSentence = ""
        if nLen > 0:
            sSentence = self.aAllSentenceHelpEnum[sLanguage]
        for i in xrange(nLen):
            sSentence = sSentence + aChoices[i] 
            if i != nLen-1:
                sSentence = sSentence +", "
            else:
                sSentence = sSentence +"."
        sSentence += self.aAllSentenceHelpTactil[sLanguage][0]
        ALMemory.insertData("choicejams_choice_say", sSentence)
        ALMemory.insertData("choicejams_choice_next", "SayAgain")
        self.onStoppedSay()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="onStoppedSay" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                </Box>
                                                                <Box name="getChoices" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="59" y="25">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped(p) #~ activate output of the box
        try:
            self.onStopped(ALMemory.getData("choicejams_choice_choices"))
        except:
            self.onStopped([])

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="Goto And Stop (name)" robot="" id="2" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." bitmap_expanded="1" plugin="" x="448" y="88">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Say" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                </Box>
                                                                <Box name="Choice" robot="" id="3" tooltip="Configure speech recognition to seelct an answer from a set of sentences. Head tactile sensors can also be used to select a sentence." bitmap_expanded="1" plugin="" x="187" y="29">
                                                                    <bitmap>media/images/box/appu/voice_recognition.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# Version: v1.0
# Author : J.Amsellem
# Date : 26/01/2011

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.soundDetectionProxy = ALProxy("ALSoundDetection")
        self.soundDetectionProxy.setParameter("Sensibility", 0.8)

    def onUnload(self):
        self.soundDetectionProxy.setParameter("Sensibility", 0.9)
        
    def onInput_onStart(self, dictionnary):
        pass
        
    def onInput_onStop(self):
        self.onFailed("onStop")]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Starts speech recongition with an array of string as a dictionnary." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops speech recongintion." id="3" />
                                                                    <Output name="onFailed" type="0" type_size="1" nature="1" inner="0" tooltip='- &quot;timeout&quot; if the user has not replied.&#x0A;- &quot;notUnderstood&quot; if the interaction with the speech recognition failed.&#x0A;- &quot;onTactileSensor&quot; if the user has tapped the tactile sensor of NAO.&#x0A;- &quot;onStop&quot; if the onStop input has been activated.' id="4" />
                                                                    <Output name="onRecognized" type="2" type_size="1" nature="1" inner="0" tooltip="This output is activated when a word is recognized" id="5" />
                                                                    <Parameter name="Confidence" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="Speech recognition confidence threshold." id="6" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="1" content_type="1" value="10" default_value="10" min="0" max="100" tooltip="Lap of time alowed to give the choice." id="7" />
                                                                    <Parameter name="Number of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="Number of bad recognition alowed." id="8" />
                                                                    <Parameter name="French" inherits_from_parent="0" content_type="3" value="oui;non;répéter;aide;sortir/quitter" default_value="" custom_choice="0" tooltip="List of allowed answers when current language is french. Answers are formated like the following :&#x0A;answer1/alternate answer1;answer2;answer3" id="9" />
                                                                    <Parameter name="English" inherits_from_parent="0" content_type="3" value="yes;no;repeat;help;quit/stop" default_value="" custom_choice="0" tooltip="List of allowed answers when current language is english. Answers are formated like the following :&#x0A;answer1/alternate answer1;answer2;answer3" id="10" />
                                                                    <Parameter name="Repeat choice" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="Indicates if the validated choice should be repeated or not." id="11" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="70">
                                                                                    <Box name="Dictionnary" robot="" id="1" tooltip="List of words to recognize" bitmap_expanded="1" plugin="" x="451" y="106">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nIndex = None

    def onUnload(self):
        pass

    def onInput_onStart(self, dico):
        asr = ALProxy("ALSpeechRecognition")    
        sLang = asr.getLanguage()
        
        # If no dico provided as parameter, use the one from parameters
        if dico == None:
            dico = self.getParameter(sLang).split(";")
            
        # This array will contain the text to say for each allowed answer
        self.aAnswers = []
        # This array will contain every sentences to be recognized by speech recognition engine
        self.aDictionnary = []
        
        for answer in dico:
            # For one answer, each possible proposition is separated by a '/' character
            tmp = answer.split("/")
            self.aDictionnary += tmp
            self.aAnswers.append(tmp[0])
            
        self.log(str(self.aDictionnary))
        self.log(str(self.aAnswers))
        try:
            asr.setWordListAsVocabulary( self.aDictionnary )
            asr.setVisualExpression(True)
        except RuntimeError, e:
            self.log("Could not change current speech recognition dictionnary: " + str(e))
            raise e
        self.onReady(dico)

    def onInput_onSayNext(self):
        if self.nIndex == None:
            self.nIndex = 0
        else:
            self.nIndex += 1
        self.nIndex = self.nIndex % len(self.aAnswers)
        self.onSay(self.aAnswers[self.nIndex])

        
    def onInput_onSayPrev(self):
        if self.nIndex == None:
            self.nIndex = -1
        else:
            self.nIndex -= 1    
        self.nIndex = self.nIndex % len(self.aAnswers)            
        self.onSay(self.aAnswers[self.nIndex])
        
    def onInput_onValidate(self):
        if self.nIndex != None:
            self.onValidated(self.aAnswers[self.nIndex])
        
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Input name="onSayNext" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                                        <Input name="onValidate" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Input name="onSayPrev" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                        <Output name="onSay" type="3" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                                        <Output name="onValidated" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
                                                                                        <Output name="onReady" type="0" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                    </Box>
                                                                                    <Box name="Say Text" robot="" id="4" tooltip="Say the text set in parameters." bitmap_expanded="1" plugin="" x="901" y="97">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Launch ASR" robot="" id="2" tooltip="Try to recognize the list of words set in the ASR.&#x0A;&#x0A;It has 2 outputs:&#x0A;- First one transmit the understood word if the threshold associated is&#x0A;high enough.&#x0A;- Second one is stimulated when nothing has been understood or where the&#x0A;threshold was not high enough." bitmap_expanded="1" plugin="" x="590" y="268">
                                                                                        <bitmap>media/images/box/interaction/ear.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts speech recongition." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops speech recongintion." id="3" />
                                                                                        <Input name="WordRecognized" type="0" type_size="1" nature="4" stm_value_name="WordRecognized" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                                                        <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Transmit a word recognized with enough trust. Can be connected directly to a dispatcher." id="6" />
                                                                                        <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood during last process." id="7" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="media/images/box/interaction/say.png">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Process Word" robot="" id="1" tooltip="Process speech recognition extractor data (WordRecognized) to give the most&#x0A;interesting data." bitmap_expanded="1" plugin="" x="140" y="59">
                                                                                                            <bitmap>media/images/box/interaction/ear.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if len(p) > 1:
            if p[1] >= self.getParameter("Confidence"):
                self.onWord(p[0]) #~ activate output of the box
            else:
                self.onNothing()
        else:
            self.onNothing()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;WordRecognized extractor data." id="2" />
                                                                                                            <Output name="onWord" type="3" type_size="1" nature="1" inner="0" tooltip="The word recognized." id="3" />
                                                                                                            <Output name="onNothing" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if nothing has been recognized or the word recognized had&#x0A;not a recognition threshold high enough to be taken into account." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="7" outputowner="1" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Repeat" robot="" id="5" tooltip="Repeat n times." bitmap_expanded="1" plugin="" x="756" y="325">
                                                                                        <bitmap>media/images/box/loop.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTimes = 0

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.nTimes += 1    
        if self.nTimes>= self.getParameter("Number of tries"):
            self.onStopped("notUnderstood")
        else:
            self.onRepeat()

    def onInput_onStop(self):
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onRepeat" type="1" type_size="1" nature="2" inner="0" tooltip="Activated on each repetition" id="4" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Activated when the maximum number of repetetion is reached" id="5" />
                                                                                        <Parameter name="Number of tries" inherits_from_parent="1" content_type="1" value="2" default_value="2" min="1" max="100" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="Wait" robot="" id="6" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." bitmap_expanded="1" plugin="" x="445" y="6">
                                                                                        <bitmap>media/images/box/wait.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput("timeout")

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                                        <Output name="timerOutput" type="0" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                                                    </Box>
                                                                                    <Box name="IndexOf" robot="" id="7" tooltip="Output the index of the entry in the array" bitmap_expanded="1" plugin="" x="754" y="226">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.aArray = None

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onEntry(self, p):
        found = False
        index = 0
        while not found and index < len(self.aArray):
            found = p in self.aArray[index]
            index += 1
        if found:
            if self.getParameter("Repeat choice"):
                tmp = self.aArray[index-1].split("/")
                self.onSay(tmp[0])
            self.onStopped(index-1)
        else:
            self.onStopped(-1)

    def onInput_onArray(self, p):
        self.aArray = p

    def onInput_onStop(self):
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onEntry" type="3" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                                        <Input name="onArray" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                        <Output name="onSay" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                                                                                    </Box>
                                                                                    <Box name="generateOutput" robot="" id="8" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="244" y="141">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped(p) #~ activate output of the box
        self.onStopped("onTactileSensor")

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Box name="TactileCodes" robot="" id="3" tooltip="Detection de sequence tactile sur la tête de Nao." bitmap_expanded="1" plugin="" x="108" y="115">
                                                                                        <bitmap>media/images/box/appu/fingerprint.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class SequenceHandler():
    def __init__(self, aSeq):
        self.aTactilSequence = aSeq
        self.reset()
    
    def reset(self):
        self.nTapTime = None
        self.nTapIndex = 2
        
    def update(self, aState, nTime):
        # In any case, if too much time elasped, sequence is invalidated
        if self.nTapTime != None and (nTime - self.nTapTime) > self.aTactilSequence[self.nTapIndex-1]:
            self.reset()
        # If current sensors state match current expected shape
        if aState == self.aTactilSequence[self.nTapIndex]:
            self.nTapTime = nTime
            self.nTapIndex += 2
        # If current sensor state does not match sequence at current index BUT match sequence at first index
        elif aState == self.aTactilSequence[1]:
            self.nTapTime = nTime
            self.nTapIndex = 4
        # If we've reach the end of the sequence, then output !!
        if self.nTapIndex > len(self.aTactilSequence):
            return self.aTactilSequence[0]
        else:
            return None
        
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        # Build a list of devices with full name
        self.aDeviceNames = ["%sTactilTouched" % name for name in ["Front", "Middle", "Rear"]]
        
        # Parameters
        parameters = [   ["SingleFront", "Single front", [1, 0, 0], 1.0, [0, 0, 0]],
                                ["SingleMiddle", "Single middle", [0, 1, 0], 1.0, [0, 0, 0]],
                                ["SingleRear", "Single rear", [0, 0, 1], 1.0, [0, 0, 0]],
                                ["CaressFtoR", "Caress front to rear", [1, 0, 0], 0.5, [1, 1, 0], 0.5, [0, 1, 0], 0.5, [0, 1, 1], 0.5, [0, 0, 1]],
                                ["CaressRtoF", "Caress rear to front", [0, 0, 1], 0.5, [0, 1, 1], 0.5, [0, 1, 0], 0.5, [1, 1, 0], 0.5, [1, 0, 0]],
                                ["SingleTap", "Single tap", [1, 1, 1], 0.5, [0, 0, 0]],
                                ["EnumerateFtoR", "Enumerate front to rear", [1, 0, 0], 1.0, [0, 1, 0], 1.0, [0, 0, 1]],
                                ["EnumerateRtoF", "Enumerate rear to front", [0, 0, 1], 1.0, [0, 1, 0], 1.0, [1, 0, 0]],
                                ["ZoomIn", "Zoom in", [1, 0, 1], 1.0, [0, 1, 0]],
                                ["ZoomOut", "Zoom out", [0, 1, 0], 1.0, [1, 0, 1]],
                                ["DoubleFront", "Double front", [1, 0, 0], 1.0, [0, 0, 0], 1.0, [1, 0, 0]],
                                ["DoubleMiddle", "Double middle", [0, 1, 0], 1.0, [0, 0, 0], 1.0, [0, 1, 0]],
                                ["DoubleRear", "Double rear", [0, 0, 1], 1.0, [0, 0, 0], 1.0, [0, 0, 1]],
                                ["DoubleTap", "Double tap", [1, 1, 1], 1.0, [0, 0, 0], 1.0, [1, 1, 1]],
                                ["SecretCode", "Secret code", [1, 0, 1], 1.0, [0, 0, 0], 1.0, [1, 0, 1], 1.0, [0, 1, 0]],                                
                                ["CalmDown", "Calm down", [1, 1, 1], 8.0, [0, 0, 0]]    ]
        # Create a sequence handler object for each enable sequence
        self.aSequenceHandler = []
        for seq in parameters:
            if self.getParameter(seq[1]):
                self.aSequenceHandler.append(SequenceHandler(seq))

    def onLoad(self):
        self.bIsRunning = False
        self.onInput_reset()
        
    def onUnload(self):
        self.onInput_onStop()

    def onSensorChange(self, pDataName, pValue, pMessage):
        "This is called whenever one of the three tactil sensors state change"    
        aState = ALMemory.getListData( self.aDeviceNames )
        # This prevent to process several times the same sensor state
        if aState != self.aState:
            self.aState = aState
            nTime = time.time()
            #~ self.log(str(aState))
            for seq in self.aSequenceHandler:
                sOutput = seq.update(aState, nTime)
                if  sOutput != None:
                    self.Match(sOutput)
                    # Force all other sequence to be reset to prevent multiple match.
                    # But this will prevent sequences like "DoubleTap" to work since each "SingleTap" will reset "DoubleTap"
                    self.onInput_reset()
                    # Get the output function from the sequence name
                    try:
                        func = getattr(self, sOutput)
                        func()
                    # If no output function found, just forget it
                    except:
                        pass

    def onInput_onStart(self):
        if not self.bIsRunning:
            self.bIsRunning = True
            # Save initial sensor state
            self.aState = None#ALMemory.getListData( self.aDeviceNames )        
            # Subscribe to each sensor device
            for device in self.aDeviceNames:
                ALMemory.subscribeToEvent( device, self.getName(), "onSensorChange" )            
    
    def onInput_onStop(self):
        if self.bIsRunning:
            for device in self.aDeviceNames:
                ALMemory.unsubscribeToEvent( device, self.getName() )
            self.onInput_reset()
            self.bIsRunning = False
            
    def onInput_reset(self):
        for seq in self.aSequenceHandler:
            seq.reset()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="Match" type="3" type_size="1" nature="2" inner="0" tooltip="double tap" id="4" />
                                                                                        <Output name="SingleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Output name="DoubleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                                        <Output name="DoubleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                                        <Output name="DoubleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                                        <Output name="EnumerateRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                        <Output name="EnumerateFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                                        <Output name="CaressRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                                        <Output name="CaressFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                                        <Output name="DoubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                                                        <Output name="ZoomIn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                                                        <Output name="ZoomOut" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" />
                                                                                        <Output name="CalmDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" />
                                                                                        <Output name="SingleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" />
                                                                                        <Output name="SingleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="18" />
                                                                                        <Output name="SingleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="19" />
                                                                                        <Parameter name="Caress front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Caress front to rear" id="20" />
                                                                                        <Parameter name="Caress rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="21" />
                                                                                        <Parameter name="Single tap" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="22" />
                                                                                        <Parameter name="Double front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="23" />
                                                                                        <Parameter name="Double middle" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="24" />
                                                                                        <Parameter name="Double rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="25" />
                                                                                        <Parameter name="Calm down" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="26" />
                                                                                        <Parameter name="Enumerate front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="27" />
                                                                                        <Parameter name="Enumerate rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="28" />
                                                                                        <Parameter name="Zoom in" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="29" />
                                                                                        <Parameter name="Zoom out" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="30" />
                                                                                        <Parameter name="Double tap" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="31" />
                                                                                        <Parameter name="Secret code" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="32" />
                                                                                        <Parameter name="Single front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="33" />
                                                                                        <Parameter name="Single middle" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="34" />
                                                                                        <Parameter name="Single rear" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="35" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="7" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="5" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="9" />
                                                                                    <Link inputowner="7" indexofinput="3" outputowner="1" indexofoutput="9" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="6" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="8" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="6" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="5" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" />
                                                                                    <Link inputowner="6" indexofinput="3" outputowner="2" indexofoutput="6" />
                                                                                    <Link inputowner="1" indexofinput="6" outputowner="3" indexofoutput="19" />
                                                                                    <Link inputowner="1" indexofinput="4" outputowner="3" indexofoutput="17" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="3" outputowner="3" indexofoutput="17" />
                                                                                    <Link inputowner="2" indexofinput="3" outputowner="3" indexofoutput="19" />
                                                                                    <Link inputowner="1" indexofinput="5" outputowner="3" indexofoutput="18" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                                    <Link inputowner="6" indexofinput="3" outputowner="3" indexofoutput="18" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="19" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="17" />
                                                                                    <Link inputowner="6" indexofinput="3" outputowner="3" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="SayAgain" index="20" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="GotoNext" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="97" y="60">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        try:
            ALMemory.insertData("choicejams_choice_say", ALMemory.getData("choicejams_choice_question"))
            ALMemory.insertData("choicejams_choice_next", "Choice")
            self.gotoAndStopParent("Say")
        except:
            self.onStopped("onStop")

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Box name="getBehaviorChoices" robot="" id="6" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="90" y="50">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time, re

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def processName(self, sName):
        return re.sub("-|_"," ",sName)
        
    def onInput_onStart(self):
        #~ self.onStopped(p) #~ activate output of the box
        self.aChoices = []
        try:
            self.aBehaviors = ALMemory.getData("naos-life_interactive-life_behaviors")
            self.aChoices = ALMemory.getData("naos-life_interactive-life_sentences")
            self.sBehavior = self.aBehaviors[0]
            ALMemory.insertData("naos-life_interactive-life_behaviors_backup",self.aBehaviors)
        except:
            aBehavior = ["",""]
        else:
            if self.sBehavior == "channel_naos-life-interactive_almanac":
                aBehavior = ["Je vais te dire une éphéméride","I'm going to be your almanac"]
            elif self.sBehavior == "channel_naos-life-interactive_random_dance":
                aBehavior = ["Je vais te jouer une danse","I'm going to dance"]
            elif self.sBehavior == "channel_naos-life-interactive_touchmyhead":
                aBehavior = ["On va faire un petit jeu","Let's play a little game"]
            else:
                aSentence = self.sBehavior.split("channel_naos-life-interactive_")
                if len(aSentence) > 1:
                    sSentence = aSentence[1]
                elif len(aSentence) > 0:
                    aStoreSentence = self.sBehavior.split("_")
                    if len(aStoreSentence) > 2:
                        sSentence = aStoreSentence[2]
                    else:
                        aSentence = self.sBehavior
                else:
                    sSentence = self.sBehavior
                aBehavior = ["Je vais jouer le comportement "+self.processName(sSentence),"I'm going to do the "+self.processName(sSentence) +" behavior"]
        tts = ALProxy("ALTextToSpeech")
        self.onChoices(self.aChoices)
        time.sleep(0.2)
        if tts.getLanguage() == "French":
            self.onQuestion( aBehavior[0])
        else:
            self.onQuestion( aBehavior[1])

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onQuestion" type="3" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="onChoices" type="0" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="4" />
                                            <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="3" outputowner="8" indexofoutput="6" />
                                            <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="5" />
                                            <Link inputowner="7" indexofinput="3" outputowner="8" indexofoutput="6" />
                                            <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="5" />
                                            <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="3" outputowner="6" indexofoutput="5" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Idle" index="46" bitmap="">
                                        <Diagram scale="-1" />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="Settings" mute="0">
                                    <BehaviorKeyframe name="Settings" index="20" bitmap="media/images/box/interaction/torso.png">
                                        <Diagram scale="64">
                                            <Box name="Text Edit" robot="" id="3" tooltip="Transmits the text you entered when the input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="149" y="342">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Livng zone :\n- stay sitted\n- stay here\n- stay around\n- go everywhere")]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <text>Livng zone :&#x0A;- stay sitted&#x0A;- stay here&#x0A;- stay around&#x0A;- go everywhere</text>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                            </Box>
                                            <Box name="SetDefaults" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="159" y="89">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        ALLeds.off("LeftFootLeds")
        ALLeds.off("RightFootLeds")
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="Preferences" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="155" y="203">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        try:
            self.tts = ALProxy('ALTextToSpeech')
        except:
            pass
        try:
            self.audiodevice = ALProxy('ALAudioDevice')
        except:
            pass
        try:
            self.logger = ALProxy('ALLogger')
        except:
            pass

    def onUnload(self):
        pass

    def onInput_onPreference(self, p):
        for member in p:
            if member[0] == 'NAO-LIFE':
                for setting in member[2]:
                    if setting[0] == 'VOLUME':
                        val = int(setting[2])
                        try:
                            self.audiodevice.setOutputVolume(val)
                            self.logger.info("Nao's Life", 'Volume has been set to ' + str(val) + '%')
                        except Exception, e:
                            self.logger.info("Nao's Life", "Can't set volume : " + str(e))
                    if setting[0] == 'LANGUAGE':
                        try:
                            self.tts.setLanguage(setting[2])
                            self.logger.info("Nao's Life", 'Language has been set to ' + str(setting[2]))
                        except Exception, e:
                            self.logger.info("Nao's Life", "Can't set language : " + str(e))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onPreference" type="0" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="7" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="8" />
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList />
        </Timeline>
    </Box>
</ChoregrapheProject>
