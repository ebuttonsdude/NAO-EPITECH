#!/bin/sh
##
## checkpart.sh
## Login : <julien@jmassot-de>
## Started on  Wed Jul 22 14:33:16 2009 julien
## $Id$
##
## Author(s):
##  - julien <jmassot@aldebaran-robotics.com>
##
## Copyright (C) 2009 julien
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##
FS_TYPE="ext3"
# folder to create in home/nao directory
FOLDERS="."
# UUID of all part
ROOT_UUID="42424242-1120-1120-1120-424242424242"
HOME_UUID="24242424-1120-1120-1120-242424242424"
INT_UUID="66666666-6666-6666-6666-666666666666"
detect_int_dev() {
  ROOT_DEVICE=`findfs UUID=${ROOT_UUID}`
  if [ "${ROOT_DEVICE}" = "/dev/sda1" ] ;
  then
    INT_DEVICE="/dev/sdb"
    HOME_DEVICE="/dev/sda2"
    echo "find an internal flash in /dev/sdb"

  elif [ "${ROOT_DEVICE}" = "/dev/sdb1" ]
  then
    INT_DEVICE="/dev/sda"
    HOME_DEVICE="/dev/sdb2"
    echo "find an internal flash in /dev/sda"
  else
    echo "can't find any internal flash"
  fi

  # now it's seems that /proc/partitions show sdb instead of /dev/sdb
  SHORT_INT_DEV="$(basename ${INT_DEVICE})"

  DEVSIZE=` grep -e ${SHORT_INT_DEV} /proc/partitions | grep -v ${SHORT_INT_DEV}[0-9] | sed 's/[ ]\+/ /g' | cut -f 4 -d ' ' `
  if [ "$DEVSIZE" -lt "100000" ] || [ "$DEVSIZE" -gt "140000" ] ; then
    echo "Unexpected size of internal flash"
    INT_DEVICE=""
  fi

}

# return nbr of partion in device
nbr_part() {
  parted /dev/${INT_DEVICE} --script print | cut -f2 -d" " | grep '^[0-9]' | wc -l
}


#return "0" if one or more ext partition is present on the device
detect_not_ext_present() {
  parted /dev/${INT_DEVICE} --script print | grep "primary" | grep "${FS_TYPE}" 1>/dev/null
  EXT_PRESENT=$?
}

#delete the table of part and create a ext part in the whole disk
create_part() {
  echo "Creating internal partition"
  parted ${INT_DEVICE} --script mklabel msdos
  echo "deleted partition table ... : ${INT_DEVICE}"
  parted ${INT_DEVICE} --script -- mkpart primary 0 -1
  echo "new partion ${INT_DEVICE}1"
  sleep 2
  mkfs.${FS_TYPE} -q "${INT_DEVICE}1"
  echo "formating ${INT_DEVICE}1 with ${FS_TYPE} filesystem"
}

######################
# check home part    #
######################
if HOME_DEVICE=`findfs UUID=${HOME_UUID}`; then
  e2fsck -y ${HOME_DEVICE}
  FSCKCODE=$?
  if [ "$FSCKCODE" -gt 3 ]; then
    "HOME file system is corrupted"
    echo "formating ${HOME_DEVICE} with ${FS_TYPE} filesystem"
    mkfs.${FS_TYPE} ${HOME_DEVICE}
    mount /home
    touch /home/FORMATED

  elif [ "$FSCKCODE" -gt 1 ]; then
    echo "The file system check corrected errors on the home partition
but requested that the system be restarted."
    exit 1 && reboot
  else
    echo "HOME filesystem is clean"
    mount /home
   fi
else
  detect_int_dev

  if [ ${HOME_DEVICE} ]; then
    echo "home dev not null"
    mkfs.${FS_TYPE} -q ${HOME_DEVICE}
    tune2fs -U ${HOME_UUID} ${HOME_DEVICE}
    mount /home
    touch /home/FORMATED
  else
    echo "home dev null"
  fi
fi

#######################
# check internal part #
#######################
if ! test -d /media/internal; then
  mkdir -p /media/internal
fi
# test -G : if these files belong to root
if test -G /media/internal; then
  chown nao:nao /media/internal
fi
# perhaps theses files are coming from 1.3.x
touch /media/internal/temperatureLog
touch /media/internal/DeviceHeadInternalGeode.xml
chown nao:nao /media/internal/temperatureLog
chown nao:nao /media/internal/DeviceHeadInternalGeode.xml
chmod 644 /media/internal/temperatureLog
chmod 644 /media/internal/DeviceHeadInternalGeode.xml

if INT_DEVICE=`findfs UUID=${INT_UUID}`; then
  e2fsck -y ${INT_DEVICE}
  FSCKCODE=$?
  if [ "$FSCKCODE" -gt 3 ]; then
    "INT filesystem is corrupted"
    echo "formating ${INT_DEVICE} with ${FS_TYPE} filesystem"
    mkfs.${FS_TYPE} -q ${INT_DEVICE}
  elif [ "$FSCKCODE" -gt 1 ]; then
    echo "The file system check corrected errors on the home partition
but requested that the system be restarted."
    exit 1 && reboot
  else
    echo "internal flash filesystem is clean"
  fi
mount /media/internal
##### these files must have the nao's UID and GID
# if the file is own by root chown to nao
for file in /media/internal/* /media/internal; do
# if the file is own by root chown to nao
  if test -G $file; then
    chown nao:nao $file
    echo $file
  fi

done
#####

# partition does not have an UUID
else
  detect_int_dev
  if [ ${INT_DEVICE} ]; then
  echo "int dev not null"
    if ! mount | grep "/dev/${INT_DEVICE}" ; then
      echo "internal partition not mount."
      if [  -d /media/internal ];
      then
        echo "mount point /media/internal"
      else
        mkdir /media/internal

      fi
      NBR_PART=$(nbr_part)
      detect_not_ext_present
      if [ "$NBR_PART" != "1" ] || [ "$EXT_PRESENT" != "0" ]; then
        create_part
      fi
      tune2fs -U ${INT_UUID} ${INT_DEVICE}1
    ## part not mount
    fi
  ## int device not null
  fi
fi

### POPULATE HOME DIRECTORY ###

if cat /etc/mtab | grep home >>/dev/null; then
  #Home part is mount
  for FOLDER in ${FOLDERS}; do
    if [ ! -d /home/nao/${FOLDER} ] ;then
      mkdir -p /home/nao/${FOLDER}
    fi
    if test -G /home/nao/${FOLDER}; then
      chown nao:nao /home/nao/${FOLDER}
    fi
  done
fi


