<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="2">
    <Box name="root" robot="" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." bitmap_expanded="1" plugin="" x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="behavior_layer1" mute="0">
                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                    <Diagram scale="74">
                        <Box name="NaoLibrary-Encapsulation_ref" robot="" id="12" tooltip="# NaoLibrary-Encapsulation&#x0A;# v 1.0&#x0A;&#x0A;This box encapsulate any box, so that it transforms it in a regular call, with params in, intermediary out and results out." bitmap_expanded="1" plugin="" x="198" y="50">
                            <bitmap>media/images/box/icons_appu/gear.png</bitmap>
                            <bitmap>media/images/box/icons_appu/shortcut.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# NaoLibrary-Encapsulation
# v1.0
import naolibrary
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.BIND_PYTHON( self.getName(),"callback_output_on_intermediary" );
        self.BIND_PYTHON( self.getName(),"callback_output_on_results" );
        self.BIND_PYTHON( self.getName(),"callback_soft_cancel" );        

    def onLoad(self):
        self.bIsRunning = False;

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        self.log( self.boxName + ": start - begin" );
        
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" );
            return;
            
        # wait the soft cancel
        self.bIsRunning = True;
        
        # get params from outside
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        try:
            params = ALMemory.getData( naolibrary.xarLoader.getVarName_Params( strBehaviorName ) );
            # erase them for next time
            ALMemory.insertData( naolibrary.xarLoader.getVarName_Params( strBehaviorName ), [] );
        except:
            params = [];
        strOutput = '%s: strBehaviorName: %s, params received: %s' % ( self.getName(), strBehaviorName, str( params ) );
        print( strOutput );        
        self.log( strOutput );
        
        # TODO, BUG a venir: ici il faudrait effacer les paramètres précédemment ajouté par la boite, avec une méthode du genre delParameter
        # car sinon si on écrase les parametres par défaut, tant qu'on ne recharge pas ce comportement, 
        # un appel sans parametre, va utiliser les dernier envoyés... C'est moche.
        i = 0;
        for elem in params:
            self.addParameter( elem[0], elem[1], False );
            i += 1;        
            
        # install hook
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
        ALMemory.subscribeToMicroEvent( self.getName() + "__output_on_intermediary", self.getName(), "", "callback_output_on_intermediary" );
        ALMemory.subscribeToMicroEvent( self.getName() + "__output_on_results", self.getName(), "", "callback_output_on_results" );
        ALMemory.subscribeToMicroEvent( naolibrary.xarLoader.getVarName_SoftCancel( strBehaviorName ), self.getName(), "", "callback_soft_cancel" );        
        
        # launch the box
        self.gotoAndPlay( 0 );
        self.log( "goto and play" );
        self.log( self.boxName + ": start - end" );
    # onInput_onStart - end

    def onInput_onStop(self):
        if( self.bIsRunning ):
            strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
            self.log( '%s: strBehaviorName: %s, stopping...' % ( self.getName(), strBehaviorName, ) );        
            ALMemory.insertData( naolibrary.xarLoader.getVarName_Cancel( strBehaviorName ), True );
            self.onFinished();
            
    def onFinished(self):
        if( self.bIsRunning ):
            strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
            self.log( '%s: strBehaviorName: %s, finishing...' % ( self.getName(), strBehaviorName, ) );
            self.bIsRunning = False;
            ALMemory.unsubscribeToMicroEvent( self.getName() + "__output_on_intermediary", self.getName() );
            ALMemory.unsubscribeToMicroEvent( self.getName() + "__output_on_results", self.getName() );
            ALMemory.unsubscribeToMicroEvent( naolibrary.xarLoader.getVarName_SoftCancel( strBehaviorName ), self.getName() );            
            self.gotoAndStop( -1 );                    
        
        
    def callback_output_on_intermediary(self, pDataName, pValue, pMessage):
        "We got there when user activate the intermediary output"
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        self.log( '%s: strBehaviorName: %s, returning intermediary: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );        
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Intermediary( strBehaviorName ), pValue );
        
    def callback_output_on_results(self, pDataName, pValue, pMessage):
        "We got there when user activate the results output"
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        self.log( '%s: strBehaviorName: %s, returning results: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Results( strBehaviorName ), pValue );
        # stop the box
        self.onFinished();
        
    def callback_soft_cancel(self, pDataName, pValue, pMessage):
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );    
        self.log( '%s: strBehaviorName: %s, soft cancel received: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );           
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Cancel( strBehaviorName ), True );
        # stop the box
        self.onFinished();
        
# NaoLibrary-Encapsulation - end
pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="output_on_intermediary" type="0" type_size="1" nature="2" inner="0" tooltip="post there your intermediary results" id="4" />
                            <Output name="output_on_results" type="0" type_size="1" nature="2" inner="0" tooltip="post there your final results" id="5" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Choice" robot="" id="5" tooltip="Launch the speech recognition waiting for a defined number of&#x0A;predicted answers (written in the table on the box). Available help&#x0A;from Nao which gives some possible answers and attracts&#x0A;attention on the other modalities to answer (head tactile sensor).&#x0A;&#x0A;You can edit a choice by left double-clicking on the line. You can&#x0A;add a choice by right clicking on a line and selecting &apos;Insert a&#x0A;row&apos;. You can delete a choice by right clicking on a line and&#x0A;selecting &apos;Remove a row&apos;. You can also write several alternative&#x0A;answers for the same choice by writing them on the line&#x0A;separated by the character &apos;/&apos;.&#x0A;Ex: apple pie / pie / apple&#x0A;Then if any of these answers (&apos;apple pie&apos;, &apos;pie&apos; or &apos;apple&apos;) are said,&#x0A;the corresponding output will be activated. Indeed, each output&#x0A;which name begins with &apos;output_&apos; correspond to the choice in the&#x0A;list placed just in front of the output." bitmap_expanded="1" plugin="ui_choice_plugin" x="192" y="70">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# script of the Choice box v8.6
# @author User-Centered Application team
# (c) 2010 Aldebaran Robotics

import time
import random
import thread
import mutex

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        # PROXIES INITIALIZATION
        self.tts = ALProxy("ALTextToSpeech")
        self.ttsStop = ALProxy("ALTextToSpeech", True) #Create another proxy as wait is blocking if audioout is remote
        self.asr = ALProxy("ALSpeechRecognition")
        self.ad = ALProxy("ALAudioDevice")
        self.player = ALProxy("ALAudioPlayer")
        self.dcm = ALProxy( "DCM" )
        self.leds = ALProxy( "ALLeds" )
        # VARIABLES INITIALIZATION
        self.aIdsTTS = []
        self.bMustStop = False
        self.bIsRunning = False
        self.bGoOut = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.aFrameNumbers = {"end" : 1,
                              "headDown" : 10,
                              "bodyTalk" : 20,
                              "reco" : 30,
                              "headCheck" : 40,
                              "helpTactileSensor" : 50,
                              "notUnderstood" : 70}
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.bInTactileSensorMenu = False
        self.bIsProcessingSimpleClickTorso = False
        self.bExternChoices = False
        self.bBrainAnimPaused = False
        self.rTimeLastChoiceSaid = -1.
        self.bIsSayingChoice = False
        self.nIndexChoice = 0
        self.sRecoInterruption = "" # = "wordRecognised" or "timeout" or "onStop" or "onTactileSensor"
        self.sPreviousAnswer = ""
        self.rTimeWhenActionMadeInTactileMenu = -1.
        # variables used for the tactile sensor
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.bPressed = False
        self.mutexProcessCurrentState = mutex.mutex()
        self.mutexTactilTouched = mutex.mutex()
        self.mutexCheckIfSeqsCorrespondingLeft = mutex.mutex()
        self.bSeqStarted = False
        # assuming that every sequence is after [0, 0, 0]
        # and then start with one tactil sensor activated
        # timeout must be either a number (int or float) not equal to 0 or an array of two numbers not equal to 0, a negative one and a positive one
        # a negative timeout means a minimum time that has to ellapse before the next step
        # a positive timeout means a maximum time before the next step must show up
        self.aSeqs = [{"name" : "Tap", "statesAndTimeout" : [ "1+", 0.35, "2+", 0.45, "0" ]},
                      {"name" : "TapFront", "statesAndTimeout" : [ "F", 1, "0" ]},
                      {"name" : "LongFront", "statesAndTimeout" : [ "F", -1, "F" ]},
                      {"name" : "TapMiddle", "statesAndTimeout" : [ "M", 1, "0" ]},
                      {"name" : "LongMiddle", "statesAndTimeout" : [ "M", -1, "M" ]},
                      {"name" : "TapRear", "statesAndTimeout" : [ "R", 1, "0" ]},
                      {"name" : "LongRear", "statesAndTimeout" : [ "R", -1, "R" ]},
                      {"name" : "CalmDown", "statesAndTimeout" : [ "1+", 0.5, "2+", -1, "2+" ]}]
        # sequences initialization
        aSeqsTemp = []
        for seq in self.aSeqs:
            try: # ensure that the sequence has at least a name and states and timeout defined
                seq["name"]
                seq["statesAndTimeout"]
                aSeqsTemp.append(seq)
            except:
                pass
        self.aSeqs = aSeqsTemp
        for seq in self.aSeqs:
            states = range( len( seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] ) )
            i = 0
            for state in seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2]:
                states[i] = self.convertToArrayOfPossibleStates(state)
                i += 1
            seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] = states
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        # end - variables used for the tactile sensor
        # variables used for the speech recognition
        self.aAllNegativeWords = {"French" : ["non", "non nao", "non non", "pas vraiment"],
                                  "English" : ["no", "no nao", "disagree", "I disagree"]}
        self.aAllPositiveWords = {"French" : ["oui", "oui nao", "si", "absolument", "ok"],
                                  "English" : ["yes", "yes nao", "agree", "yes nao", "I agree", "of course"]}
        self.aAllHelpWords = {"French" : ["l'aide", "aide", "aide moi", "dis moi l'aide", "je sais pas", "je ne sais pas"],
                              "English" : ["help", "help me", "i don't know"]}
        self.aAllExitWords = {"French" : ["sortir", "quitter", "passer", "arrête", "annuler", "tais toi", "stoppe"],
                              "English" : ["exit", "stop", "quit"]}
        self.aAllRepeatWords = {"French" : ["répéter", "répète", "pardon", "quoi", "comment"],
                                "English" : ["repeat", "pardon", "what", "excuse me"]}
        # end - variables used for the speech recognition
        # variables used for the Text-To-Speech
        self.aAllSentenceConfirmation = {"French" : ["J'ai compris ", ". Est-ce correct?"],
                                         "English" : ["I understood ", ". Is it correct?"]}
        self.aAllSentenceHelpEnum = {"French" : ["Tu peux répondre ", ", ou ", "par exemple ", "Aucune réponse précise n'est attendue. ", "tu peux me demander de "],
                                     "English" : ["Your answer can be ", ", or ", "for example ", "No answer is really expected. ", "you can ask me to "]}
        self.aAllSentenceHelpTactil = {"French" : ["Tu peux aussi choisir une réponse à l'aide de mon capteur tactile.", "\\Pau=600\\ Appuie sur l'avant ou l'arrière de ma calotte pour naviguer parmi les réponses possibles. Appuie ensuite sur le rond du milieu pour valider ton choix."],
                                       "English" : ["You can also use my tactile sensor to choose the answer.", "\\Pau=600\\ Press front or rear of my skull cap to go through all of the available answers. Press then the circle in the middle to validate your choice."]}
        self.aAllSentenceNotUnderstood = {"French" : ["Je n'ai pas compris. "],
                                          "English" : ["I did not understand. "]}
        self.aAllSentenceNoQuestion = {"French" : ["Il n'y a pas de question prédéfinie, je ne peux donc pas la répéter. "],
                                       "English" : ["No question has been defined, then I cannot repeat it. "]}
        self.aAllNotUnderstoodAnims = {"French" : ["Il y a trop de bruit ici! ", "Essaye de me parler plus distinctement. ", "Je ne t'entends pas bien. ", "Je ne comprends rien! ", "C'est désespérant. ", "Fais un effort! ", "Quelle est cette langue étrange? ", "Je dois avoir de la purée dans les oreilles. ", "Enlève cette patate de ta bouche quand tu parles. "],
                                       "English" : ["There is too much noise here! ", "Try to talk to me more distinctly. ", "I don't hear you very well. ", "I don't understand anything! ", "I'm desperate. ", "Make an effort! ", "What is this weird language? ", "I must have something in my ears. ", "Take out this potatoe from your mouth when you speak. "]}
        # end - variables used for the Text-To-Speech
        # choices
        # !!! don't remove any comments from this variable !!!
        # (they are here to make the plugin work)
        self.aListAllChoices = {"French" : ["oui / ok", "non", ""
                                    ],
                                "English" : ["yes / ok", "no", ""
                                    ]}
        self.aChoices = []
        self.aChoiceIndexes = []
        # parameters which can be changed from the parameters edition window
        self.sQuestion = ""
        self.nTimeoutReco = 6
        self.nTimeoutRecoConfirmation = 6
        self.nTimeoutTactile = 10
        self.nMaxCountNoReply = 3
        self.nMaxCountFailure = 5
        self.arUnderstoodThreshold = [0.0, 1.0] # range of self.rUnderstoodThreshold
        self.arConfirmationThreshold = [0.0, 1.0] # range of self.rConfirmationThreshold (must be higher than self.arUnderstoodThreshold)
        self.rUnderstoodThreshold = 0.2
        self.rConfirmationThreshold = 0.4
        self.bFunActivated = False
        self.bActivateEyesLight = True
        self.bActivateEarsLight = True
        self.bActivateBrainLight = True
        self.bActivateHelpWhenFailure = True
        self.bRepeatValidatedChoice = True
        self.bActivateDefaultChoiceHelp = True
        self.bActivateDefaultChoiceRepeat = True
        self.bActivateDefaultChoiceExit = True

# FUNCTIONS ===============================================================================================
        
# INPUTS ACTIVATION PROCESSING ------------------------------------------------------------------------------
    def onInput_onStart(self, question=None):
        "Initialize variables and start box behaviour."
        self.log( "Input onStart stimulated." )
        if( self.bIsRunning): # to avoid starting the process twice
            return
        self.bIsRunning = True
        self.asr.setVisualExpression( False )
        self.asr.setLanguage( self.tts.getLanguage() )
        self.asNegativeWords = self.aAllNegativeWords[self.tts.getLanguage()]
        self.asPositiveWords = self.aAllPositiveWords[self.tts.getLanguage()]
        self.asHelpWords = self.aAllHelpWords[self.tts.getLanguage()]
        self.asExitWords = self.aAllExitWords[self.tts.getLanguage()]
        self.asRepeatWords = self.aAllRepeatWords[self.tts.getLanguage()]
        self.bGoOut = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.sRecoInterruption = ""
        self.sPreviousAnswer = ""
        self.bMustStop = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.beginTime = time.time()
        self.bInConfirmation = False
        self.bInTactileSensorMenu = False
        self.bBrainAnimPaused = False
        self.bPressed = False
        self.rTimeWhenActionMadeInTactileMenu = -1.
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.bIsProcessingSimpleClickTorso = False
        try:
            self.rUnderstoodThreshold = self.getParameter( "Minimum threshold to understand" )
        except:
            self.rUnderstoodThreshold = 0.2
        try:
            self.rConfirmationThreshold = self.getParameter( "Minimum threshold to be sure" )
        except:
            self.rConfirmationThreshold = 0.4
        try:
            self.nTimeoutReco = self.getParameter( "Speech recognition timeout" )
        except:
            self.nTimeoutReco = 6
        try:
            self.nTimeoutRecoConfirmation = self.getParameter( "Speech recognition timeout when confirmation" )
        except:
            self.nTimeoutRecoConfirmation = 6
        try:
            self.nTimeoutTactile = self.getParameter( "Tactile sensor menu timeout" )
        except:
            self.nTimeoutTactile = 10
        try:
            self.nMaxCountNoReply = self.getParameter( "Maximum number of repetition when no reply" )
        except:
            self.nMaxCountNoReply = 3
        try:
            self.nMaxCountFailure = self.getParameter( "Maximum number of repetition when failure" )
        except:
            self.nMaxCountFailure = 5
        try:
            self.bFunActivated = self.getParameter( "Fun animations activated" )
        except:
            self.bFunActivated = False
        try:
            self.bActivateEyesLight = self.getParameter( "Activate eyes light" )
        except:
            self.bActivateEyesLight = True
        try:
            self.bActivateEarsLight = self.getParameter( "Activate ears light" )
        except:
            self.bActivateEarsLight = True
        try:
            self.bActivateBrainLight = self.getParameter( "Activate brain light" )
        except:
            self.bActivateBrainLight = True
        try:
            self.bActivateHelpWhenFailure = self.getParameter( "Activate help when failure" )
        except:
            self.bActivateHelpWhenFailure = True
        try:
            self.bRepeatValidatedChoice = self.getParameter( "Repeat validated choice" )
        except:
            self.bRepeatValidatedChoice = True
        try:
            self.bActivateDefaultChoiceHelp = self.getParameter( "Activate help command" )
        except:
            self.bActivateDefaultChoiceHelp = True
        try:
            self.bActivateDefaultChoiceRepeat = self.getParameter( "Activate repeat command" )
        except:
            self.bActivateDefaultChoiceRepeat = True
        try:
            self.bActivateDefaultChoiceExit = self.getParameter( "Activate exit command" )
        except:
            self.bActivateDefaultChoiceExit = True
        self.aDefaultChoices = []
        if (self.bActivateDefaultChoiceHelp):
            self.aDefaultChoices.append( self.asHelpWords )
        if (self.bActivateDefaultChoiceRepeat):
            self.aDefaultChoices.append( self.asRepeatWords )
        if (self.bActivateDefaultChoiceExit):
            self.aDefaultChoices.append( self.asExitWords )
        if( question == None ):
            question = ""
        self.initQuestionAndChoices( question )
        if( len( self.aChoices ) > len( self.aDefaultChoices ) ): # if there is at least one choice (not a default one)
            self.nIndexChoice = len( self.aDefaultChoices )
        else: # if there are only default words
            self.nIndexChoice = 0
        self.bGoOut = False
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, 0.1 )
        # launch torso handler
        thread.start_new_thread( self.torsoClickHandler, () )
        # initialize tactile sensor handler
        self.initSeqDetected()
        # subscribe to tactile sensors extractors (launch tactile sensor handler)
        ALMemory.subscribeToEvent( "FrontTactilTouched", self.getName(), "onTactilTouched" )
        ALMemory.subscribeToEvent( "MiddleTactilTouched", self.getName(), "onTactilTouched" )
        ALMemory.subscribeToEvent( "RearTactilTouched", self.getName(), "onTactilTouched" )
        thread.start_new_thread( self.loopLedsBrainTwinkle, () )
        while( not self.bGoOut ):
            self.questionRecognitionReaction()
        if( self.bInTactileSensorMenu ):
            self.nCountNoReply = 0
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            self.loopLedsBrainTurn()
        else:
            self.bIsRunning = False

    def onInput_choicesList(self, p):
        "Set choices list."
        self.log( "Input choicesList stimulated." )
        if( not self.bIsRunning ):
            self.bExternChoices = True
            self.asNegativeWords = self.aAllNegativeWords[self.tts.getLanguage()]
            self.asPositiveWords = self.aAllPositiveWords[self.tts.getLanguage()]
            self.asHelpWords = self.aAllHelpWords[self.tts.getLanguage()]
            self.asExitWords = self.aAllExitWords[self.tts.getLanguage()]
            self.asRepeatWords = self.aAllRepeatWords[self.tts.getLanguage()]
            try:
                self.bActivateDefaultChoiceHelp = self.getParameter( "Activate help command" )
            except:
                self.bActivateDefaultChoiceHelp = True
            try:
                self.bActivateDefaultChoiceRepeat = self.getParameter( "Activate repeat command" )
            except:
                self.bActivateDefaultChoiceRepeat = True
            try:
                self.bActivateDefaultChoiceExit = self.getParameter( "Activate exit command" )
            except:
                self.bActivateDefaultChoiceExit = True
            self.aDefaultChoices = []
            if (self.bActivateDefaultChoiceHelp):
                self.aDefaultChoices.append( self.asHelpWords )
            if (self.bActivateDefaultChoiceRepeat):
                self.aDefaultChoices.append( self.asRepeatWords )
            if (self.bActivateDefaultChoiceExit):
                self.aDefaultChoices.append( self.asExitWords )
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            for choice in p:
                if( self.isString(choice) ):
                    choice = choice.strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                    if( choice != "" ):
                        choice = [ choice ]
                    else:
                        choice = []
                elif( self.isArray(choice) ):
                    if( choice != [] ):
                        for i in range( len( choice ) ):
                            if( self.isString(choice[i]) ):
                                choice[i] = choice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                                if( len( choice[i] ) < 1 ):
                                    del choice[i]
                                    i -= 1 # to parse the good one next loop
                            else:
                                raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                else:
                    raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                if( len( choice ) > 0 ):
                    for sWord in choice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in input choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    self.aChoices.append( choice )
                    self.aChoiceIndexes.append( index )
                index += 1

    def onInput_onStop(self):
        "Stop box behaviour."
        self.log( "Input onStop stimulated." )
        if( self.bIsRunning ):
            self.goOut( self.asExitWords[0], "onStop" )
            self.sRecoInterruption = "onStop"
        else:
            self.onUnload()
                    
# GENERAL FUNCTIONS ------------------------------------------------------------------------------------------

    def isString(self, strVariable):
        try:
            if( type( strVariable ) == type( "some string" ) ):
                return True
        except:
            pass
        return False

    def isArray(self, aVariable):
    	try:
    		if( type( aVariable ) == type( ["some array"] ) ):
    		    return True
    	except:
    		pass
    	return False
    	
    def getBrainLedName(self, nNumLed):
        "Get the name of the DCM led device from its number"
        "0 => front left; 1 => next in clock wise; until 11"
        numLed = nNumLed%12
        if( numLed <= 1 ):
            return "Head/Led/Front/Right/%d/Actuator/Value" % (1-numLed)
        elif( numLed >= 10 ):
            return "Head/Led/Front/Left/%d/Actuator/Value" % (numLed-10)
        elif( numLed <= 2 ):
            return "Head/Led/Middle/Right/%d/Actuator/Value" % (2-numLed)
        elif( numLed >= 9 ):
            return "Head/Led/Middle/Left/%d/Actuator/Value" % (numLed-9)
        elif( numLed <= 5 ):
            return "Head/Led/Rear/Right/%d/Actuator/Value" % (numLed-3)
        else:
            return "Head/Led/Rear/Left/%d/Actuator/Value" % (8-numLed)

    def skipTTS(self):
        try:
            self.ttsStop.stopAll()
        except:
            self.log( "Warning: The Text-To-Speech could not have been stopped." )

# QUESTION AND CHOICES INITIALIZATION ----------------------------------------------------------------------

    def initQuestionAndChoices(self, p):
        "Initialize the question and the choices."
        # question processing
        if( self.isString(p) ):
            self.sQuestion = p
        else:
            raise Exception( "Error in question input syntax:\nQuestion text\nexpected for example, but:\n" + str(p[0]) + "\nfound" )
        # choices processing
        if( not self.bExternChoices ):
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            listChoices = self.aListAllChoices[self.tts.getLanguage()]
            for choice in listChoices:
                aChoice = choice.split( "/" )
                if( aChoice != [] ):
                    for i in range( len( aChoice ) ):
                        aChoice[i] = aChoice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                        if( len( aChoice[i] ) < 1 ):
                            del aChoice[i]
                            i -= 1 # to parse the good one next loop
                if( len( aChoice ) > 0 ):
                    # check if there is a word which is already used for the default choices
                    for sWord in aChoice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    # append the choice to the list if everything worked well
                    self.aChoices.append( aChoice )
                    self.aChoiceIndexes.append( index )
                index += 1
        # check that there is at least one choice (a default one or not)
        if( len( self.aChoices ) < 1 ):
            raise Exception( "Error in choices list: It is empty. There is no default choice nor choice entered." )

# QUESTION-RECOGNITION-REACTION -----------------------------------------------------------------------------

    def questionRecognitionReaction(self):
        "Ask question, launch speech recognition and process answer."
        self.ttsQuestionAndRecoInit()
        if( not self.bMustStop ):
            # stop movement animation
            if( self.nFrameNumber != self.aFrameNumbers["reco"] ):
                self.nFrameNumber = self.aFrameNumbers["reco"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            # start speech recognition
            self.log( "Speech recognition started." )
            ALMemory.subscribeToEvent( "WordRecognized", self.getName(), "onWordRecognized" )
            self.bRecoIsWaitingForVoice = True
            ALMemory.subscribeToEvent( "SpeechDetected", self.getName(), "onSpeechDetected" )
        # leds during the recognition
        self.loopLedsReco()
        # process the reco loop break
        self.processRecoInterruption()

    def ttsQuestionAndRecoInit(self):
        "Ask question and initialize the speech recognition during the question to gain time in the interaction."
        if( not self.bInConfirmation ):
            # launch TTS
            idTTS = -1
            if( self.sQuestion != ""):
                idTTS = self.tts.post.say( self.sQuestion )
                self.aIdsTTS.append( idTTS )
                self.log( "Robot says: " + str(self.sQuestion) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # prepare speech recognition
            self.asr.setLanguage( self.tts.getLanguage() )
            self.ad._startAcquisition()
            if( not self.bVocabularyLoaded ):
                aWordsRecognised = []
                for i in range( len( self.aChoices ) ):
                    if( self.aChoices[i] != [] ):
                        aWordsRecognised.extend( self.aChoices[i] )
                sWordsRecognised = "You can say: "
                if( len( aWordsRecognised ) > 1 ):
                    for i in range( len( aWordsRecognised ) - 1 ):
                        sWordsRecognised += "'" + aWordsRecognised[i] + "', "
                if( len( aWordsRecognised ) > 0 ):
                    sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
                sWordsRecognised += "."
                self.log( sWordsRecognised )
                self.asr.setWordListAsVocabulary( aWordsRecognised )
                self.bVocabularyLoaded = True
        else:
            # launch TTS
            sentence = self.aAllSentenceConfirmation[self.tts.getLanguage()]
            idTTS = -1
            sentenceToSay = sentence[0] + self.sPreviousAnswer + sentence[1]
            if( sentenceToSay != ""):
                idTTS = self.tts.post.say( sentenceToSay )
                self.aIdsTTS.append( idTTS )
                self.log( "Robot says: " + str(sentenceToSay) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # prepare speech recognition
            aWordsRecognised = []
            aWordsRecognised.extend( self.asNegativeWords )
            aWordsRecognised.extend( self.asPositiveWords )
            sWordsRecognised = "You can say: "
            if( len( aWordsRecognised ) > 1 ):
                for i in range( len( aWordsRecognised ) - 1 ):
                    sWordsRecognised += "'" + aWordsRecognised[i] + "', "
            if( len( aWordsRecognised ) > 0 ):
                sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
            sWordsRecognised += "."
            self.log( sWordsRecognised )
            self.asr.setWordListAsVocabulary( aWordsRecognised )
            self.bVocabularyLoaded = False
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.log( "Warning: Could not wait the TTS." )

    def processRecoInterruption(self):
        "Process speech recognition interruption (timeout, action on tactile sensor, word said, etc...)"
        # wait for the end of the reaction (help, not understood, etc...)
        while( self.sRecoInterruption == "" ):
            time.sleep( 0.2 )
        self.log( "The speech recognition has been interrupted because of: " + str(self.sRecoInterruption) + "." )
        if( self.sRecoInterruption == "timeout" ): # if recognition interrupted by timeout
            try:
                # stop recognition
                ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
                self.bRecoIsWaitingForVoice = False
                self.bRecoIsHearingOrAnalysing = False
                self.log( "Speech recognition stopped." )
                ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
            except:
                pass
            if( self.bInConfirmation ): # if it was a confirmation question
                # leds noticing that the robot confirm its guessing
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
                # if nothing has been said, we assume that the user agree
                self.bInConfirmation = False
                if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else: # if not repeat nor help asked
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
            else:
                # reinitialize leds
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
        else:
            self.nCountNoReply = 0
            if( self.sRecoInterruption in [ "onStop", "onTorsoClick" ] ):
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.sRecoInterruption = ""
        
    def repeatWhenNoQuestion(self):
        "Robot's reaction when it is asked to repeat the question when there is no question."
        if( self.sQuestion == "" ):
            aSentenceNoQuestion = self.aAllSentenceNoQuestion[self.tts.getLanguage()]
            sentenceNoQuestion = aSentenceNoQuestion[0]
            if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                sentenceNoQuestion += self.enumerateChoices( True ) # True to ask that the introduction is played
            else: # if there is no choice (so there is at least one default choice)
                sentenceNoQuestion += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
            # launch TTS
            idTTS = -1
            if( sentenceNoQuestion != ""):
                if( self.bInTactileSensorMenu ):
                    idTTS = self.tts.post.say( sentenceNoQuestion + "\\Pau=300\\" )
                else:
                    idTTS = self.tts.post.say( sentenceNoQuestion )
                self.aIdsTTS.append( idTTS )
                self.log( "Robot says: " + str(sentenceNoQuestion) )
                if( not self.bInTactileSensorMenu ):
                    # launch TTS movement animation
                    if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                        self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            # wait for the end of the TTS
            if( idTTS != -1 ):
                try:
                    self.tts.wait( idTTS, 0 )
                except:
                    self.log( "Warning: Could not wait the TTS." )

# RECO OUTPUT PROCESSING --------------------------------------------------------------------------------------

    def onWordRecognized(self, pDataName, pValue, pMessage):
        "Handler for when a word is recognised by the speech recognition system."
        aState = pValue
        self.log( "The word '" + str(aState[0]) + "' has been recognised with a threshold of " + str(aState[1]) + "." )
        # interrupt loops:
            # - stop reco
            # - stop leds
            # - stop asking the question on and on
        try:
            ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.log( "Speech recognition stopped." )
            ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        if( aState[0] != "" ):
            if( aState[1] >= self.rUnderstoodThreshold ):
                if( self.rUnderstoodThreshold <= self.arUnderstoodThreshold[1] - 0.02 ):
                    self.rUnderstoodThreshold += 0.02
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[1]
                if( self.bInConfirmation ):
                    if( aState[0] in self.asNegativeWords ):
                        thread.start_new_thread( self.ledsNegative, () )
                    else:
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                else:
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                self.reactionWordUnderstood( aState )
            else:
                if( self.rUnderstoodThreshold >= self.arUnderstoodThreshold[0] + 0.05 ):
                    self.rUnderstoodThreshold -= 0.05
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[0]
                aCurrentChoice = ""
                for choice in self.aChoices:
                    if( aCurrentChoice == "" ):
                        if( aState[0] in choice ):
                            aCurrentChoice = choice
                if( self.sPreviousAnswer in aCurrentChoice ): # if answer in the same choice as previously
                    # then ask confirmation
                    aState[1] = self.rConfirmationThreshold - 0.01
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    self.reactionWordUnderstood( aState )
                else:
                    # else not understood
                    if( self.bInConfirmation ):
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    else:
                        self.sPreviousAnswer = aState[0]
                        thread.start_new_thread( self.ledsNotUnderstood, () )
                    self.reactionNothingUnderstood()
        else:
            if( self.bInConfirmation ):
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
            else:
                thread.start_new_thread( self.ledsNotUnderstood, () )
            self.reactionNothingUnderstood()
        if( pMessage == "" ):
            self.sRecoInterruption = "wordRecognised"
        else:
            self.sRecoInterruption = pMessage
        
    def onSpeechDetected(self, pDataName, pValue, pMessage):
        "Handler for when something has been heard by the speech recognition system."
        aState = pValue
        if( aState == 1):
            if( self.bRecoIsWaitingForVoice ):
                # make eyes leds switch from an animation to an other
                self.bRecoIsHearingOrAnalysing = True
                self.bRecoIsWaitingForVoice = False
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass
    
    def reactionWordUnderstood(self, word):
        "Reaction depending on the word recognised (help, repeat, word in choices, etc...) and its recognition confidence."
        if( self.bInConfirmation ):
            self.bInConfirmation = False
            if( word[0] in self.asNegativeWords ):
                # update number of failures
                self.nCountFailure += 1
                if( self.sPreviousAnswer in self.asHelpWords ):
                    if( self.nCountFailure >= self.nMaxCountFailure ): # if maximum number of failures
                        # skip the question
                        self.goOut( self.asExitWords[0], "notUnderstood" )
                else:
                    self.helpAfterFailure()
            else:
                if( (self.sPreviousAnswer in self.asHelpWords) or (word[0] in self.asHelpWords) ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords or (word[0] in self.asRepeatWords) ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
        else:
            self.sPreviousAnswer = word[0]
            if( word[1] >= self.rConfirmationThreshold ):
                if( self.rConfirmationThreshold <= self.arConfirmationThreshold[1] - 0.02 ):
                    self.rConfirmationThreshold += 0.02
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[1]
                if( self.sPreviousAnswer in self.asHelpWords ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
            else:
                if( self.rConfirmationThreshold >= self.arConfirmationThreshold[0] + 0.05 ):
                    self.rConfirmationThreshold -= 0.05
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[0]
                self.bInConfirmation = True

    def reactionNothingUnderstood(self):
        "Reaction when nothing has been understood or without an enough confidence."
        if( self.bInConfirmation ):
            # if the robot did not understand, we assume that the user agree
            self.bInConfirmation = False
            if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                self.helpWhenAsked()
            elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                self.repeatWhenNoQuestion()
                # repeat the question
            else: # if not repeat nor help asked
                self.goOut( self.sPreviousAnswer, "wordRecognised" )
        else:
            # update number of failures
            self.nCountFailure += 1
            sentenceNotUnderstood = self.aAllSentenceNotUnderstood[self.tts.getLanguage()]
            if( self.nCountFailure <= 2 ): # if first or second failure
                sentence = sentenceNotUnderstood[0]
            else: # if third failure or more
                sentenceNotUnderstoodAnims = self.aAllNotUnderstoodAnims[self.tts.getLanguage()]
                if( self.bFunActivated ):
                    index = random.randint( 0, len( sentenceNotUnderstoodAnims ) - 1 )
                else:
                    index = random.randint( 0, 3 )
                sentence = sentenceNotUnderstoodAnims[index]
                if( self.nFrameNumber != self.aFrameNumbers["notUnderstood"] + 10*index ):
                    self.nFrameNumber = self.aFrameNumbers["notUnderstood"] + 10*index
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            self.helpAfterFailure( sentence )
            
# HELP ------------------------------------------------------------------------------------------------------
        
    def enumerateChoices(self, bIntroToSay): # assuming that there is at least one choice
        "Enumerate choices (only the first word of each choice is taken into account)."
        sentenceHelpEnum = self.aAllSentenceHelpEnum[self.tts.getLanguage()]
        sentence = ""
        if( bIntroToSay ):
            sentence += sentenceHelpEnum[0]
            if( not len( self.aChoices ) - len( self.aDefaultChoices ) < 5 ): # if there are more than 4 choices
                sentence += sentenceHelpEnum[2]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) < 5 ): # if there are 4 or less choices
            sentence += self.aChoices[len( self.aDefaultChoices )][0]
            if( len( self.aChoices ) - len( self.aDefaultChoices ) > 1 ): # if there are at least 2 choices
                if(len( self.aChoices ) - len( self.aDefaultChoices ) > 2 ): # if there are at least 3 choices
                    for i in range( len( self.aChoices ) - len( self.aDefaultChoices ) - 2 ):
                        sentence += ", " + self.aChoices[i+len( self.aDefaultChoices )+1][0]
                sentence += sentenceHelpEnum[1]
                sentence += self.aChoices[len( self.aChoices ) - 1][0]
        else: # if there are more than 4 choices
            indexes = []
            index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            while( index in indexes ):
                index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            indexes.append( index )
            sentence += self.aChoices[index][0]
            for i in range( 2 ):
                index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
                while( index in indexes ):
                    index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
                indexes.append( index )
                sentence += ", " + self.aChoices[index][0]
            if( len( self.aChoices ) - len( self.aDefaultChoices ) < 5 ): # if there are 4 or less choices
                sentence += sentenceHelpEnum[1]
            else: # if there are more than 4 choices
                sentence += ", "
            index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            while( index in indexes ):
                index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            indexes.append( index )
            sentence += self.aChoices[index][0]
        if( bIntroToSay ):
            sentence += ". "
        else:
            sentence += "? "
        return sentence
        
    def enumerateDefaultChoices(self, bIntroToSay): # assuming that there is at least one default word
        "Enumerate default choices (only the first word of each choice is taken into account)."
        sentenceHelpEnum = self.aAllSentenceHelpEnum[self.tts.getLanguage()]
        sentence = ""
        if( bIntroToSay ):
            if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
                sentence += sentenceHelpEnum[3]
            sentence += sentenceHelpEnum[4]
        sentence += self.aDefaultChoices[0][0]
        if( len( self.aDefaultChoices ) > 1 ): # if there are at least 2 default words
            if( len( self.aDefaultChoices ) > 2 ): # if there are at least 3 default words
                for i in range( len( self.aDefaultChoices ) - 2 ):
                    sentence += ", " + self.aDefaultChoices[i+1][0]
            sentence += sentenceHelpEnum[1]
            sentence += self.aDefaultChoices[len( self.aDefaultChoices ) - 1][0]
        if( bIntroToSay ):
            sentence += ". "
        else:
            sentence += "? "
        return sentence
        
    def explanationTactilSensor(self):
        "Explain the possible interaction with the tactile sensor."
        sentenceHelpTactil = self.aAllSentenceHelpTactil[self.tts.getLanguage()]
        if( self.bInTactileSensorMenu ):
            sentence = sentenceHelpTactil[1]
        else:
            sentence = sentenceHelpTactil[0]
        return sentence
        
    def helpWhenAsked(self, sentence = ""):
        "Help when the user asked it: enumerate choices, enumerate default choices and explain tactile sensor possible interaction."
        if( not self.bInTactileSensorMenu ):
            # enumeration of choices
            if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                sentence += self.enumerateChoices( True ) # True to ask that the introduction is played
            # enumeration of default choices
            if( len( self.aDefaultChoices ) > 0 ): # if there is at least one default word
                sentence += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
        # explanation about alternative modality (tactil sensor, arm motion)
        sentence += self.explanationTactilSensor()
        # launch TTS
        idTTS = -1
        if( sentence != "" ):
            if( self.bInTactileSensorMenu ):
                idTTS = self.tts.post.say( sentence + "\\Pau=300\\" )
            else:
                idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.log( "Robot says: " + str(sentence) )
            # launch TTS movement animation
            if( self.bInTactileSensorMenu ):
                if( self.nFrameNumber != self.aFrameNumbers["helpTactileSensor"] ):
                    self.nFrameNumber = self.aFrameNumbers["helpTactileSensor"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            else:
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.log( "Warning: Could not wait the TTS." )
        # repeat the question

    def helpAfterFailure(self, sentence = ""):
        "Help when the speech recognition failed (nothing understood or incorrect answer understood)."
        if( self.nCountFailure < self.nMaxCountFailure ): # if reasonable number of failures
            if( self.bActivateHelpWhenFailure ):
                if( self.nCountFailure == 1 ): # if first failure
                    # enumeration of choices, or default words if there is no choice
                    if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                        sentence += self.enumerateChoices( True ) # True to ask that the introduction is played
                    else:
                        sentence += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
                elif( self.nCountFailure == 2 ): # if second failure
                    # short enumeration of choices, or default words if there is no choice
                    if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                        sentence += self.enumerateChoices( False ) # False to ask that the introduction is not played
                    else:
                        sentence += self.enumerateDefaultChoices( False ) # False to ask that the introduction is not played
                    # explanation about alternative modality (tactil sensor, arm motion)
                    sentence += self.explanationTactilSensor()
                else: # if third failure or more
                    pass
                # launch TTS
                idTTS = -1
                if( sentence != "" ):
                    idTTS = self.tts.post.say( sentence )
                    self.aIdsTTS.append( idTTS )
                    self.log( "Robot says: " + str(sentence) )
                    # launch TTS movement animation
                    listPossibleFrames = range( len( self.aAllNotUnderstoodAnims[self.tts.getLanguage()] ) )
                    for i in range(len(listPossibleFrames)):
                        listPossibleFrames[i] = listPossibleFrames[i] * 10 + self.aFrameNumbers["notUnderstood"]
                    if( ( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ) and not ( self.nFrameNumber in listPossibleFrames ) ):
                        try:
                            self.gotoAndStop(self.aFrameNumbers["bodyTalk"])
                        except:
                            pass
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                # wait for the end of the TTS
                if( idTTS != -1 ):
                    try:
                        self.tts.wait( idTTS, 0 )
                    except:
                        self.log( "Warning: Could not wait the TTS." )
            # repeat the question
        else: # if maximum number of failures
            # skip the question
            self.goOut( self.asExitWords[0], "notUnderstood" )

# LEDS ---------------------------------------------------------------------------------------------------
    
    def setLeds(self, eyesLight, earsLight, brainLight):
        "Set all LEDS (eyes, ears and brain lights)."
        rDuration = 1
        if( self.bActivateEyesLight ):
            # set eyes leds
            self.leds.post.fadeRGB( "FaceLeds", eyesLight, rDuration )
        if( self.bActivateEarsLight ):
            # set ears leds
            self.leds.fadeRGB( "EarLeds", earsLight, rDuration )
        if( self.bActivateBrainLight ):
            # set brain leds light
            self.setLedsBrain( brainLight, 500 )

    def ledsUnderstood(self, bFlashEars, bFlashBrain):
        "Sequence of LEDS for eyes, ears and brain when the robot understood what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x00FF00, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x00FF00, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            if( self.bInTactileSensorMenu ):
                self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
            else:
                self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.1 )
        if( not self.bInTactileSensorMenu ):
            self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def ledsNotUnderstood(self):
        "Sequence of LEDS for eyes and ears when the robot did not understand what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.3 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.bBrainAnimPaused = False
        
    def ledsNegative(self):
        "Sequence of LEDS for eyes and ears when the robot understood 'no'."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def loopLedsReco(self):
        "LEDS (eyes and ears) process during the speech recognition."
        self.beginTime = time.time()
        if( self.bInConfirmation ):
            timerReco = self.beginTime + self.nTimeoutRecoConfirmation
        else:
            timerReco = self.beginTime + self.nTimeoutReco
        self.bHasAlreadyHearingEyes = False
        nEarLedsNextIndex = 0
        nEyesLed = -1
        while( self.bRecoIsWaitingForVoice or self.bRecoIsHearingOrAnalysing ):
            if( self.bMustStop ):
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass
                break
            if( self.bRecoIsWaitingForVoice ):
                if( timerReco < time.time() ):
                    try:
                        self.timeToReply(timerReco - self.beginTime)
                    except:
                        pass
                    self.sRecoInterruption = "timeout"
                    break
            nEarLedsNextIndex = self.ledsEarsTurnOneStep( nEarLedsNextIndex )
            nEyesLed += 1
            self.ledsEyesTurnOneStep( 0x0055FF, nEyesLed%8 )
            time.sleep( 0.2 )
                
    def ledsEarsTurnOneStep(self, nEarLedsNextIndex):
        "One step of ears LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEarsLight ):
            nNbrLedByEars = 10
            rTime = 0.7
            strTemplate = "Ears/Led/%s/%dDeg/Actuator/Value"
            nAngle = (360/nNbrLedByEars) * nEarLedsNextIndex
            # update index before sending movement in case of a fast/concurrent call of the function
            nEarLedsNextIndex -= 1 # more beautiful to turn in this way
            if( nEarLedsNextIndex < 0 ):
                nEarLedsNextIndex = nNbrLedByEars-1
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 0.0, rTime*1.2 )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 0.0, rTime*1.2 )
        return nEarLedsNextIndex
            
    def ledsEyesTurnOneStep(self, nColor, nLed):
        "One step of eyes LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEyesLight ):
            rTime = 0.7
            if( self.bRecoIsHearingOrAnalysing ):
                if( not self.bHasAlreadyHearingEyes ):
                    self.leds.fadeRGB( "FaceLeds", 0xF4FF22, 0.1 )
                    # start headcheck animation
                    if( self.nFrameNumber != self.aFrameNumbers["headCheck"] ):
                        self.nFrameNumber = self.aFrameNumbers["headCheck"]
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
                    self.bHasAlreadyHearingEyes = True
            elif( self.bRecoIsWaitingForVoice ):
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , nColor, rTime )
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , 0x000000, rTime*1.25 )

    def ledsChangeOnTactile(self):
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x0055FF, rDuration )
        self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
        self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.2 )
        self.bBrainAnimPaused = False

    def loopLedsBrainTurn(self):
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0. )
        rIntensity = 0.5
        nTime = 50
        bAlreadyPaused = False
        while( self.bInTactileSensorMenu ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( self.bActivateBrainLight ):
                        for i in range( 12 ):
                            if( not self.bBrainAnimPaused ):
                                riseTime = self.dcm.getTime(nTime)
                                strDeviceName = self.getBrainLedName(i)
                                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )
                                time.sleep( nTime/1000. )
                                if( not self.bBrainAnimPaused ):
                                    self.dcm.set( [ strDeviceName, "Merge",  [[ 0.0, riseTime + int(nTime)/4 ]] ] )
            time.sleep( nTime/1000. )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )

    def loopLedsBrainTwinkle(self):
        rIntensity = 0.5
        bOnStep = True
        bAlreadyPaused = False
        while( not self.bInTactileSensorMenu and self.bIsRunning ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( bOnStep ):
                        self.setLedsBrain( rIntensity, 700 )
                        bOnStep = False
                    else:
                        self.setLedsBrain( 0.0, 700 )
                        bOnStep = True
            time.sleep( 1 )
        
    def setLedsBrain(self, rIntensity, rTimeMs):
        "One step of brain LEDS sequence (twinkle) when the robot is in speech recognition."
        if( self.bActivateBrainLight ):
            riseTime = self.dcm.getTime( rTimeMs )
            for i in range( 12 ):
                strDeviceName = self.getBrainLedName(i)
                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )

# TACTILE SENSOR MENU -------------------------------------------------------------------------------------

    def onAlternativeModalityAction(self, p):
        "Process actions from alternative modalities (sequence from the tactile sensor, simple click on the torso button...)."
        if( not self.bIsRunning ): # if the box is not running
            return # then go out without doing a thing
        if( not self.bInTactileSensorMenu ): # if we are not in the tactile sensor menu (so if we are in the question-recognition-reaction loop)
            if( p in ["TapFront", "TapMiddle", "TapRear", "LongFront", "LongMiddle", "LongRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( bTTSRunning ): # if TTS is running
                    # skip the TTS
                    self.skipTTS()
                else: # if TTS was not running (so if in recognition)
                    # prepare to start the tactile sensor menu
                    self.bInTactileSensorMenu = True
                    # and stop the question-recognition-reaction loop
                    self.goOutOfQuestionRecoReaction()
                    self.sRecoInterruption = "onTactileSensor"
                    # start the tactile sensor menu
                    self.sayCurrentChoice()
                    # start counting timeout
                    self.rTimeWhenActionMadeInTactileMenu = time.time()
                    thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )
            elif( p in ["Tap", "CalmDown"] ):
                # skip the TTS
                self.skipTTS()
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )
                self.sRecoInterruption = "onTactileSensor"
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
            elif( p == "SimpleClickTorso" ):
                if( self.bIsProcessingSimpleClickTorso ):
                    return
                self.bIsProcessingSimpleClickTorso = True
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS ) ):
                        bTTSRunning = True
                if( bTTSRunning ): # if TTS is running
                    # avoid launching speech recognition after the TTS
                    self.bMustStop = True
                    # skip the TTS
                    self.skipTTS()
                    # give some help
                    self.reactionWordUnderstood( [ self.asHelpWords[0], 1.0 ] )
                    # let the question-reco-reaction loop keep going again
                    self.bMustStop = False
                    self.sRecoInterruption = "onTorsoClick"
                else: # if TTS was not running (so if in speech recognition)
                    # simulate as if the user has asked help
                    self.onWordRecognized( "WordRecognized", [self.asHelpWords[0], 1.0], "onTorsoClick" )
                    self.sRecoInterruption = "onTorsoClick"
                self.bIsProcessingSimpleClickTorso = False
        else: # if we are in the tactile sensor menu
            self.rTimeWhenActionMadeInTactileMenu = -1.
            if( p in ["TapFront"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS ) ):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice += 1
                    if( self.nIndexChoice >= len( self.aChoices ) ):
                        self.nIndexChoice = 0
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice -= 1
                    if( self.nIndexChoice < 0 ):
                        self.nIndexChoice = len( self.aChoices ) - 1
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapMiddle", "LongMiddle"] ):
                self.rTimeWhenActionMadeInTactileMenu = time.time()
                rTimeForThisAction = self.rTimeWhenActionMadeInTactileMenu
                bWasSayingChoice = self.bIsSayingChoice
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                # skip the TTS if it is running
                self.skipTTS()
                if( bWasSayingChoice or not bTTSRunning ):
                    # validate choice
                    thread.start_new_thread( self.ledsUnderstood, (False, True) )
                    if( self.aChoices[self.nIndexChoice][0] == self.asRepeatWords[0] ):
                        self.repeatWhenNoQuestion()
                        # launch TTS
                        idTTS = -1
                        if( self.sQuestion != ""):
                            idTTS = self.tts.post.say( self.sQuestion + "\\Pau=300\\" )
                            self.aIdsTTS.append( idTTS )
                            self.log( "Robot says: " + str(self.sQuestion) )
                        # wait for the end of the TTS
                        if( idTTS != -1 ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.log( "Warning: Could not wait the TTS." )
                    else:
                        self.reactionWordUnderstood( [ self.aChoices[self.nIndexChoice][0], 1.0 ] )
                if( self.bIsRunning and rTimeForThisAction == self.rTimeWhenActionMadeInTactileMenu ): #$$$
                    self.rTimeWhenActionMadeInTactileMenu = -1.
                    # say the choice in the tactile sensor menu
                    self.sayCurrentChoice()
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongFront" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bLastElementSaid = False
                    while( self.bPressed ):
                        if( self.nFront == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice += 1
                            if( self.nIndexChoice >= len( self.aChoices ) - 1 ):
                                self.nIndexChoice = len( self.aChoices ) - 1
                                if( not bLastElementSaid ):
                                    bLastElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == len( self.aChoices ) - 1 ):
                                bLastElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nFront == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.log( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongRear" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bFirstElementSaid = False
                    while( self.bPressed ):
                        if( self.nRear == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice -= 1
                            if( self.nIndexChoice <= 0 ):
                                self.nIndexChoice = 0
                                if( not bFirstElementSaid ):
                                    bFirstElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == 0 ):
                                bFirstElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nRear == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.log( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p in ["Tap", "CalmDown"] ):
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )
            elif( p == "SimpleClickTorso" ):
                if( self.bIsProcessingSimpleClickTorso ):
                    return
                self.bIsProcessingSimpleClickTorso = True
                self.rTimeWhenActionMadeInTactileMenu = time.time()
                rTimeForThisAction = self.rTimeWhenActionMadeInTactileMenu
                thread.start_new_thread( self.ledsUnderstood, (False, True) )
                # skip the TTS if it is running
                # (twice because it could be repeating the question and then saying the selected choice)
                self.skipTTS()
                # give some help
                self.reactionWordUnderstood( [ self.asHelpWords[0], 1.0 ] )
                self.bIsProcessingSimpleClickTorso = False
                if( self.bIsRunning and rTimeForThisAction == self.rTimeWhenActionMadeInTactileMenu ):
                    self.rTimeWhenActionMadeInTactileMenu = -1.
                    # say the choice in the tactile sensor menu
                    self.sayCurrentChoice()
                    self.timeoutManagingInTactileMenu()
        
    def sayCurrentChoice(self):
        "In the tactile sensor menu, make the robot say the current selected choice"
        self.bIsSayingChoice = True
        rTimeCurrent = time.time()
        self.rTimeLastChoiceSaid = rTimeCurrent
        # stop previous TTS
        self.skipTTS()
        # launch TTS
        idTTS = -1
        if( self.aChoices[ self.nIndexChoice ][0] != "" ):
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            sentence = self.aChoices[ self.nIndexChoice ][0] + "?"
            idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.log( "Robot says: " + str(sentence) )
            # launch flash leds
            thread.start_new_thread( self.ledsChangeOnTactile, () )
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.log( "Warning: Could not wait the TTS." )
        if( self.rTimeLastChoiceSaid == rTimeCurrent ):
            self.rTimeLastChoiceSaid = -1.
            self.bIsSayingChoice = False

    def timeoutManagingInTactileMenu(self):
        # check if there has been an other action with tts made while this one was processed
        bTTSRunning = False # to know if TTS is running
        for idTTS in self.aIdsTTS:
            if( self.tts.isRunning( idTTS )):
                bTTSRunning = True
        if( not bTTSRunning ):
            # start counting timeout
            self.rTimeWhenActionMadeInTactileMenu = time.time()
            thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

    def loopCheckTimeoutInTactileMenu(self, rTimeForThisAction):
        nTimeout = time.time() + self.nTimeoutTactile
        if( self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction ):
            while( time.time() < nTimeout and self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction and self.bIsRunning ):
                time.sleep( 0.1 )
            if( self.rTimeWhenActionMadeInTactileMenu != rTimeForThisAction ):
                self.nCountNoReply = 0
            elif( self.bIsRunning ):
                self.rTimeWhenActionMadeInTactileMenu = -1.
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
                else:
                    bTTSRunning = False # to know if TTS is running
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS )):
                            bTTSRunning = True
                    if( not bTTSRunning ):
                        # say the choice in the tactile sensor menu
                        self.sayCurrentChoice()
                        # start counting timeout
                        self.rTimeWhenActionMadeInTactileMenu = time.time()
                        thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

# TORSO HANDLER -----------------------------------------------------------------------------------
                
    def torsoClickHandler(self):
        "Handle the simple click on the torso button."
        stm = ALProxy( "ALMemory" )
        sentinel = ALProxy( "ALSentinel" )
        stmDataName = "ALSentinel/SimpleClickOccured"
        sentinel.enableDefaultActionSimpleClick( False )
        stm.insertData( stmDataName, False )
        bPushed = False
        while( self.bIsRunning ):
            bPushed = bool( stm.getData( stmDataName, 0 ) )
            if( bPushed ):
                stm.insertData( stmDataName, False )
                thread.start_new_thread( self.onAlternativeModalityAction, ("SimpleClickTorso",) )
            time.sleep( 0.2 )
        sentinel.enableDefaultActionSimpleClick( True )
        
# TACTILE SENSOR HANDLER -------------------------------------------------------------------------------

    def initSeqDetected(self):
        "Initialize the sequence handler."
        self.bSeqStarted = False
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        for seq in self.aDetectedSeqs:
            seq["index"] = 0
            seq["previousStepTime"] = 0
        
    def convertToArrayOfPossibleStates(self, states):
        "Check if the states described in the sequences using a string are in the right syntax, and then convert them to an array of the possible states."
        aStates = []
        aStates3 = [[1, 1, 1]]
        aStates2 = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]
        aStates1 = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
        aStates0 = [[0, 0, 0]]
        try:
            if( int(states) == states ): # if states is an integer
                states = str(states)
        except:
            pass
        if( self.isString(states) ):
            if( not states in ["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"] ):
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
            if( states in ["*", "0+", "1+", "2+", "3+", "3", "3-", "F+", "M+", "R+"] ):
                aStates.extend(aStates3)
            if( states in ["*", "0+", "1+", "2+", "2", "2-", "3-"] ):
                aStates.extend(aStates2)
            if( states in ["*", "0+", "1+", "1", "1-", "2-", "3-"] ):
                aStates.extend(aStates1)
            if( states in ["*", "0+", "0", "0-", "1-", "2-", "3-", "F-", "M-", "R-"] ):
                aStates.extend(aStates0)
            if( states in ["F", "F+", "F-"] ):
                aStates.append([1, 0, 0])
            if( states in ["M", "M+", "M-"] ):
                aStates.append([0, 1, 0])
            if( states in ["R", "R+", "R-"] ):
                aStates.append([0, 0, 1])
            if( states in ["F+", "M+"] ):
                aStates.append([1, 1, 0])
            if( states in ["R+", "M+"] ):
                aStates.append([0, 1, 1])
            if( states in ["F+", "R+"] ):
                aStates.append([1, 0, 1])
        elif( self.isArray(states) ):
            if( self.isArray(states[0]) ):
                aStates = states
            elif( int(states[0]) == states[0] ):
                aStates = [states]
            else:
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
        else:
            raise Exception( "Error in sequences states description syntax:\nstring, array or int expected but " + str(type(p)) + " found" )
        return aStates

    def checkIfSeqsCorrespondingLeft(self, param):
        "If the sequence handler is done (there is no sequence detected left or the first in the list corresponds), then reinitialize the sequence handler, and give the corresponding sequence if there is one."
        if( self.aDetectedSeqs == [] ):
            # then no sequence corresponding in the list
            self.initSeqDetected()
        else:
            if( self.aDetectedSeqs[0]["index"] == -1 ): # if first sequence in left ones corresponds
                # then it is this sequence which is played
                thread.start_new_thread( self.onAlternativeModalityAction, (self.aDetectedSeqs[0]["name"],) )
                self.initSeqDetected()
        self.mutexCheckIfSeqsCorrespondingLeft.unlock()

    def loopCheckTimeoutMax(self, nTimeoutMax, seq, currentState, currentTime):
        "When timeout ellapsed, check the sequence status and process it."
        nPreviousIndex = seq["index"]
        time.sleep(nTimeoutMax + 0.1)
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        currentState = [self.nFront, self.nMiddle, self.nRear]
        currentTime = time.time()
        if( nPreviousIndex == seq["index"] and not self.mutexProcessCurrentState.test() and not (1 in currentState) ): # if no change in the sequence step but timeout ellapsed and sequence handler is not processing (so if there is no action from the user and the sequence is still at the same point)
            if( seq in aSeqsTemp and seq["index"] != -1 ): # but if sequence is still in the possible ones and not completed
                if( currentState in seq["statesAndTimeout"][seq["index"]] ): # last check if the current state corresponds to the next one
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else:
                    # then remove the sequence from the possible ones
                    aSeqsTemp.remove(seq)
                    self.aDetectedSeqs = aSeqsTemp
                self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def loopCheckTimeoutMin(self, nTimeoutMin, seq):
        "Wait that the minimum timeout ellapse to check if the new tactile sensor state corresponds to the expected one for this sequence."
        if( nTimeoutMin != 0 ):
            nPreviousIndex = seq["index"]
            time.sleep(nTimeoutMin - time.time() + seq["previousStepTime"])
            currentTime = time.time()
            currentState = [self.nFront, self.nMiddle, self.nRear]
            self.mutexProcessCurrentState.lock( self.processCurrentState, [0, currentState, currentTime] )
            
    def updateDetectedSeqs(self, seq, aSeqsTemp, currentState, currentTime):
        "Update a detected sequence."
        if( seq["index"] > 0 ): # if not the first step
            nTimeoutMin = 0
            nTimeoutMax = 5
            if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
            else:
                if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
            if( currentTime > nTimeoutMax + seq["previousStepTime"] ): # if timeout of this step ellapsed
                aSeqsTemp.remove(seq) # then it is not this sequence which is played
            elif( not (currentState in seq["statesAndTimeout"][seq["index"]]) ): # if the current state does not correspond to one of the described ones but the timeout of this step did not ellaspe
                # then we check that this state could be an intermediate one
                aIntermediateStates = [[], [], []]
                for i in range( len( currentState ) ):
                    for j in range( len( seq["statesAndTimeout"][seq["index"]] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]][j][i] )
                    for j in range( len( seq["statesAndTimeout"][seq["index"]-2] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]-2][j][i] )
                bIsIntermediate = True
                for i in range( len( currentState ) ):
                    bIsIntermediate = bIsIntermediate and ( currentState[i] in aIntermediateStates[i] )
                if( not bIsIntermediate ):
                    aSeqsTemp.remove(seq) # then it is not this sequence which is played
            else: # if the current state correspond to one of the described ones
                if( currentTime > nTimeoutMin + seq["previousStepTime"] ): # if the minimum time to wait the next step is ellapsed
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        # start clock to timeout
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else: # if the minimum time to wait the next step is not ellapsed
                    # then we are going to wait until it is to check then
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
        elif( seq["index"] == 0 ): # for the first step
            if( currentState in seq["statesAndTimeout"][seq["index"]] ): # if the current state correspond to one of the described ones
                # then we go to the next step
                seq["previousStepTime"] = currentTime
                seq["index"] += 2
                if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                    seq["index"] = -1 # then the sequence is completed
                else: # if there is at least one step left
                    # start clock to timeout
                    nTimeoutMin = 0
                    nTimeoutMax = 5
                    if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                        if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                    else:
                        if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                    thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
            else: # if the current state does not correspond to the first described
                aSeqsTemp.remove(seq) # then it is not this sequence which has just been started

    def updateSeqsHandler(self, currentState, currentTime):
        "Update list of detected sequences."
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        for seq in self.aDetectedSeqs:
            self.updateDetectedSeqs( seq, aSeqsTemp, currentState, currentTime )
        self.aDetectedSeqs = aSeqsTemp
        self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def processCurrentState(self, param):
        "Process the current tactile sensor state."
        pValue = param[0]
        currentState = param[1]
        currentTime = param[2]
        if( pValue == 1 and not self.bSeqStarted ):
            self.bSeqStarted = True
            for seq in self.aDetectedSeqs:
                seq["previousStepTime"] = currentTime
        # update sequences handler
        if( self.bSeqStarted ):
            self.updateSeqsHandler(currentState, currentTime)
        self.mutexProcessCurrentState.unlock()

    def onFrontTactilTouched(self, param):
        "Handle an action (touch or release) on the front tactile sensor."
        self.log( "Change detected on the front tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [pValue, self.nMiddle, self.nRear]
        self.nFront = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()
        
    def onMiddleTactilTouched(self, param):
        "Handle an action (touch or release) on the middle tactile sensor."
        self.log( "Change detected on the middle tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, pValue, self.nRear]
        self.nMiddle = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onRearTactilTouched(self, param):
        "Handle an action (touch or release) on the rear tactile sensor."
        self.log( "Change detected on the rear tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, self.nMiddle, pValue]
        self.nRear = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()
        
    def onTactilTouched(self, pDataName, pValue, pMessage):
        "Handle an action (touch or release) on the tactile sensor."
        self.mutexTactilTouched.lock( getattr( self, "on" + pDataName ), [pValue, time.time()] )
            
# OUTPUTS ACTIVATION --------------------------------------------------------------------------------------

    def goOut(self, outputName, cancelReason = ""):
        "Activate the right output (a choice output or the other output)."
        try:
            ALMemory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        sentinel = ALProxy( "ALSentinel" )
        sentinel.enableDefaultActionSimpleClick( True )
        self.bGoOut = True
        self.bInTactileSensorMenu = False
        if( outputName in self.asExitWords ):
            try:
                self.other( cancelReason )
                self.log( "Output 'other' stimulated because cancel asked: " + str(cancelReason) + "." )
            except:
                try:
                    self.onStopped( cancelReason )
                    self.log( "Output 'onStopped' stimulated because cancel asked: " + str(cancelReason) + "." )
                except:
                    try:
                        self.onStopped()
                        self.log( "Output 'onStopped' stimulated because cancel asked." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the main output name needs to be 'other', and it needs to be dynamic (because it can be either a string, or an integer)." )
        else:
            nOutput = -1
            for i in range( len (self.aChoices) - len (self.aDefaultChoices) ):
                if( nOutput == -1 ):
                    if( outputName in self.aChoices[i+len( self.aDefaultChoices )] ):
                        nOutput = i
            if( nOutput != -1):
                if( self.bExternChoices ):
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.log( "Robot says: " + str(outputName) )
                    try:
                        self.other( self.aChoiceIndexes[nOutput] )
                        self.log( "Output 'other' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                    except:
                        try:
                            self.onStopped( self.aChoiceIndexes[nOutput] )
                            self.log( "Output 'onStopped' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                        except:
                            choregraphe = ALProxy( "ALChoregraphe" )
                            choregraphe.onPythonError( self.getName(), "goOut", "Invalid type of output: using the input 'choicesList', the main output needs to be dynamic (because it can be either a string, or an integer)." )
                else:
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.log( "Robot says: " + str(outputName) )
                    try:
                        func = getattr( self, "output_" + str(self.aChoiceIndexes[nOutput]+1) ) #+1 because the first one is output_1 corresponding to the element 0 in the list.
                        func(outputName)
                        self.log( "Output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' stimulated with: " + str(outputName) + "." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' was expected to be stimulated with: " + str(outputName) + " but could not." )
        self.onUnload()
        # come back to an initial position and stop movement animation
        if( self.nFrameNumber != self.aFrameNumbers["end"] ):
            self.nFrameNumber = self.aFrameNumbers["end"]
            try:
                self.gotoAndStop(self.nFrameNumber)
            except:
                pass

# UNLOAD --------------------------------------------------------------------------------------------------

    def goOutOfQuestionRecoReaction(self):
        "Set some variables to go out of the question-recognition-reaction loop and reinitialize other variables which are going to be used again only on the next start of this box."
        self.bGoOut = True
        self.bMustStop = True
        self.nCountFailure = 0
        self.nCountNoReply = 0
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.skipTTS()
        for idTTS in self.aIdsTTS:
            try:
                self.aIdsTTS.remove( idTTS )
            except:
                self.log( "Warning: The task ID corresponding to the Text-To-Speech could not have been removed from the ID tasks list." )
        try:
            ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.bRecoIsWaitingForVoice = False
            self.bRecoIsHearingOrAnalysing = False
            self.log( "Speech recognition stopped." )
            ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass

    def onUnload(self):
        "Reinitialize variables to default state."
        self.goOutOfQuestionRecoReaction()
        self.bExternChoices = False
        self.bInTactileSensorMenu = False
        sentinel = ALProxy( "ALSentinel" )
        sentinel.enableDefaultActionSimpleClick( True )
        try:
            ALMemory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        self.bIsRunning = False]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <english>
                                                        <keyword>yes / ok</keyword>
                                                        <keyword>no</keyword>
                                                        <keyword></keyword>
                                                    </english>
                                                    <french>
                                                        <keyword>oui / ok</keyword>
                                                        <keyword>non</keyword>
                                                        <keyword></keyword>
                                                    </french>
                                                    <language>0</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is&#x0A;received on this input. The signal can be&#x0A;either a string so that the robot asks a&#x0A;question before the recognition of a&#x0A;choice, or a bang so that the speech&#x0A;recognition starts immediately without any&#x0A;question." id="2" />
                                                <Input name="choicesList" type="0" type_size="1" nature="1" inner="0" tooltip="To have extern choices list (for example,&#x0A;depending on extern variables).&#x0A;!! Warning !! : Must be set before each&#x0A;time the box is started (with onStart&#x0A;input). Otherwise, the choices displayed&#x0A;on the box will be selected." id="3" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip='Box behavior stops when a signal is&#x0A;received on this input, the &apos;other&apos; output is&#x0A;stimulated by &quot;onStop&quot;.' id="4" />
                                                <Output name="other" type="0" type_size="1" nature="1" inner="0" tooltip='When the user skipped the question, this output gives how it has been&#x0A;skipped. Gives also the number of the choice chosen in case of external&#x0A;choices.&#x0A;This output can be:&#x0A;- &quot;timeout&quot; if the user has not replied.&#x0A;- &quot;notUnderstood&quot; if the interaction with the speech recognition failed.&#x0A;- &quot;onStop&quot; if the onStop input has been activated.&#x0A;- &quot;wordRecognised&quot; if the exit command has been understood.&#x0A;- &quot;onTactileSensor&quot; if the user has tapped the tactile sensor of the robot.&#x0A;- an integer being the number of the external choice in the input list.' id="5" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                <Parameter name="Activate head" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="Head motion activation during the recognition and while the robot is&#x0A;speaking." id="8" />
                                                <Parameter name="Activate arms" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="Arms motion activation while Nao is speaking." id="9" />
                                                <Parameter name="Activate legs" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="Legs motion activation while Nao is speaking." id="10" />
                                                <Parameter name="Minimum threshold to understand" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="Minimum threshold to get in order to be understood by the robot." id="11" />
                                                <Parameter name="Minimum threshold to be sure" inherits_from_parent="1" content_type="2" value="0.4" default_value="0.4" min="0" max="1" tooltip="Minimum threshold to get so that the robot would be sure about the user&apos;s&#x0A;answer. Below this threshold, the robot ask a confirmation about what has been&#x0A;understood." id="12" />
                                                <Parameter name="Speech recognition timeout when confirmation" inherits_from_parent="1" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="When Nao asks if what he understood is correct, after this time, if there has been&#x0A;nothing heard, the speech recognition is stopped and the answer understood is&#x0A;considered as correct." id="13" />
                                                <Parameter name="Speech recognition timeout" inherits_from_parent="1" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="After this time, if there has been nothing heard, the speech recognition is stopped&#x0A;and the question is repeated or is skipped." id="14" />
                                                <Parameter name="Maximum number of repetition when no reply" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="20" tooltip='After this number of times when the user did not reply, the question is skipped, and&#x0A;the output other is stimulated with &quot;timeout&quot;.' id="15" />
                                                <Parameter name="Fun animations activated" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When activated, fun animations are played when the robot did not understand&#x0A;the user." id="16" />
                                                <Parameter name="Repeat validated choice" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, the robot repeat the validated choice when it exits the box." id="17" />
                                                <Parameter name="Activate ears light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate ears light animation (turn, flash, etc...)." id="18" />
                                                <Parameter name="Activate eyes light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate eyes light animation (turn, flash, etc...)." id="19" />
                                                <Parameter name="Activate brain light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate brain light animation (turn, flash, etc...)." id="20" />
                                                <Parameter name="Tactile sensor menu timeout" inherits_from_parent="1" content_type="1" value="10" default_value="10" min="1" max="20" tooltip="After this time, if there has been no action made on the tactile sensor or the torso&#x0A;button, the choice currently selected is repeated or the question is skipped." id="21" />
                                                <Parameter name="Maximum number of repetition when failure" inherits_from_parent="0" content_type="1" value="5" default_value="5" min="1" max="20" tooltip='After this number of times when the robot did not understand the user, the question&#x0A;is skipped, and the output other is stimulated with &quot;notUnderstood&quot;.' id="22" />
                                                <Parameter name="Activate help when failure" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="When this parameter is activated, when the robot did not understand the user, it&#x0A;says some help enumerating available choices and attracting attention on the&#x0A;other available modalities (head tactile sensor)." id="23" />
                                                <Parameter name="Activate help command" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip='Enable the help command. So you can say &quot;help&quot; during the speech recognition&#x0A;and the robot will tell you more information.&#x0A;You will still be able to ask help by clicking the torso button.' id="24" />
                                                <Parameter name="Activate repeat command" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip='Activate the repeat command. So you can say &quot;repeat&quot; during the speech&#x0A;recognition and the robot will repeat the question.' id="25" />
                                                <Parameter name="Activate exit command" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip='Enable the exit command. So you can say &quot;exit&quot; during the speech recognition&#x0A;and the box will be stopped and the &apos;other&apos; output will be stimulated with&#x0A;&quot;wordRecognised&quot;.&#x0A;You will still be able to exit the box with&#x0A;the tactile sensor.' id="26" />
                                                <Timeline fps="1" resources_acquisition="0" size="200" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="arms_" mute="0">
                                                        <BehaviorKeyframe name="end" index="1" bitmap="media/images/box/movement/move_arm.png">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="134" y="31">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="StandUp" robot="" id="2" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="295" y="27">
                                                                    <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="31" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="89.5593" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="6.23791" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-63.9876" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-31.8144" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-9.67049" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="10.2414" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="89.1246" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-3.95753" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="71.1899" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="33.0497" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-16.3503" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="9.22143" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Exit" robot="" id="3" tooltip="Exit the behavior." bitmap_expanded="1" plugin="" x="429" y="25">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALFrameManager.exitBehavior(self.parentId)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsEnd" index="10" bitmap="media/images/box/movement/move_arm.png">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="134" y="31">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="StandUp" robot="" id="2" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="295" y="27">
                                                                    <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="31" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="89.5593" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="6.23791" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-63.9876" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-31.8144" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-9.67049" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="10.2414" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="89.1246" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-3.95753" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="71.1899" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="33.0497" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-16.3503" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="9.22143" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsBodyTalk" index="20" bitmap="media/images/box/movement/move_arm.png">
                                                            <Diagram scale="72">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="173" y="31">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="RandomIntMod" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="478" y="28">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            func = getattr( self, "output_" + str(self.aShuffled[self.nIndex]) )
            func()
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            func = getattr( self, "output_" + str(nVal) )
            func()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                    <Output name="output_0" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                    <Output name="output_1" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                    <Output name="output_2" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Output name="output_3" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Output name="output_4" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                    <Output name="output_5" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Output name="output_6" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                    <Output name="output_7" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                    <Output name="output_8" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                    <Output name="output_9" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                    <Output name="output_10" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                                    <Output name="output_11" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                                    <Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="15" />
                                                                    <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="16" />
                                                                </Box>
                                                                <Box name="Anim_bodytalk1" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1005" y="27">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="66.9711" />
                                                                                <Key frame="28" value="42.0977" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="8.78677" />
                                                                                <Key frame="28" value="1.75543" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-108.197" />
                                                                                <Key frame="28" value="-53.7921" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-71.6294" />
                                                                                <Key frame="28" value="-80.2427" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="2.98591" />
                                                                                <Key frame="28" value="-11" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="10.0014" />
                                                                                <Key frame="28" value="49" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="68.6458" />
                                                                                <Key frame="27" value="48.4307" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-7.38531" />
                                                                                <Key frame="27" value="-4.92434" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="106.61" />
                                                                                <Key frame="27" value="62.6644" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="67.679" />
                                                                                <Key frame="27" value="86.8394" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-14.8561" />
                                                                                <Key frame="27" value="9" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="8.90143" />
                                                                                <Key frame="27" value="45" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk3" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1007" y="220">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="58.5335" />
                                                                                <Key frame="28" value="77.9576" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="9.57779" />
                                                                                <Key frame="28" value="2.72224" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-36.038" />
                                                                                <Key frame="28" value="-46.9366" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-65.4769" />
                                                                                <Key frame="28" value="-57.2151" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-14" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="19" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="47.9913" />
                                                                                <Key frame="25" value="44.2998" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="-18.2839" />
                                                                                <Key frame="25" value="-3.43018" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="24.6952" />
                                                                                <Key frame="25" value="85.4284" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="89.5017" />
                                                                                <Key frame="25" value="83.2359" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="51" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="19" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk2" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1007" y="123">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="40.1641" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="5.09532" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-82.5327" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-78.7486" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="9" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="36" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="73.7436" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-6.68218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="100.985" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="74.6225" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="43" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="35.5" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="StandUp" robot="" id="6" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="1009" y="318">
                                                                    <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="89.1198" />
                                                                                <Key frame="48" value="82.2643" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="6.67737" />
                                                                                <Key frame="48" value="1.22808" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-64.5149" />
                                                                                <Key frame="48" value="-56.6926" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-31.5507" />
                                                                                <Key frame="48" value="-32.2539" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="5.79845" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="10.1014" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="88.6852" />
                                                                                <Key frame="45" value="86.8394" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-3.07861" />
                                                                                <Key frame="45" value="-0.705538" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="70.9262" />
                                                                                <Key frame="45" value="59.3245" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="33.577" />
                                                                                <Key frame="45" value="45.1787" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-16.526" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="8.92144" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk4" robot="" id="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1011" y="417">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="3.07381" />
                                                                                <Key frame="31" value="2.54646" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="9.57779" />
                                                                                <Key frame="31" value="7.20472" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="6.67737" />
                                                                                <Key frame="31" value="-90.7067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-76.1997" />
                                                                                <Key frame="31" value="-67.3227" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-25" />
                                                                                <Key frame="31" value="-10.6373" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="39" />
                                                                                <Key frame="31" value="18.4014" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="92.904" />
                                                                                <Key frame="27" value="86.5758" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-9.31893" />
                                                                                <Key frame="27" value="-6.24272" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="73.0356" />
                                                                                <Key frame="27" value="51.9416" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="72.0736" />
                                                                                <Key frame="27" value="70.6674" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="62" />
                                                                                <Key frame="27" value="52.6447" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="14" />
                                                                                <Key frame="27" value="18.5614" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk5" robot="" id="7" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1011" y="516">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="52.2053" />
                                                                                <Key frame="36" value="46.1408" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="16.2576" />
                                                                                <Key frame="36" value="6.15002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-54.4953" />
                                                                                <Key frame="36" value="-33.6649" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-88.6803" />
                                                                                <Key frame="36" value="-89.1198" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="-45" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="25" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="28.2156" />
                                                                                <Key frame="33" value="40.1689" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-1.0571" />
                                                                                <Key frame="33" value="-0.881321" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="53.1721" />
                                                                                <Key frame="33" value="78.9244" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="88.9488" />
                                                                                <Key frame="33" value="88.773" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-17" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="23" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk5" robot="" id="9" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1012" y="614">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="74.9692" />
                                                                                <Key frame="34" value="69.2563" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="3.42537" />
                                                                                <Key frame="34" value="5.62267" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-54.0558" />
                                                                                <Key frame="34" value="-66.9759" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-75.8482" />
                                                                                <Key frame="34" value="-76.0239" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="34" value="-37" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="34" value="27.9" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="72.8646" />
                                                                                <Key frame="31" value="72.9525" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-3.95753" />
                                                                                <Key frame="31" value="-3.43018" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="42.0098" />
                                                                                <Key frame="31" value="67.5863" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="54.1437" />
                                                                                <Key frame="31" value="57.5715" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="46.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="32.6" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk6" robot="" id="10" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1012" y="713">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="62.8402" />
                                                                                <Key frame="34" value="59.1487" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="1.14019" />
                                                                                <Key frame="34" value="6.94104" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-26.3699" />
                                                                                <Key frame="34" value="-108.988" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-52.7326" />
                                                                                <Key frame="34" value="-60.4671" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="34" value="-30" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="34" value="40" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="87.6305" />
                                                                                <Key frame="31" value="70.8431" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-1.40867" />
                                                                                <Key frame="31" value="-0.498473" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="118.564" />
                                                                                <Key frame="31" value="65.8285" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="44.0362" />
                                                                                <Key frame="31" value="75.3256" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="25" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="28" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk7" robot="" id="11" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1014" y="813">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="81.4732" />
                                                                                <Key frame="46" value="86.6588" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="3.24959" />
                                                                                <Key frame="46" value="9.75358" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-57.4836" />
                                                                                <Key frame="46" value="-65.5696" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-31.9902" />
                                                                                <Key frame="46" value="-28.5624" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="46" value="-11" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="46" value="9" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="87.5426" />
                                                                                <Key frame="43" value="88.1578" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-1.23289" />
                                                                                <Key frame="43" value="-2.1997" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="69.7836" />
                                                                                <Key frame="43" value="87.1862" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="39.9053" />
                                                                                <Key frame="43" value="28.1278" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="43" value="-5.4" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="43" value="11" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk8" robot="" id="12" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1015" y="912">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="79.0123" />
                                                                                <Key frame="40" value="68.641" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="1.22808" />
                                                                                <Key frame="40" value="5.88634" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-106.615" />
                                                                                <Key frame="40" value="-38.499" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-43.0645" />
                                                                                <Key frame="40" value="-58.0061" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="40" value="-39" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="40" value="41" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="79.8081" />
                                                                                <Key frame="37" value="75.853" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-3.16651" />
                                                                                <Key frame="37" value="-0.617646" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="110.302" />
                                                                                <Key frame="37" value="56.6878" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="36.9169" />
                                                                                <Key frame="37" value="64.0755" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="12" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="45" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk9" robot="" id="13" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1016" y="1011">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="71.8051" />
                                                                                <Key frame="40" value="89.5593" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="1.49176" />
                                                                                <Key frame="40" value="12.7419" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-37.3564" />
                                                                                <Key frame="40" value="-79.8081" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-43.504" />
                                                                                <Key frame="40" value="-24.871" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="40" value="-36" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="40" value="21" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="88.8609" />
                                                                                <Key frame="37" value="100.375" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-1.93602" />
                                                                                <Key frame="37" value="-6.50639" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="61.346" />
                                                                                <Key frame="37" value="95.448" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="72.3373" />
                                                                                <Key frame="37" value="45.7061" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="10" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="20" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalk11" robot="" id="14" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="1020" y="1115">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="39.9883" />
                                                                                <Key frame="24" value="52.0295" />
                                                                                <Key frame="33" value="53.0842" />
                                                                                <Key frame="43" value="57.7425" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="9.05044" />
                                                                                <Key frame="24" value="9.66569" />
                                                                                <Key frame="33" value="1.31597" />
                                                                                <Key frame="43" value="4.48007" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-11.9557" />
                                                                                <Key frame="24" value="-41.1357" />
                                                                                <Key frame="33" value="-47.9913" />
                                                                                <Key frame="43" value="-78.3139" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-72.0688" />
                                                                                <Key frame="24" value="-57.8303" />
                                                                                <Key frame="33" value="-65.7406" />
                                                                                <Key frame="43" value="-54.4905" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-2" />
                                                                                <Key frame="33" value="-71" />
                                                                                <Key frame="43" value="-53" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="9.7" />
                                                                                <Key frame="43" value="27.9" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="86.2242" />
                                                                                <Key frame="41" value="91.3219" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-0.617646" />
                                                                                <Key frame="41" value="-8.79158" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="77.1665" />
                                                                                <Key frame="41" value="93.3386" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="32.6981" />
                                                                                <Key frame="41" value="28.4793" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="6" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="8" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="9" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="11" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="12" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="13" />
                                                                <Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="14" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="--EMPTY--" index="30" bitmap="">
                                                            <Diagram scale="-1" />
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsTactileSensorExplanation" index="50" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="76" y="24">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_helpTactilExplain_arms" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="226" y="22">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="250" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="82.3521" />
                                                                                <Key frame="40" value="84.5494" />
                                                                                <Key frame="67" value="83.1432" />
                                                                                <Key frame="92" value="86.9225" />
                                                                                <Key frame="111" value="67.5863" />
                                                                                <Key frame="125" value="38.4063" />
                                                                                <Key frame="142" value="64.3343" />
                                                                                <Key frame="160" value="76.1118" />
                                                                                <Key frame="188" value="84.1979" />
                                                                                <Key frame="216" value="54.4905" />
                                                                                <Key frame="233" value="57.4788" />
                                                                                <Key frame="247" value="84.901" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="1.40386" />
                                                                                <Key frame="40" value="5.97423" />
                                                                                <Key frame="67" value="2.19489" />
                                                                                <Key frame="92" value="4.65586" />
                                                                                <Key frame="111" value="1.49176" />
                                                                                <Key frame="125" value="1.0523" />
                                                                                <Key frame="142" value="1.0523" />
                                                                                <Key frame="160" value="2.107" />
                                                                                <Key frame="188" value="1.14019" />
                                                                                <Key frame="216" value="1.0523" />
                                                                                <Key frame="233" value="1.0523" />
                                                                                <Key frame="247" value="1.14019" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-61.7903" />
                                                                                <Key frame="40" value="-62.2297" />
                                                                                <Key frame="67" value="-61.7903" />
                                                                                <Key frame="92" value="-75.4135" />
                                                                                <Key frame="111" value="-54.4953" />
                                                                                <Key frame="125" value="-59.3293" />
                                                                                <Key frame="142" value="-89.2125" />
                                                                                <Key frame="160" value="-53.9679" />
                                                                                <Key frame="188" value="-58.0109" />
                                                                                <Key frame="216" value="-49.046" />
                                                                                <Key frame="233" value="-77.5229" />
                                                                                <Key frame="247" value="-73.3041" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-25.7499" />
                                                                                <Key frame="40" value="-22.8494" />
                                                                                <Key frame="67" value="-22.5858" />
                                                                                <Key frame="92" value="-29.4413" />
                                                                                <Key frame="111" value="-71.5415" />
                                                                                <Key frame="125" value="-57.303" />
                                                                                <Key frame="142" value="-85.9557" />
                                                                                <Key frame="160" value="-56.512" />
                                                                                <Key frame="188" value="-48.5138" />
                                                                                <Key frame="216" value="-64.598" />
                                                                                <Key frame="233" value="-44.3829" />
                                                                                <Key frame="247" value="-22.7616" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="40" value="-7.20953" />
                                                                                <Key frame="92" value="-11.692" />
                                                                                <Key frame="111" value="-65" />
                                                                                <Key frame="125" value="-54" />
                                                                                <Key frame="188" value="-5.89115" />
                                                                                <Key frame="216" value="-7.82477" />
                                                                                <Key frame="233" value="-46" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="40" value="5.94144" />
                                                                                <Key frame="92" value="6.00144" />
                                                                                <Key frame="111" value="6.00144" />
                                                                                <Key frame="125" value="24" />
                                                                                <Key frame="188" value="6.28144" />
                                                                                <Key frame="216" value="6.08144" />
                                                                                <Key frame="233" value="21.5" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="37.6201" />
                                                                                <Key frame="36" value="-35.0664" />
                                                                                <Key frame="43" value="-43.0645" />
                                                                                <Key frame="53" value="-58.4456" />
                                                                                <Key frame="63" value="-79.7154" />
                                                                                <Key frame="72" value="-81.3853" />
                                                                                <Key frame="88" value="-15.4665" />
                                                                                <Key frame="107" value="45.794" />
                                                                                <Key frame="121" value="53.4406" />
                                                                                <Key frame="138" value="50.3644" />
                                                                                <Key frame="150" value="64.7786" />
                                                                                <Key frame="166" value="0.441863" />
                                                                                <Key frame="184" value="-32.0781" />
                                                                                <Key frame="196" value="-40.5157" />
                                                                                <Key frame="212" value="-24.871" />
                                                                                <Key frame="229" value="58.4504" />
                                                                                <Key frame="243" value="87.3668" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-2.63916" />
                                                                                <Key frame="36" value="-40.1689" />
                                                                                <Key frame="43" value="-43.5088" />
                                                                                <Key frame="53" value="-35.5107" />
                                                                                <Key frame="63" value="-28.6551" />
                                                                                <Key frame="72" value="-28.6551" />
                                                                                <Key frame="88" value="-5.80326" />
                                                                                <Key frame="107" value="-0.705538" />
                                                                                <Key frame="121" value="-0.529755" />
                                                                                <Key frame="138" value="-0.498473" />
                                                                                <Key frame="150" value="-1.76024" />
                                                                                <Key frame="166" value="-19.2507" />
                                                                                <Key frame="184" value="-21.2722" />
                                                                                <Key frame="196" value="-26.4578" />
                                                                                <Key frame="212" value="-25.1394" />
                                                                                <Key frame="229" value="-12.1315" />
                                                                                <Key frame="243" value="-2.11181" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="99.6668" />
                                                                                <Key frame="36" value="29.7929" />
                                                                                <Key frame="43" value="17.0486" />
                                                                                <Key frame="53" value="21.3553" />
                                                                                <Key frame="63" value="3.51326" />
                                                                                <Key frame="72" value="-2.99072" />
                                                                                <Key frame="88" value="70.3989" />
                                                                                <Key frame="107" value="46.9318" />
                                                                                <Key frame="121" value="65.6527" />
                                                                                <Key frame="138" value="47.6349" />
                                                                                <Key frame="150" value="42.4493" />
                                                                                <Key frame="166" value="82.0885" />
                                                                                <Key frame="184" value="43.6798" />
                                                                                <Key frame="196" value="32.3418" />
                                                                                <Key frame="212" value="61.9613" />
                                                                                <Key frame="229" value="76.1118" />
                                                                                <Key frame="243" value="62.4886" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="56.9562" />
                                                                                <Key frame="36" value="89.5017" />
                                                                                <Key frame="43" value="89.5017" />
                                                                                <Key frame="53" value="62.845" />
                                                                                <Key frame="63" value="75.853" />
                                                                                <Key frame="72" value="75.9409" />
                                                                                <Key frame="81" value="56" />
                                                                                <Key frame="88" value="69.6126" />
                                                                                <Key frame="107" value="88.9488" />
                                                                                <Key frame="121" value="61.0872" />
                                                                                <Key frame="138" value="89.0367" />
                                                                                <Key frame="150" value="82.7085" />
                                                                                <Key frame="166" value="54.0558" />
                                                                                <Key frame="184" value="77.8745" />
                                                                                <Key frame="196" value="78.6655" />
                                                                                <Key frame="212" value="75.4135" />
                                                                                <Key frame="229" value="73" />
                                                                                <Key frame="243" value="37.6201" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="52" />
                                                                                <Key frame="43" value="50.6232" />
                                                                                <Key frame="63" value="71" />
                                                                                <Key frame="88" value="70.1352" />
                                                                                <Key frame="121" value="71.8051" />
                                                                                <Key frame="150" value="59" />
                                                                                <Key frame="184" value="54" />
                                                                                <Key frame="212" value="61" />
                                                                                <Key frame="229" value="61.5218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="29" />
                                                                                <Key frame="43" value="27.9214" />
                                                                                <Key frame="63" value="30" />
                                                                                <Key frame="88" value="28.7214" />
                                                                                <Key frame="121" value="15" />
                                                                                <Key frame="150" value="15" />
                                                                                <Key frame="184" value="38" />
                                                                                <Key frame="212" value="28" />
                                                                                <Key frame="229" value="28.1414" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="367" y="19">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="10" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood0" index="70" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="129" y="39">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris2_arms" robot="" id="2" tooltip="Y a trop de bruit ici!" bitmap_expanded="1" plugin="" x="299" y="53">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="58" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="67.1469" />
                                                                                <Key frame="33" value="54.3147" />
                                                                                <Key frame="54" value="98.2605" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="1.14019" />
                                                                                <Key frame="33" value="17" />
                                                                                <Key frame="54" value="5.53477" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-27.2488" />
                                                                                <Key frame="33" value="-109.515" />
                                                                                <Key frame="41" value="-77" />
                                                                                <Key frame="54" value="-86" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-48.0744" />
                                                                                <Key frame="33" value="-71" />
                                                                                <Key frame="41" value="-78" />
                                                                                <Key frame="54" value="-37.791" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-2.11181" />
                                                                                <Key frame="33" value="-57.1" />
                                                                                <Key frame="54" value="-4.3091" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="16.8" />
                                                                                <Key frame="33" value="38" />
                                                                                <Key frame="54" value="0.741455" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="50.4523" />
                                                                                <Key frame="29" value="47.1124" />
                                                                                <Key frame="50" value="89.9156" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-0.498473" />
                                                                                <Key frame="29" value="-17" />
                                                                                <Key frame="50" value="-9.40682" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="37.3516" />
                                                                                <Key frame="29" value="117.685" />
                                                                                <Key frame="37" value="81" />
                                                                                <Key frame="50" value="61" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="88.4215" />
                                                                                <Key frame="29" value="69.8763" />
                                                                                <Key frame="37" value="76" />
                                                                                <Key frame="50" value="42.1904" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="1.57965" />
                                                                                <Key frame="29" value="26" />
                                                                                <Key frame="50" value="2.63435" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="17.9" />
                                                                                <Key frame="29" value="36.5" />
                                                                                <Key frame="50" value="1.16145" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="444" y="51">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood1" index="80" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="153" y="58">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris11_arms" robot="" id="2" tooltip="Essaye de me parler plus clairement." bitmap_expanded="1" plugin="" x="316" y="55">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="67" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="85.1647" />
                                                                                <Key frame="32" value="66.3558" />
                                                                                <Key frame="46" value="62.6644" />
                                                                                <Key frame="64" value="81.9127" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="13.2692" />
                                                                                <Key frame="32" value="7.99574" />
                                                                                <Key frame="46" value="5.62267" />
                                                                                <Key frame="64" value="0.498473" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-109.076" />
                                                                                <Key frame="32" value="-46.0577" />
                                                                                <Key frame="46" value="-101.957" />
                                                                                <Key frame="64" value="-68.1185" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-38.2305" />
                                                                                <Key frame="32" value="-84.4615" />
                                                                                <Key frame="46" value="-81.2096" />
                                                                                <Key frame="64" value="-28.5624" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-2.72705" />
                                                                                <Key frame="32" value="-1.67235" />
                                                                                <Key frame="46" value="-2.90283" />
                                                                                <Key frame="64" value="-0.79343" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="6.90144" />
                                                                                <Key frame="32" value="6.90144" />
                                                                                <Key frame="46" value="6.90144" />
                                                                                <Key frame="64" value="6.90144" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="77.1713" />
                                                                                <Key frame="28" value="29.3582" />
                                                                                <Key frame="42" value="44.6514" />
                                                                                <Key frame="60" value="85.0816" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-10.7252" />
                                                                                <Key frame="28" value="-0.498473" />
                                                                                <Key frame="42" value="-5.53958" />
                                                                                <Key frame="60" value="-2.11181" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="43.7677" />
                                                                                <Key frame="28" value="51.1506" />
                                                                                <Key frame="42" value="115.312" />
                                                                                <Key frame="60" value="70.3989" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="81.0386" />
                                                                                <Key frame="28" value="57.3078" />
                                                                                <Key frame="42" value="80.5991" />
                                                                                <Key frame="60" value="29.8856" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-11.4283" />
                                                                                <Key frame="28" value="-9.49471" />
                                                                                <Key frame="42" value="-7.91266" />
                                                                                <Key frame="60" value="-7.64898" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="3.06145" />
                                                                                <Key frame="28" value="3.06145" />
                                                                                <Key frame="42" value="3.06145" />
                                                                                <Key frame="60" value="3.08145" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="470" y="59">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood2" index="90" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="157" y="56">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris15_arms" robot="" id="2" tooltip="Je t&apos;entends pas bien." bitmap_expanded="1" plugin="" x="290" y="54">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="52" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="90.9655" />
                                                                                <Key frame="33" value="85.8678" />
                                                                                <Key frame="48" value="87.0983" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="4.91953" />
                                                                                <Key frame="33" value="5.09532" />
                                                                                <Key frame="48" value="2.98591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-80.0718" />
                                                                                <Key frame="33" value="-78.5776" />
                                                                                <Key frame="48" value="-67.3275" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-31.3749" />
                                                                                <Key frame="33" value="-31.1992" />
                                                                                <Key frame="48" value="-30.6718" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="0.788621" />
                                                                                <Key frame="33" value="0.876513" />
                                                                                <Key frame="48" value="1.49176" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="6.92143" />
                                                                                <Key frame="33" value="6.92143" />
                                                                                <Key frame="48" value="6.92143" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="57.2199" />
                                                                                <Key frame="29" value="71.4584" />
                                                                                <Key frame="44" value="81.6538" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-1.67235" />
                                                                                <Key frame="29" value="-17.2292" />
                                                                                <Key frame="44" value="-2.55126" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="17.9275" />
                                                                                <Key frame="29" value="61.2581" />
                                                                                <Key frame="44" value="54.9299" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="64.6028" />
                                                                                <Key frame="29" value="25.1394" />
                                                                                <Key frame="44" value="27.5125" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-5.18802" />
                                                                                <Key frame="29" value="-33" />
                                                                                <Key frame="44" value="-5.10012" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="15" />
                                                                                <Key frame="29" value="41" />
                                                                                <Key frame="44" value="14.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="447" y="60">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood3" index="100" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="157" y="56">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris8_arms" robot="" id="2" tooltip="Je comprends rien!" bitmap_expanded="1" plugin="" x="305" y="55">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="47" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="86.1315" />
                                                                                <Key frame="34" value="89.4714" />
                                                                                <Key frame="43" value="85.5163" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="26.2772" />
                                                                                <Key frame="34" value="12.8298" />
                                                                                <Key frame="43" value="8.17153" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-49.837" />
                                                                                <Key frame="34" value="-50.3644" />
                                                                                <Key frame="43" value="-46.6729" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-88.6803" />
                                                                                <Key frame="34" value="-36.8242" />
                                                                                <Key frame="43" value="-37.1758" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-34.9833" />
                                                                                <Key frame="34" value="-37.2685" />
                                                                                <Key frame="43" value="-35.5986" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="21.9414" />
                                                                                <Key frame="34" value="21.9414" />
                                                                                <Key frame="43" value="21.9414" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="90.5309" />
                                                                                <Key frame="30" value="92.904" />
                                                                                <Key frame="39" value="87.8062" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="-16.7018" />
                                                                                <Key frame="30" value="-5.3638" />
                                                                                <Key frame="39" value="-1.67235" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="60.3792" />
                                                                                <Key frame="30" value="71.893" />
                                                                                <Key frame="39" value="70.0473" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="84.9058" />
                                                                                <Key frame="30" value="34.3681" />
                                                                                <Key frame="39" value="33.4013" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="55.9846" />
                                                                                <Key frame="30" value="55.8088" />
                                                                                <Key frame="39" value="55.8088" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="13" value="24.2214" />
                                                                                <Key frame="30" value="24.2214" />
                                                                                <Key frame="39" value="24.2214" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="448" y="57">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood4" index="110" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="157" y="56">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris12_arms" robot="" id="2" tooltip="C&apos;est désespérant." bitmap_expanded="1" plugin="" x="285" y="54">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="49" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="46.756" />
                                                                                <Key frame="46" value="76.5513" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="19.0701" />
                                                                                <Key frame="46" value="7.73207" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-22.4148" />
                                                                                <Key frame="46" value="-35.247" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-89.2956" />
                                                                                <Key frame="46" value="-28.8261" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-1.49656" />
                                                                                <Key frame="46" value="-1.32078" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="6.90144" />
                                                                                <Key frame="46" value="7.68143" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="61.0872" />
                                                                                <Key frame="44" value="78.9292" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-14.8561" />
                                                                                <Key frame="44" value="-1.84813" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="35.7695" />
                                                                                <Key frame="44" value="61.4339" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="89.5017" />
                                                                                <Key frame="44" value="27.1609" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-6.85796" />
                                                                                <Key frame="44" value="-5.45169" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="3.06145" />
                                                                                <Key frame="44" value="3.06145" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="417" y="52">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood5" index="120" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="157" y="56">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris14_arms" robot="" id="2" tooltip="Fais un effort!" bitmap_expanded="1" plugin="" x="282" y="52">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="46" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="76.9908" />
                                                                                <Key frame="30" value="90.7897" />
                                                                                <Key frame="43" value="90.7897" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="0.612838" />
                                                                                <Key frame="30" value="9.22623" />
                                                                                <Key frame="43" value="8.52309" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-48.7823" />
                                                                                <Key frame="30" value="-109.955" />
                                                                                <Key frame="43" value="-91.0582" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-46.4923" />
                                                                                <Key frame="30" value="-51.59" />
                                                                                <Key frame="43" value="-37.1758" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-0.969213" />
                                                                                <Key frame="30" value="-42" />
                                                                                <Key frame="43" value="-1.32078" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="6.92143" />
                                                                                <Key frame="30" value="29" />
                                                                                <Key frame="43" value="6.94143" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="78.9292" />
                                                                                <Key frame="28" value="92.025" />
                                                                                <Key frame="41" value="93.0797" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-3.86964" />
                                                                                <Key frame="28" value="-10.3736" />
                                                                                <Key frame="41" value="-5.71537" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="39.2852" />
                                                                                <Key frame="28" value="118.476" />
                                                                                <Key frame="41" value="103.798" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="63.9876" />
                                                                                <Key frame="28" value="53.3527" />
                                                                                <Key frame="41" value="41.3115" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-6.33061" />
                                                                                <Key frame="28" value="31" />
                                                                                <Key frame="41" value="-5.3638" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="3.18145" />
                                                                                <Key frame="28" value="29" />
                                                                                <Key frame="41" value="3.18145" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="413" y="51">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood6" index="130" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="157" y="56">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris7_arms" robot="" id="2" tooltip="Quelle est cette langue étrange?" bitmap_expanded="1" plugin="" x="301" y="49">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="56" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="69.6957" />
                                                                                <Key frame="36" value="44.9982" />
                                                                                <Key frame="53" value="54.6663" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="3.77694" />
                                                                                <Key frame="36" value="0.498473" />
                                                                                <Key frame="53" value="8.87466" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-49.4854" />
                                                                                <Key frame="36" value="-94.2223" />
                                                                                <Key frame="53" value="-106" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="-89.1198" />
                                                                                <Key frame="36" value="-88.8561" />
                                                                                <Key frame="53" value="-85.8678" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="0.612838" />
                                                                                <Key frame="36" value="-36" />
                                                                                <Key frame="53" value="-35.4228" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="18" value="1.22145" />
                                                                                <Key frame="36" value="23.6" />
                                                                                <Key frame="53" value="22.6814" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="74.183" />
                                                                                <Key frame="32" value="51.1554" />
                                                                                <Key frame="49" value="57.132" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-5.10012" />
                                                                                <Key frame="32" value="-0.498473" />
                                                                                <Key frame="49" value="-6.94585" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="51.7658" />
                                                                                <Key frame="32" value="100.897" />
                                                                                <Key frame="49" value="113.114" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="89.3004" />
                                                                                <Key frame="32" value="88.4215" />
                                                                                <Key frame="49" value="80.687" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="15.0271" />
                                                                                <Key frame="32" value="50" />
                                                                                <Key frame="49" value="50.6232" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="8.16143" />
                                                                                <Key frame="32" value="26" />
                                                                                <Key frame="49" value="25.0414" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="429" y="48">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood7" index="140" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="157" y="56">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris10_arms" robot="" id="2" tooltip="J&apos;ai de la purée dans mes micros." bitmap_expanded="1" plugin="" x="299" y="50">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="62" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="42.1856" />
                                                                                <Key frame="28" value="8.17153" />
                                                                                <Key frame="38" value="1.75543" />
                                                                                <Key frame="59" value="86.7467" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="5.71056" />
                                                                                <Key frame="28" value="0.498473" />
                                                                                <Key frame="38" value="0.498473" />
                                                                                <Key frame="59" value="6.15002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-88.5094" />
                                                                                <Key frame="28" value="-64" />
                                                                                <Key frame="38" value="-62" />
                                                                                <Key frame="59" value="-74.2709" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-61.7855" />
                                                                                <Key frame="28" value="-88.8561" />
                                                                                <Key frame="38" value="-88.8561" />
                                                                                <Key frame="59" value="-23.4647" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-51" />
                                                                                <Key frame="28" value="-68" />
                                                                                <Key frame="38" value="-54" />
                                                                                <Key frame="59" value="4" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="34" />
                                                                                <Key frame="28" value="34.4" />
                                                                                <Key frame="38" value="6.94143" />
                                                                                <Key frame="59" value="7.12143" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="10" value="87.3668" />
                                                                                <Key frame="24" value="90.5309" />
                                                                                <Key frame="34" value="91.8493" />
                                                                                <Key frame="55" value="94.7497" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="10" value="-0.969213" />
                                                                                <Key frame="24" value="-4.66067" />
                                                                                <Key frame="34" value="-4.13332" />
                                                                                <Key frame="55" value="-3.34229" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="10" value="80.7701" />
                                                                                <Key frame="24" value="87.7135" />
                                                                                <Key frame="34" value="79.8033" />
                                                                                <Key frame="55" value="94.657" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="10" value="35.6864" />
                                                                                <Key frame="24" value="37.9716" />
                                                                                <Key frame="34" value="34.7196" />
                                                                                <Key frame="55" value="34.7196" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="10" value="-16.7018" />
                                                                                <Key frame="24" value="-15.0319" />
                                                                                <Key frame="34" value="-13.0983" />
                                                                                <Key frame="55" value="-12.8346" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="10" value="3.26144" />
                                                                                <Key frame="24" value="3.26144" />
                                                                                <Key frame="34" value="3.26144" />
                                                                                <Key frame="55" value="3.26144" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="435" y="44">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="armsNotUnderstood8" index="150" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeArms" robot="" id="1" tooltip="activeArms" bitmap_expanded="1" plugin="" x="157" y="56">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris13_arms" robot="" id="2" tooltip="Enlève cette patate de ta bouche quand tu parles." bitmap_expanded="1" plugin="" x="300" y="56">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="93" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="87.8014" />
                                                                                <Key frame="37" value="88.0651" />
                                                                                <Key frame="52" value="93.6023" />
                                                                                <Key frame="70" value="91.4929" />
                                                                                <Key frame="90" value="93.6023" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="10.1051" />
                                                                                <Key frame="37" value="4.74375" />
                                                                                <Key frame="52" value="6.23791" />
                                                                                <Key frame="70" value="4.91953" />
                                                                                <Key frame="90" value="2.01911" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-53.5285" />
                                                                                <Key frame="37" value="-73.7436" />
                                                                                <Key frame="52" value="-63.8118" />
                                                                                <Key frame="70" value="-91.8493" />
                                                                                <Key frame="90" value="-77.2592" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-42.4493" />
                                                                                <Key frame="37" value="-34.0117" />
                                                                                <Key frame="52" value="-43.504" />
                                                                                <Key frame="70" value="-41.4825" />
                                                                                <Key frame="90" value="-40.8672" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="-6.24272" />
                                                                                <Key frame="37" value="-5.62747" />
                                                                                <Key frame="52" value="-8.35212" />
                                                                                <Key frame="70" value="-9.23104" />
                                                                                <Key frame="90" value="18" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="19" value="7.88143" />
                                                                                <Key frame="37" value="7.90143" />
                                                                                <Key frame="52" value="7.90143" />
                                                                                <Key frame="70" value="7.90143" />
                                                                                <Key frame="90" value="7.76143" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="55.1984" />
                                                                                <Key frame="33" value="-7.81996" />
                                                                                <Key frame="48" value="12.9225" />
                                                                                <Key frame="66" value="31.5555" />
                                                                                <Key frame="86" value="91.234" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-5.3638" />
                                                                                <Key frame="33" value="-0.498473" />
                                                                                <Key frame="48" value="-3.78175" />
                                                                                <Key frame="66" value="-10.9889" />
                                                                                <Key frame="86" value="-5.45169" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="21.8826" />
                                                                                <Key frame="33" value="36.4727" />
                                                                                <Key frame="48" value="63.5433" />
                                                                                <Key frame="66" value="47.2833" />
                                                                                <Key frame="86" value="69.0805" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="81.0386" />
                                                                                <Key frame="33" value="89.5017" />
                                                                                <Key frame="48" value="64.6907" />
                                                                                <Key frame="66" value="89.5017" />
                                                                                <Key frame="86" value="38.9384" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-4.83645" />
                                                                                <Key frame="33" value="71" />
                                                                                <Key frame="48" value="71.893" />
                                                                                <Key frame="66" value="71.4536" />
                                                                                <Key frame="86" value="-3.2" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="2.88145" />
                                                                                <Key frame="33" value="33.7" />
                                                                                <Key frame="48" value="12.2" />
                                                                                <Key frame="66" value="6" />
                                                                                <Key frame="86" value="5.92144" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="439" y="49">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="legs_" mute="0">
                                                        <BehaviorKeyframe name="end" index="1" bitmap="media/images/box/movement/move_leg.png">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="129" y="50">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="StandUp" robot="" id="2" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="295" y="45">
                                                                    <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="31" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-19.6853" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="12.1315" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="19.6902" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-5.10012" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="4.83164" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-8.96255" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-7.29261" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="21.9705" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-4.39218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="2.46337" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="5.53958" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Exit" robot="" id="3" tooltip="Exit the behavior." bitmap_expanded="1" plugin="" x="424" y="44">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALFrameManager.exitBehavior(self.parentId)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsEnd" index="10" bitmap="media/images/box/movement/move_leg.png">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="129" y="50">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="StandUp" robot="" id="2" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="295" y="45">
                                                                    <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="31" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-19.6853" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="12.1315" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="19.6902" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-5.10012" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="4.83164" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-8.96255" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-7.29261" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="21.9705" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-4.39218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="2.46337" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="5.53958" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsBodyTalk" index="20" bitmap="media/images/box/movement/move_leg.png">
                                                            <Diagram scale="82">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="127" y="51">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p=self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="RandomIntMod" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="424" y="74">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            func = getattr( self, "output_" + str(self.aShuffled[self.nIndex]) )
            func()
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            func = getattr( self, "output_" + str(nVal) )
            func()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                    <Output name="output_0" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                    <Output name="output_1" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                    <Output name="output_2" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Output name="output_3" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Output name="output_4" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                    <Output name="output_5" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Parameter name="max" inherits_from_parent="0" content_type="1" value="6" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="9" />
                                                                    <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="10" />
                                                                </Box>
                                                                <Box name="Anim_bodytalkLegs2" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="782" y="170">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-16.3455" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="1.14019" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="15.3786" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-4.48007" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="4.66067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-2.72705" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-16.9655" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="14.6803" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.2711" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="13.0935" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalkLegs1" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="782" y="74">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-16.3455" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="16.9655" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="14.6803" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.2711" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-13.0935" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-1.14019" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="15.3786" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-4.48007" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="4.66067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="2.72705" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalkLegs4" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="784" y="365">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-21.5311" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="9.84628" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="4.39699" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="1.14019" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="7.55628" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-8.78677" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-5.44688" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="3.1617" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.10012" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.45169" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalkLegs3" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="784" y="268">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-16.6091" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="10.6373" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="11.8678" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-4.13332" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.35899" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-9.31412" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-7.3805" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="13.5329" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-4.48007" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="4.66067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="7.03374" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalkLegs5" robot="" id="7" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="785" y="463">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-20.9158" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="9.23104" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="13.0983" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="12.4782" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-5.97423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-7.90785" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="13.9724" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="8.35212" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-1.66754" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.3638" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Anim_bodytalkLegs6" robot="" id="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="785" y="560">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-22.8494" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="6.59428" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="2.11181" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="13.2692" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="0.70073" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-4.2164" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-4.65586" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="13.6208" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="-2.28278" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="5.62747" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="75" value="4.3091" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="6" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="--EMPTY--" index="30" bitmap="">
                                                            <Diagram scale="-1" />
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsTactileSensorExplanation" index="50" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="90" y="20">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_helpTactilExplain_legs" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="245" y="15">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="250" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="-18.5428" />
                                                                                <Key frame="90" value="-21.0037" />
                                                                                <Key frame="123" value="-21.1795" />
                                                                                <Key frame="152" value="-21.1795" />
                                                                                <Key frame="186" value="-23.201" />
                                                                                <Key frame="214" value="-21.7069" />
                                                                                <Key frame="231" value="-19.3338" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="1.93602" />
                                                                                <Key frame="90" value="1.67235" />
                                                                                <Key frame="123" value="4.83645" />
                                                                                <Key frame="152" value="7.82477" />
                                                                                <Key frame="186" value="3.51807" />
                                                                                <Key frame="214" value="8.61579" />
                                                                                <Key frame="231" value="10.4615" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="15.4713" />
                                                                                <Key frame="90" value="13.5377" />
                                                                                <Key frame="123" value="18.3718" />
                                                                                <Key frame="152" value="17.1413" />
                                                                                <Key frame="186" value="9.05525" />
                                                                                <Key frame="214" value="18.8991" />
                                                                                <Key frame="231" value="18.1081" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="-5.01223" />
                                                                                <Key frame="90" value="-5.18802" />
                                                                                <Key frame="123" value="-5.18802" />
                                                                                <Key frame="152" value="-5.18802" />
                                                                                <Key frame="186" value="-5.18802" />
                                                                                <Key frame="214" value="-5.18802" />
                                                                                <Key frame="231" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="7.81996" />
                                                                                <Key frame="90" value="9.40201" />
                                                                                <Key frame="123" value="4.48007" />
                                                                                <Key frame="152" value="5.00742" />
                                                                                <Key frame="186" value="9.31412" />
                                                                                <Key frame="214" value="3.51326" />
                                                                                <Key frame="231" value="5.2711" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="-1.31597" />
                                                                                <Key frame="90" value="-0.876513" />
                                                                                <Key frame="123" value="-3.86483" />
                                                                                <Key frame="152" value="-6.06212" />
                                                                                <Key frame="186" value="-3.86483" />
                                                                                <Key frame="214" value="-6.50158" />
                                                                                <Key frame="231" value="-7.64418" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="-9.66569" />
                                                                                <Key frame="90" value="-8.96255" />
                                                                                <Key frame="123" value="-8.61098" />
                                                                                <Key frame="152" value="-5.18321" />
                                                                                <Key frame="186" value="-5.00742" />
                                                                                <Key frame="214" value="-6.41369" />
                                                                                <Key frame="231" value="-2.63435" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="14.7634" />
                                                                                <Key frame="90" value="13.7966" />
                                                                                <Key frame="123" value="15.2908" />
                                                                                <Key frame="152" value="15.5544" />
                                                                                <Key frame="186" value="6.94104" />
                                                                                <Key frame="214" value="17.6638" />
                                                                                <Key frame="231" value="18.0154" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="-4.39218" />
                                                                                <Key frame="90" value="-4.48007" />
                                                                                <Key frame="123" value="-4.48007" />
                                                                                <Key frame="152" value="-4.48007" />
                                                                                <Key frame="186" value="-4.48007" />
                                                                                <Key frame="214" value="-4.48007" />
                                                                                <Key frame="231" value="-4.39218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="7.64898" />
                                                                                <Key frame="90" value="8.79158" />
                                                                                <Key frame="123" value="6.50639" />
                                                                                <Key frame="152" value="6.06693" />
                                                                                <Key frame="186" value="10.8131" />
                                                                                <Key frame="214" value="4.74856" />
                                                                                <Key frame="231" value="5.53958" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="45" value="6.68218" />
                                                                                <Key frame="90" value="6.15482" />
                                                                                <Key frame="123" value="5.97904" />
                                                                                <Key frame="152" value="3.69386" />
                                                                                <Key frame="186" value="4.04542" />
                                                                                <Key frame="214" value="4.57277" />
                                                                                <Key frame="231" value="1.32078" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood0" index="70" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="38">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris2_legs" robot="" id="2" tooltip="Y a trop de bruit ici!" bitmap_expanded="1" plugin="" x="268" y="39">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="58" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-13.7966" />
                                                                                <Key frame="31" value="-14.4118" />
                                                                                <Key frame="52" value="-14.2361" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="10.901" />
                                                                                <Key frame="31" value="4.22121" />
                                                                                <Key frame="52" value="4.3091" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="14.3288" />
                                                                                <Key frame="31" value="15.2077" />
                                                                                <Key frame="52" value="15.2077" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-4.57277" />
                                                                                <Key frame="31" value="-4.92434" />
                                                                                <Key frame="52" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="3.24959" />
                                                                                <Key frame="31" value="1.84332" />
                                                                                <Key frame="52" value="2.37067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-9.31412" />
                                                                                <Key frame="31" value="-4.48007" />
                                                                                <Key frame="52" value="-4.56797" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-0.876513" />
                                                                                <Key frame="31" value="-7.64418" />
                                                                                <Key frame="52" value="-7.90785" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="15.3786" />
                                                                                <Key frame="31" value="15.2029" />
                                                                                <Key frame="52" value="15.3786" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-5.00742" />
                                                                                <Key frame="31" value="-5.00742" />
                                                                                <Key frame="52" value="-5.00742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="3.2544" />
                                                                                <Key frame="31" value="2.11181" />
                                                                                <Key frame="52" value="2.28759" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="2.1997" />
                                                                                <Key frame="31" value="7.29742" />
                                                                                <Key frame="52" value="7.20953" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood1" index="80" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris11_legs" robot="" id="2" tooltip="Essaye de me parler plus clairement." bitmap_expanded="1" plugin="" x="276" y="37">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="67" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-21.5311" />
                                                                                <Key frame="44" value="-21.1795" />
                                                                                <Key frame="62" value="-21.619" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="7.91266" />
                                                                                <Key frame="44" value="6.4185" />
                                                                                <Key frame="62" value="10.5494" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="17.4929" />
                                                                                <Key frame="44" value="21.7996" />
                                                                                <Key frame="62" value="19.0749" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-4.83645" />
                                                                                <Key frame="44" value="-4.83645" />
                                                                                <Key frame="62" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="3.33748" />
                                                                                <Key frame="44" value="2.81013" />
                                                                                <Key frame="62" value="5.09532" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-6.85315" />
                                                                                <Key frame="44" value="-5.53477" />
                                                                                <Key frame="62" value="-8.17153" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-7.46839" />
                                                                                <Key frame="44" value="-14.0603" />
                                                                                <Key frame="62" value="-9.05044" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="17.5759" />
                                                                                <Key frame="44" value="21.3553" />
                                                                                <Key frame="62" value="20.8279" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-5.00742" />
                                                                                <Key frame="44" value="-4.74375" />
                                                                                <Key frame="62" value="-4.48007" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="3.16651" />
                                                                                <Key frame="44" value="2.46337" />
                                                                                <Key frame="62" value="3.07861" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="6.68218" />
                                                                                <Key frame="44" value="10.901" />
                                                                                <Key frame="62" value="7.64898" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood2" index="90" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris15_legs" robot="" id="2" tooltip="Je t&apos;entends pas bien." bitmap_expanded="1" plugin="" x="277" y="43">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="52" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-17.0486" />
                                                                                <Key frame="46" value="-17.4002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="9.31893" />
                                                                                <Key frame="46" value="7.20953" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="21.9753" />
                                                                                <Key frame="46" value="17.7565" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-5.18802" />
                                                                                <Key frame="46" value="-5.10012" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="0.437054" />
                                                                                <Key frame="46" value="1.66754" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-7.64418" />
                                                                                <Key frame="46" value="-6.85315" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-9.40201" />
                                                                                <Key frame="46" value="-9.40201" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="20.3006" />
                                                                                <Key frame="46" value="15.906" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="-4.56797" />
                                                                                <Key frame="46" value="-4.48007" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="1.49656" />
                                                                                <Key frame="46" value="2.81494" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="24" value="7.4732" />
                                                                                <Key frame="46" value="8.00055" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood3" index="100" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris8_legs" robot="" id="2" tooltip="Je comprends rien!" bitmap_expanded="1" plugin="" x="277" y="31">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="47" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-19.4217" />
                                                                                <Key frame="32" value="-19.0701" />
                                                                                <Key frame="41" value="-19.0701" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="6.50639" />
                                                                                <Key frame="32" value="3.78175" />
                                                                                <Key frame="41" value="3.69386" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="10.7252" />
                                                                                <Key frame="32" value="10.4615" />
                                                                                <Key frame="41" value="10.6373" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-4.92434" />
                                                                                <Key frame="32" value="-4.83645" />
                                                                                <Key frame="41" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="8.08363" />
                                                                                <Key frame="32" value="8.17153" />
                                                                                <Key frame="41" value="8.34731" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-5.71056" />
                                                                                <Key frame="32" value="-3.51326" />
                                                                                <Key frame="41" value="-3.42537" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-3.1617" />
                                                                                <Key frame="32" value="-5.62267" />
                                                                                <Key frame="41" value="-5.62267" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="11.4235" />
                                                                                <Key frame="32" value="10.8083" />
                                                                                <Key frame="41" value="10.9841" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="-4.83164" />
                                                                                <Key frame="32" value="-4.91953" />
                                                                                <Key frame="41" value="-4.91953" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="7.82477" />
                                                                                <Key frame="32" value="8.08844" />
                                                                                <Key frame="41" value="8.26423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="15" value="3.43018" />
                                                                                <Key frame="32" value="5.27591" />
                                                                                <Key frame="41" value="5.27591" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood4" index="110" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris12_legs" robot="" id="2" tooltip="C&apos;est désespérant." bitmap_expanded="1" plugin="" x="247" y="30">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="49" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-21.4432" />
                                                                                <Key frame="45" value="-25.0467" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="10.9889" />
                                                                                <Key frame="45" value="8.35212" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="20.0417" />
                                                                                <Key frame="45" value="7.03374" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-4.83645" />
                                                                                <Key frame="45" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="4.39218" />
                                                                                <Key frame="45" value="11.4235" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-8.69888" />
                                                                                <Key frame="45" value="-7.20472" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-9.66569" />
                                                                                <Key frame="45" value="-5.71056" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="22.2342" />
                                                                                <Key frame="45" value="11.5993" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-4.74375" />
                                                                                <Key frame="45" value="-4.91953" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="2.02391" />
                                                                                <Key frame="45" value="7.4732" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="8.26423" />
                                                                                <Key frame="45" value="7.12163" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood5" index="120" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris14_legs" robot="" id="2" tooltip="Fais un effort!" bitmap_expanded="1" plugin="" x="246" y="34">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="46" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-21.619" />
                                                                                <Key frame="29" value="-23.1131" />
                                                                                <Key frame="42" value="-21.5311" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="10.4615" />
                                                                                <Key frame="29" value="8.96736" />
                                                                                <Key frame="42" value="10.5494" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="19.1628" />
                                                                                <Key frame="29" value="12.3951" />
                                                                                <Key frame="42" value="19.0749" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-4.83645" />
                                                                                <Key frame="29" value="-4.83645" />
                                                                                <Key frame="42" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="5.35899" />
                                                                                <Key frame="29" value="7.02893" />
                                                                                <Key frame="42" value="5.18321" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-8.08363" />
                                                                                <Key frame="29" value="-7.90785" />
                                                                                <Key frame="42" value="-8.17153" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-9.05044" />
                                                                                <Key frame="29" value="-6.67737" />
                                                                                <Key frame="42" value="-9.13834" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="20.74" />
                                                                                <Key frame="29" value="14.5876" />
                                                                                <Key frame="42" value="20.8279" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-4.56797" />
                                                                                <Key frame="29" value="-4.91953" />
                                                                                <Key frame="42" value="-4.48007" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="3.2544" />
                                                                                <Key frame="29" value="5.10012" />
                                                                                <Key frame="42" value="3.07861" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="7.64898" />
                                                                                <Key frame="29" value="7.03374" />
                                                                                <Key frame="42" value="7.64898" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood6" index="130" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris7_legs" robot="" id="2" tooltip="Quelle est cette langue étrange?" bitmap_expanded="1" plugin="" x="272" y="42">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="56" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-22.2342" />
                                                                                <Key frame="34" value="-15.9939" />
                                                                                <Key frame="51" value="-15.906" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="6.4185" />
                                                                                <Key frame="34" value="5.80326" />
                                                                                <Key frame="51" value="5.80326" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="15.4713" />
                                                                                <Key frame="34" value="14.6803" />
                                                                                <Key frame="51" value="14.8561" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-4.83645" />
                                                                                <Key frame="34" value="-4.83645" />
                                                                                <Key frame="51" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="5.09532" />
                                                                                <Key frame="34" value="4.91953" />
                                                                                <Key frame="51" value="5.18321" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-5.62267" />
                                                                                <Key frame="34" value="-5.18321" />
                                                                                <Key frame="51" value="-5.18321" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-7.73207" />
                                                                                <Key frame="34" value="-6.50158" />
                                                                                <Key frame="51" value="-6.50158" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="16.697" />
                                                                                <Key frame="34" value="15.4665" />
                                                                                <Key frame="51" value="15.5544" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="-4.65586" />
                                                                                <Key frame="34" value="-4.56797" />
                                                                                <Key frame="51" value="-4.39218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="3.78175" />
                                                                                <Key frame="34" value="4.04542" />
                                                                                <Key frame="51" value="4.13332" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="16" value="6.94585" />
                                                                                <Key frame="34" value="6.06693" />
                                                                                <Key frame="51" value="6.06693" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood7" index="140" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris10_legs" robot="" id="2" tooltip="J&apos;ai de la purée dans mes micros." bitmap_expanded="1" plugin="" x="246" y="37">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="62" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-17.2244" />
                                                                                <Key frame="57" value="-20.1248" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="8.87947" />
                                                                                <Key frame="57" value="6.06693" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="21.6238" />
                                                                                <Key frame="57" value="23.9968" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-4.83645" />
                                                                                <Key frame="57" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="3.42537" />
                                                                                <Key frame="57" value="1.75543" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-6.50158" />
                                                                                <Key frame="57" value="-4.56797" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-6.58948" />
                                                                                <Key frame="57" value="-11.072" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="22.8494" />
                                                                                <Key frame="57" value="22.1463" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-5.00742" />
                                                                                <Key frame="57" value="-4.91953" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="2.63916" />
                                                                                <Key frame="57" value="3.34229" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="5.27591" />
                                                                                <Key frame="57" value="8.26423" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="legsNotUnderstood8" index="150" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeLegs" robot="" id="1" tooltip="activeLegs" bitmap_expanded="1" plugin="" x="107" y="37">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate legs" )
        if( p == 1 ):
            self.legsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="legsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris13_legs" robot="" id="2" tooltip="Enlève cette patate de ta bouche quand tu parles." bitmap_expanded="1" plugin="" x="256" y="38">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="93" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-21.0916" />
                                                                                <Key frame="68" value="-21.0037" />
                                                                                <Key frame="88" value="-22.6737" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="14.6803" />
                                                                                <Key frame="68" value="14.5924" />
                                                                                <Key frame="88" value="13.2741" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="27.7363" />
                                                                                <Key frame="68" value="27.7363" />
                                                                                <Key frame="88" value="23.6453" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-4.48488" />
                                                                                <Key frame="68" value="-4.74856" />
                                                                                <Key frame="88" value="-4.83645" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-0.881321" />
                                                                                <Key frame="68" value="-0.79343" />
                                                                                <Key frame="88" value="1.49176" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-10.6325" />
                                                                                <Key frame="68" value="-10.5446" />
                                                                                <Key frame="88" value="-10.193" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-11.9509" />
                                                                                <Key frame="68" value="-11.7751" />
                                                                                <Key frame="88" value="-11.2477" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="25.3983" />
                                                                                <Key frame="68" value="25.1346" />
                                                                                <Key frame="88" value="20.74" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-4.91953" />
                                                                                <Key frame="68" value="-4.91953" />
                                                                                <Key frame="88" value="-4.56797" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="2.81494" />
                                                                                <Key frame="68" value="2.90283" />
                                                                                <Key frame="88" value="4.57277" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="9.40682" />
                                                                                <Key frame="68" value="9.40682" />
                                                                                <Key frame="88" value="9.23104" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="head_" mute="0">
                                                        <BehaviorKeyframe name="end" index="1" bitmap="media/images/box/movement/move_head.png">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="113" y="27">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="StandUp" robot="" id="2" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="271" y="18">
                                                                    <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="-0.441863" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="-11.1647" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Exit" robot="" id="3" tooltip="Exit the behavior." bitmap_expanded="1" plugin="" x="406" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALFrameManager.exitBehavior(self.parentId)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headDown" index="10" bitmap="media/images/box/movement/move_head.png">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="113" y="27">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="StandUp" robot="" id="2" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' bitmap_expanded="1" plugin="" x="271" y="18">
                                                                    <bitmap>media/images/positions/StandUp_1.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="-1.58446" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="22.4979" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="--EMPTY--" index="20" bitmap="">
                                                            <Diagram scale="-1" />
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="--EMPTY--_copy" index="30" bitmap="">
                                                            <Diagram scale="-1" />
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headCheck" index="40" bitmap="media/images/box/movement/move_head.png">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="88" y="32">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="headCheckRandom" robot="" id="2" tooltip="headchecks à intervales variables" bitmap_expanded="1" plugin="" x="242" y="33">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onStopped();
        pass

    def onInput_RandomInt_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="RandomInt_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="55">
                                                                                    <Box name="RandomInt" robot="" id="1" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="142" y="26">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                        <Parameter name="max" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                        <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                    </Box>
                                                                                    <Box name="Wait" robot="" id="2" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="261" y="273">
                                                                                        <bitmap>media/images/box/wait.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;

  def onUnload(self):
    self.onInput_onStop();

  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything

  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self, p):
    self.startTimer( p );

  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                        <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                        <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                    </Box>
                                                                                    <Box name="Dispatcher" robot="" id="3" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" bitmap_expanded="1" plugin="dispatcher_plugin" x="312" y="26">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		elif(p == (3)):
			self.output_4(p)
		else:
			self.onDefault()]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <keywords>
                                                                                                <keyword>0</keyword>
                                                                                                <keyword>1</keyword>
                                                                                                <keyword>2</keyword>
                                                                                                <keyword>3</keyword>
                                                                                                <keyword></keyword>
                                                                                            </keywords>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" />
                                                                                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" />
                                                                                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" />
                                                                                        <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Anim_headCheck4" robot="" id="7" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="308">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="6" value="-2.1997" />
                                                                                                    <Key frame="14" value="-2.72705" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="6" value="5.88634" />
                                                                                                    <Key frame="14" value="-7" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_headCheck2" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="119">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="8" value="-2.1997" />
                                                                                                    <Key frame="15" value="-2.81494" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="8" value="5.88634" />
                                                                                                    <Key frame="15" value="-5.01223" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_headCheck3" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="213">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="9" value="-2.1997" />
                                                                                                    <Key frame="19" value="-2.28759" />
                                                                                                    <Key frame="27" value="-2.72705" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="9" value="5.88634" />
                                                                                                    <Key frame="19" value="-11" />
                                                                                                    <Key frame="27" value="-7" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_headCheck1" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="580" y="25">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="12" value="-2.63916" />
                                                                                                    <Key frame="22" value="-2.81494" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="12" value="7" />
                                                                                                    <Key frame="22" value="-7" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="RandomInt" robot="" id="8" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="751" y="154">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(1, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 1, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                        <Parameter name="max" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                        <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="6" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="7" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headTactileSensorExplanation" index="50" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="88" y="13">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_helpTactilExplain_head" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="234" y="20">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="250" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-19.4265" />
                                                                                <Key frame="38" value="-27.6883" />
                                                                                <Key frame="45" value="-30.5887" />
                                                                                <Key frame="55" value="-13.4498" />
                                                                                <Key frame="65" value="-6.15482" />
                                                                                <Key frame="79" value="-1.23289" />
                                                                                <Key frame="95" value="-2.28759" />
                                                                                <Key frame="114" value="-4.48488" />
                                                                                <Key frame="128" value="-2.99072" />
                                                                                <Key frame="145" value="-6.06693" />
                                                                                <Key frame="157" value="-5.62747" />
                                                                                <Key frame="171" value="-4.3091" />
                                                                                <Key frame="186" value="-9.93417" />
                                                                                <Key frame="203" value="-13.9772" />
                                                                                <Key frame="219" value="-6.77007" />
                                                                                <Key frame="236" value="-6.77007" />
                                                                                <Key frame="250" value="-2.55126" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="22.8494" />
                                                                                <Key frame="38" value="28.914" />
                                                                                <Key frame="45" value="28.2987" />
                                                                                <Key frame="55" value="29.5016" />
                                                                                <Key frame="65" value="29.5016" />
                                                                                <Key frame="79" value="29.5016" />
                                                                                <Key frame="95" value="-8.70368" />
                                                                                <Key frame="114" value="-23.4695" />
                                                                                <Key frame="128" value="-21.0964" />
                                                                                <Key frame="145" value="-11.2525" />
                                                                                <Key frame="157" value="-22.7664" />
                                                                                <Key frame="171" value="-7" />
                                                                                <Key frame="186" value="29.5016" />
                                                                                <Key frame="203" value="29.5016" />
                                                                                <Key frame="219" value="-17.3171" />
                                                                                <Key frame="236" value="-2.1997" />
                                                                                <Key frame="250" value="-17.9323" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood0" index="70" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris2_head" robot="" id="2" tooltip="Y a trop de bruit ici!" bitmap_expanded="1" plugin="" x="267" y="35">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="58" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="19" />
                                                                                <Key frame="39" value="-34" />
                                                                                <Key frame="58" value="5.09532" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="3.6" />
                                                                                <Key frame="39" value="0" />
                                                                                <Key frame="58" value="-19.8659" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood1" index="80" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris11_head" robot="" id="2" tooltip="Essaye de me parler plus clairement." bitmap_expanded="1" plugin="" x="249" y="22">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="67" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-4.39699" />
                                                                                <Key frame="35" value="-3.78175" />
                                                                                <Key frame="49" value="-0.881321" />
                                                                                <Key frame="67" value="-1.32078" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="4.30429" />
                                                                                <Key frame="35" value="-14.6803" />
                                                                                <Key frame="49" value="-18.196" />
                                                                                <Key frame="67" value="-18.196" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood2" index="90" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="107" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris15_head" robot="" id="2" tooltip="Je t&apos;entends pas bien." bitmap_expanded="1" plugin="" x="256" y="26">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="52" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-22.3269" />
                                                                                <Key frame="28" value="10" />
                                                                                <Key frame="40" value="-26" />
                                                                                <Key frame="52" value="-6.85796" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="12.5661" />
                                                                                <Key frame="40" value="3" />
                                                                                <Key frame="52" value="-17.2292" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood3" index="100" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris8_head" robot="" id="2" tooltip="Je comprends rien!" bitmap_expanded="1" plugin="" x="260" y="28">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="47" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="-33.4013" />
                                                                                <Key frame="25" value="11.6872" />
                                                                                <Key frame="36" value="-14" />
                                                                                <Key frame="47" value="-3.34229" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="14" value="10.9841" />
                                                                                <Key frame="25" value="10.9841" />
                                                                                <Key frame="36" value="10.9841" />
                                                                                <Key frame="47" value="-22.3269" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood4" index="110" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris12_head" robot="" id="2" tooltip="C&apos;est désespérant." bitmap_expanded="1" plugin="" x="265" y="35">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="49" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-1.23289" />
                                                                                <Key frame="35" value="-17" />
                                                                                <Key frame="42" value="10" />
                                                                                <Key frame="49" value="-4.66067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-12.1315" />
                                                                                <Key frame="49" value="24.4315" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood5" index="120" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris14_head" robot="" id="2" tooltip="Fais un effort!" bitmap_expanded="1" plugin="" x="251" y="32">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="46" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-2.63916" />
                                                                                <Key frame="33" value="-2.46337" />
                                                                                <Key frame="46" value="-3.2544" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="20" value="-6.68218" />
                                                                                <Key frame="33" value="-29.0946" />
                                                                                <Key frame="46" value="-18.3718" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood6" index="130" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris7_head" robot="" id="2" tooltip="Quelle est cette langue étrange?" bitmap_expanded="1" plugin="" x="249" y="28">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="56" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-0.79343" />
                                                                                <Key frame="39" value="-0.881321" />
                                                                                <Key frame="56" value="-3.2544" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="21" value="-21.6238" />
                                                                                <Key frame="39" value="-29.6219" />
                                                                                <Key frame="56" value="-29.9735" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood7" index="140" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris10_head" robot="" id="2" tooltip="J&apos;ai de la purée dans mes micros." bitmap_expanded="1" plugin="" x="244" y="23">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="62" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="-17.4929" />
                                                                                <Key frame="31" value="-38.7627" />
                                                                                <Key frame="41" value="-47.2003" />
                                                                                <Key frame="62" value="-4.74856" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="17" value="1.84332" />
                                                                                <Key frame="31" value="25.8378" />
                                                                                <Key frame="41" value="25.662" />
                                                                                <Key frame="62" value="-9.84628" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="headNotUnderstood8" index="150" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="activeHeadcheck" robot="" id="1" tooltip="activeHeadcheck" bitmap_expanded="1" plugin="" x="106" y="29">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Anim_pasCompris13_head" robot="" id="2" tooltip="Enlève cette patate de ta bouche quand tu parles." bitmap_expanded="1" plugin="" x="240" y="29">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="93" scale="10">
                                                                        <watches />
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-5.71537" />
                                                                                <Key frame="40" value="-6.85796" />
                                                                                <Key frame="55" value="-6.85796" />
                                                                                <Key frame="73" value="-6.33061" />
                                                                                <Key frame="93" value="-2.81494" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="16.8728" />
                                                                                <Key frame="40" value="-19.778" />
                                                                                <Key frame="55" value="-26.282" />
                                                                                <Key frame="73" value="-24.6121" />
                                                                                <Key frame="93" value="-21.9753" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="1" alwaysVisible="0" />
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="1" alwaysVisible="0" />
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="timeline_security" mute="0">
                                                        <BehaviorKeyframe name="timelineSecurityStop" index="1" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="68" y="11">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Box name="activeMotion" robot="" id="2" tooltip="activeMotion" bitmap_expanded="1" plugin="" x="69" y="122">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p1 = self.getParameter( "Activate arms" )
        p2 = self.getParameter( "Activate legs" )
        p3 = self.getParameter( "Activate head" )
        if( not p1 and not p2 and not p3 ):
            self.noMotion()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="noMotion" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Exit" robot="" id="3" tooltip="Exit the behavior." bitmap_expanded="1" plugin="" x="194" y="122">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        ALFrameManager.exitBehavior(self.parentId)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto" index="2" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="8">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy" index="10" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy" index="11" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="10" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy" index="20" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy" index="21" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="20" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy" index="30" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy" index="31" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="30" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy" index="40" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy" index="41" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="40" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy" index="50" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy" index="51" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="69" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="50" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy" index="70" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy" index="71" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="70" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy" index="80" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy" index="81" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="80" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy_copy" index="90" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy_copy" index="91" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="90" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="100" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="101" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="100" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="110" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="111" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="110" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="120" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="121" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="120" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="130" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="131" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="130" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="140" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="141" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="140" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityStop_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="150" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="Stop" robot="" id="1" tooltip="Stop the timeline parent at the current frame index. Note that all the current behavior keyframes will still be loaded, and therefore the event logic will still work." bitmap_expanded="1" plugin="" x="61" y="18">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="timelineSecurityGoto_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy" index="151" bitmap="media/images/box/box-timeLine.png">
                                                            <Diagram scale="-1">
                                                                <Box name="gotoAndStop" robot="" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." bitmap_expanded="1" plugin="" x="70" y="10">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndStopParent(self.getParameter("frame number"))
        try:
            self.stopTimelineParent()
        except:
            pass

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame number" inherits_from_parent="0" content_type="1" value="150" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Box name="update_ui_state_ref" robot="" id="6" tooltip="update ui_state for use in autonomous life or ...&#x0A;&#x0A;v0.9" bitmap_expanded="1" plugin="" x="481" y="18">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# update_ui_state_ref
# v0.9

import behaviordata
import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        behaviordata.extractedData.updateValue( 'ui_state', self.getParameter( 'ui_name' ) );
        behaviordata.extractedData.updateValue( 'ui_state_last_start', int( time.time() ) );
        self.onStopped() #~ activate output of the box        


    def onInput_onStop(self):
        behaviordata.extractedData.updateValue( 'ui_state', '' );
        behaviordata.extractedData.updateValue( 'ui_state_last_stop', int( time.time() ) );
# update_ui_state_ref - end
pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="ui_name" inherits_from_parent="0" content_type="3" value="choice" default_value="choice" custom_choice="0" tooltip="name of the user interface to update" id="5" />
                                            </Box>
                                            <Box name="RouteOther" robot="" id="7" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="452" y="172">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if( altools.isString( p ) ):
            self.cancel( p )
        else:
            self.output( p )

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="cancel" type="0" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="output" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                            </Box>
                                            <Box name="SayIt" robot="" id="8" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="579" y="383">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, nNumChoice):
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        try:
            params = ALMemory.getData( naolibrary.xarLoader.getVarName_InputData( strBehaviorName )  );
            params = params[1]; # saute la question
            strAnswer = params[nNumChoice];
            if( altools.isArray( strAnswer ) ):
                strAnswer = strAnswer[0];                
        except:
            strAnswer = "ok, je vois le genre"; # erreur 165492
        altools.uiSay( str( strAnswer ) + ' !' );

        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="MemorizeValue" robot="" id="9" tooltip="Memorize value for further emition&#x0A;*** ref box in: ./2_wip/ressourcemanager/RessourceTools_sample.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="730" y="291">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.valueMemorized = None;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onMemorize(self, p):
        self.log( "%s: memorizing: %s" % ( self.boxName, str( p ) ) );
        self.valueMemorized = p;

    def onInput_onEmit(self):
        if( self.valueMemorized != None ):
            self.output_onValueEmitted(self.valueMemorized);]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onMemorize" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onEmit" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_onValueEmitted" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="NaoLibrary-GetInputData - modified: 2 input datas" robot="" id="1" tooltip="# NaoLibrary-GetInputData&#x0A;# v1.0&#x0A;get external input data" bitmap_expanded="1" plugin="" x="47" y="85">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <bitmap>media/images/box/icons_appu/shortcut.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# NaoLibrary-GetInputData
# v1.0

import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        try:
            inputData = ALMemory.getData( naolibrary.xarLoader.getVarName_InputData( strBehaviorName ) );
            strQuestion = inputData[0];
            inputData = inputData[1];
        except:
            strQuestion = None;        
            inputData = None;
        self.log( "%s: inputData: %s" % ( self.boxName, str( inputData ) ) );
        self.output_input_data(inputData)
        time.sleep( 0.1 );
        self.log( "%s: strQuestion: %s" % ( self.boxName, str( strQuestion ) ) );
        self.output_go( strQuestion );

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass
# NaoLibrary-GetInputData - end
pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="output_input_data" type="0" type_size="1" nature="2" inner="0" tooltip="output_input_data" id="3" />
                                                <Output name="output_go" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="5" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="6" indexofinput="3" outputowner="5" indexofoutput="5" />
                                            <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="5" />
                                            <Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="5" />
                                            <Link inputowner="9" indexofinput="3" outputowner="8" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="5" outputowner="9" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="3" outputowner="1" indexofoutput="3" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Box name="NaoLibrary-SendInputData" robot="" id="1" tooltip="# NaoLibrary-SendInputData&#x0A;# v1.0&#x0A;Post some input data to test box" bitmap_expanded="1" plugin="" x="415" y="325">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <bitmap>media/images/box/icons_appu/shortcut.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# NaoLibrary-SendInputData
# v1.0

import naolibrary
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, inputData):
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        self.log( "%s: inputData: %s" % ( self.boxName, str( inputData ) ) );        
        ALMemory.insertData( naolibrary.xarLoader.getVarName_InputData( strBehaviorName ), inputData );
        self.output_done();
        
# NaoLibrary-SendInputData - end
pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="output_done" type="1" type_size="1" nature="1" inner="0" tooltip="done" id="3" />
                        </Box>
                        <Box name="Text Edit" robot="" id="6" tooltip="Transmits the text you entered when the input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="58" y="305">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("['quesse tu veux manger?',[ ['la tarte aux prunes blabla blibli blublu bloblo blabla', 'la tarte'], ['le gateau aux cerises', 'le gateau'], 'aucun des deux' ]]")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>[&apos;quesse tu veux manger?&apos;,[ [&apos;la tarte aux prunes blabla blibli blublu bloblo blabla&apos;, &apos;la tarte&apos;], [&apos;le gateau aux cerises&apos;, &apos;le gateau&apos;], &apos;aucun des deux&apos; ]]</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                        </Box>
                        <Box name="TextToArray_p" robot="" id="4" tooltip="Transform a text to an array.&#x0A;v1.0" bitmap_expanded="1" plugin="" x="265" y="314">
                            <bitmap>media/images/box/icons_appu/convert.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# TextToArray
# v1.0
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        try:
            aDyn = eval( p );
        except:
            aDyn = p;
        anArray = [];
        if( not isinstance( aDyn, type( anArray ) ) ):
            aDyn = [aDyn];
        self.onStopped(aDyn) #~ activate output of the box
        pass
# TextToArray - end
pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        </Box>
                        <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="3" />
                        <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="3" />
                        <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="3" />
                        <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList />
        </Timeline>
    </Box>
</ChoregrapheProject>
