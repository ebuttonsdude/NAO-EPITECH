<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="2">
    <Box name="root" robot="" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." bitmap_expanded="1" plugin="" x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="behavior_layer1" mute="0">
                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                    <Diagram scale="-1">
                        <Box name="NaoLibrary-Encapsulation_ref" robot="" id="11" tooltip="# NaoLibrary-Encapsulation&#x0A;# v 1.0&#x0A;&#x0A;This box encapsulate any box, so that it transforms it in a regular call, with params in, intermediary out and results out." bitmap_expanded="1" plugin="" x="205" y="35">
                            <bitmap>media/images/box/icons_appu/gear.png</bitmap>
                            <bitmap>media/images/box/icons_appu/shortcut.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# NaoLibrary-Encapsulation
# v1.0
import naolibrary
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.BIND_PYTHON( self.getName(),"callback_output_on_intermediary" );
        self.BIND_PYTHON( self.getName(),"callback_output_on_results" );
        self.BIND_PYTHON( self.getName(),"callback_soft_cancel" );        

    def onLoad(self):
        self.bIsRunning = False;

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        self.log( self.boxName + ": start - begin" );
        
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" );
            return;
            
        # wait the soft cancel
        self.bIsRunning = True;
        
        # get params from outside
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        try:
            params = ALMemory.getData( naolibrary.xarLoader.getVarName_Params( strBehaviorName ) );
            # erase them for next time
            ALMemory.insertData( naolibrary.xarLoader.getVarName_Params( strBehaviorName ), [] );
        except:
            params = [];
        strOutput = '%s: strBehaviorName: %s, params received: %s' % ( self.getName(), strBehaviorName, str( params ) );
        print( strOutput );        
        self.log( strOutput );
        
        # TODO, BUG a venir: ici il faudrait effacer les paramètres précédemment ajouté par la boite, avec une méthode du genre delParameter
        # car sinon si on écrase les parametres par défaut, tant qu'on ne recharge pas ce comportement, 
        # un appel sans parametre, va utiliser les dernier envoyés... C'est moche.
        i = 0;
        for elem in params:
            self.addParameter( elem[0], elem[1], False );
            i += 1;        
            
        # install hook
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
        ALMemory.subscribeToMicroEvent( self.getName() + "__output_on_intermediary", self.getName(), "", "callback_output_on_intermediary" );
        ALMemory.subscribeToMicroEvent( self.getName() + "__output_on_results", self.getName(), "", "callback_output_on_results" );
        ALMemory.subscribeToMicroEvent( naolibrary.xarLoader.getVarName_SoftCancel( strBehaviorName ), self.getName(), "", "callback_soft_cancel" );        
        
        # launch the box
        self.gotoAndPlay( 0 );
        self.log( "goto and play" );
        self.log( self.boxName + ": start - end" );
    # onInput_onStart - end

    def onInput_onStop(self):
        if( self.bIsRunning ):
            strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
            self.log( '%s: strBehaviorName: %s, stopping...' % ( self.getName(), strBehaviorName, ) );        
            ALMemory.insertData( naolibrary.xarLoader.getVarName_Cancel( strBehaviorName ), True );
            self.onFinished();
            
    def onFinished(self):
        if( self.bIsRunning ):
            strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
            self.log( '%s: strBehaviorName: %s, finishing...' % ( self.getName(), strBehaviorName, ) );
            self.bIsRunning = False;
            ALMemory.unsubscribeToMicroEvent( self.getName() + "__output_on_intermediary", self.getName() );
            ALMemory.unsubscribeToMicroEvent( self.getName() + "__output_on_results", self.getName() );
            ALMemory.unsubscribeToMicroEvent( naolibrary.xarLoader.getVarName_SoftCancel( strBehaviorName ), self.getName() );            
            self.gotoAndStop( -1 );                    
        
        
    def callback_output_on_intermediary(self, pDataName, pValue, pMessage):
        "We got there when user activate the intermediary output"
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        self.log( '%s: strBehaviorName: %s, returning intermediary: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );        
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Intermediary( strBehaviorName ), pValue );
        
    def callback_output_on_results(self, pDataName, pValue, pMessage):
        "We got there when user activate the results output"
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        self.log( '%s: strBehaviorName: %s, returning results: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Results( strBehaviorName ), pValue );
        # stop the box
        self.onFinished();
        
    def callback_soft_cancel(self, pDataName, pValue, pMessage):
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );    
        self.log( '%s: strBehaviorName: %s, soft cancel received: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );           
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Cancel( strBehaviorName ), True );
        # stop the box
        self.onFinished();
        
# NaoLibrary-Encapsulation - end
pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="output_on_intermediary" type="0" type_size="1" nature="2" inner="0" tooltip="post there your intermediary results" id="4" />
                            <Output name="output_on_results" type="0" type_size="1" nature="2" inner="0" tooltip="post there your final results" id="5" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="Explore" robot="" id="5" tooltip="A small state machine, the most simple and efficient. Developped by the Applications and Usage Team At Aldebaran.&#x0A;*** ref box in: ./4_localize/Templates/TemplateStateMachine/ExampleTemplateStateMachine.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="216" y="42">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        uvb = ALProxy( 'UsageVisionObstacle' );
        uvb.setThreshold( self.getParameter( 'nObstaclesThreshold' ) );    
        self.gotoAndStop(1)
        pass

    def onInput_onStop(self):
        self.onUnload() #~ call onUnload of this box
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="output_intermediary" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                <Parameter name="rChanceOfLookAt" inherits_from_parent="1" content_type="1" value="5" default_value="5" min="0" max="1000" tooltip="Percentage of chance of a decision to look at an object.&#x0A;&#x0A;because we can&apos;t put something like 0.005, on va le mettre en pour mille" id="6" />
                                                <Parameter name="rChanceToExit" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="" id="7" />
                                                <Parameter name="rTimeOut" inherits_from_parent="1" content_type="2" value="600" default_value="600" min="0" max="1e+14" tooltip="time out in seconds" id="8" />
                                                <Parameter name="bOuputMapToPng" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="activate the output of a map in png on the robot..." id="9" />
                                                <Parameter name="bEnableSound" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="EnableDebugSound" id="10" />
                                                <Parameter name="nObstaclesThreshold" inherits_from_parent="1" content_type="1" value="32" default_value="32" min="0" max="256" tooltip="Change the Obstacles Threshold (vision)" id="11" />
                                                <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="behavior_layer1" mute="0">
                                                        <BehaviorKeyframe name="Init" index="1" bitmap="">
                                                            <Diagram scale="88">
                                                                <Box name="Enter name here" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="152" y="546">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = "I can't succeed standing, so I won't explore."
		sFrench = "Je n'arrive pas a me relever, je ne vais donc pas explorer."
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <english>I can&apos;t succeed standing, so I won&apos;t explore.</english>
                                                                        <french>Je n&apos;arrive pas a me relever, je ne vais donc pas explorer.</french>
                                                                        <spanish></spanish>
                                                                        <italian></italian>
                                                                        <german></german>
                                                                        <chinese></chinese>
                                                                        <polish></polish>
                                                                        <korean></korean>
                                                                        <language>0</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="4" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="207" y="336">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Ya encore parfois un bug: il se releve pas...")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Ya encore parfois un bug: il se releve pas...</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="IsOk" robot="" id="5" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="324" y="207">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if( p == 1 or ( altools.isArray( p ) and len(p) > 0 and p[0] == 1 ) ):
            self.output_yes();
        else:
            self.output_no();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="Loop" robot="" id="7" tooltip="Increments an internal counter, and stimulates its Output depending on the counter value compared to the max initially set." bitmap_expanded="1" plugin="" x="445" y="310">
                                                                    <bitmap>media/images/box/loop.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.i = 0
        self.max = self.getParameter("Loop max")
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        if(self.i < self.max):
            self.i = self.i + 1
            self.onLoop( self.i )
            return

        self.i = 0
        self.onStopped()

    def onInput_onStop(self):
        self.i = self.max

    def onInput_reinit(self):
        self.i = 0
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="reinit" type="1" type_size="1" nature="1" inner="0" tooltip="Reinitialize the loop, setting the internal counter to zero." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                    <Output name="onLoop" type="2" type_size="1" nature="2" inner="0" tooltip="loop ovverr, yeahhh" id="6" />
                                                                    <Parameter name="Loop max" inherits_from_parent="0" content_type="1" value="4" default_value="5" min="0" max="500" tooltip="How many times are we going to loop over ?" id="7" />
                                                                </Box>
                                                                <Box name="SayTextPrerender_ref" robot="" id="8" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.03" bitmap_expanded="1" plugin="" x="485" y="546">
                                                                    <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# SayTextPrerender - v1.03
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        self.nStep = self.nStateInit;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;
#        txt = "\\RSPD=85\\ " + altools.transformAsciiAccentForSynthesis( p ); # not usefull now!
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        if( not self.getParameter( 'bJustPrepare' ) ):
            self.nStep = self.nStateSpeaking;
            self.output_onStartSpeaking();
            if( self.getParameter( "bWithLight" ) ):
                altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
            else:
                altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.nStep = self.nStateStopped;
        self.output_onStopSpeaking();
        
    def onInput_onStop(self):
        while( self.nStep == self.nStatePreparing ): # can't kill while preparing
            print( "%s.onStop: waiting to stop than the sound is prepared..." % self.boxName() );
            time.sleep( 0.5 );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                                    <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="5" />
                                                                    <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="6" />
                                                                    <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="use light in eyes to speak" id="7" />
                                                                    <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="8" />
                                                                    <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="9" />
                                                                    <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="10" />
                                                                </Box>
                                                                <Box name="GotoMenu" robot="" id="9" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="745" y="87">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>20</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="GotoExit" robot="" id="10" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="630" y="546">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(100)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>100</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="11" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="887" y="87">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.getName(), int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="12" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="769" y="546">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.boxName, int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Box name="Standing" robot="" id="1" tooltip="# NaoLibrary-Launcher&#x0A;# v 1.03&#x0A;&#x0A;Execute a behavior found on Nao, with optionnal parameters and output value." bitmap_expanded="1" plugin="" x="210" y="144">
                                                                    <bitmap>media/images/box/icons_appu/shortcut.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# NaoLibrary-Launcher
#  v 1.03
import altools
import naolibrary
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.bm = ALProxy( "ALBehaviorManager" );
        self.strBehaviorName = self.boxName;
        self.BIND_PYTHON( self.getName(),"myDataChangedIntermediary" );

    def onLoad(self):
        #~ puts code for box initialization here
        self.bStarted = False;

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart( self, inputData ):
        strBeName = self.boxName;
        self.onStartBehavior( strBeName, inputData );
        
    def onInput_onStartWithSpecificBehavior( self, strBeName ):
        self.onStartBehavior( strBeName, None );    
        
    def onStartBehavior( self, strBeName, inputData ):
        self.strBehaviorName = naolibrary.getTotalName( strBeName );
        self.log( "%s: starting behavior: '%s'" % (self.boxName, self.strBehaviorName ) );
        # some box can make a little time before finishing, so we're wait a little (2s max)
        for i in range( 5 ):
            if( self.bStarted ):
                time.sleep( 0.4 );
        
        if( self.bStarted ):
            strMsg = "%s: starting behavior: '%s' => already started => nothing" % (self.boxName, self.strBehaviorName );
            self.log( strMsg );
            print( strMsg );
            return;

        self.bStarted = True;

        strRet = naolibrary.xarLoader.prepare( self.strBehaviorName );
        
        # get parameters from box parameters
        listBoxParams = self.getParametersList();
        allParams = [];
        for param_name in listBoxParams:
            if( param_name.find( "NaoLibrary-Launcher" ) == -1 ):
                allParams.append( [param_name, self.getParameter( param_name ) ] );
        
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Params( self.strBehaviorName ), allParams );
        
        # add value from box input data
        ALMemory.insertData( naolibrary.xarLoader.getVarName_InputData( self.strBehaviorName ), inputData );        
        
        ALMemory.subscribeToMicroEvent( naolibrary.xarLoader.getVarName_Intermediary( self.strBehaviorName ), self.getName(), "", "myDataChangedIntermediary" );        
        strRet = naolibrary.xarLoader.launch( self.strBehaviorName, rTimeOutInSec = self.getParameter("NaoLibrary-Launcher_timeout") );
        self.log( "%s: runBehavior return '%s'" % ( self.boxName, str( strRet ) ) );        
        try:
            retValCancel = ALMemory.getData( naolibrary.xarLoader.getVarName_Cancel( self.strBehaviorName ) );
            if( retValCancel ):
                self.bStarted = False;
                self.onStopped();
                return;
            retVal = ALMemory.getData( naolibrary.xarLoader.getVarName_Results( self.strBehaviorName ) );
        except:
            self.log( "%s: WARNING: no return value ? (BeName: '%s')" % ( self.boxName, strBeName ) );
            retVal = [];
        ALMemory.unsubscribeToMicroEvent( naolibrary.xarLoader.getVarName_Intermediary( self.strBehaviorName ), self.getName() );
        self.output_results( retVal );
        self.bStarted = False;        
        self.onStopped();

    def onInput_onStop(self):
        if( self.bStarted ):
            strBeName = self.strBehaviorName;
            self.log( "%s: %s: stopping '%s'" % ( self.boxName, str( time.time() ), strBeName ) );        
            naolibrary.xarLoader.stop( self.strBehaviorName );
            self.log( "%s: %s: '%s' stopped" % ( self.boxName, str( time.time() ), strBeName ) );
        
    def myDataChangedIntermediary(self, pDataName, pValue, pMessage):
        print( "%s: intermediary: %s" % ( self.boxName, str( pValue  ) ) );
        self.output_intermediate( pValue );
# NaoLibrary-Launcher - end
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStartWithSpecificBehavior" type="3" type_size="1" nature="1" inner="0" tooltip="Start it with a specific behavior, you should previously post  the parameters manually." id="3" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                    <Output name="output_intermediate" type="0" type_size="1" nature="2" inner="0" tooltip="Output some intermediate information at every moments during the execution of the sub process" id="6" />
                                                                    <Output name="output_results" type="0" type_size="1" nature="2" inner="0" tooltip="Output the final results of the sub process" id="7" />
                                                                    <Parameter name="NaoLibrary-Launcher_timeout" inherits_from_parent="0" content_type="2" value="50" default_value="3600" min="0" max="1e+17" tooltip="A timeout value for executing the underlying behavior.&#x0A;&#x0A;(value in seconds)" id="8" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="100" tooltip="" id="9" />
                                                                </Box>
                                                                <Box name="InitPoseWalk" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="560" y="138">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="toWalk_1" robot="" id="13" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="644" y="408">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-0.617646" />
                                                                                                    <Key frame="43" value="-0.441863" />
                                                                                                    <Key frame="48" value="-0.441863" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="7.46839" />
                                                                                                    <Key frame="43" value="-16" />
                                                                                                    <Key frame="48" value="-15.1198" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="80.858" />
                                                                                                    <Key frame="41" value="97.909" />
                                                                                                    <Key frame="46" value="97.4695" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="18.367" />
                                                                                                    <Key frame="41" value="12.2145" />
                                                                                                    <Key frame="46" value="11.072" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-49.3976" />
                                                                                                    <Key frame="41" value="-83.939" />
                                                                                                    <Key frame="46" value="-83.6753" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-79.6275" />
                                                                                                    <Key frame="41" value="-38.8457" />
                                                                                                    <Key frame="46" value="-38.3184" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="3.68905" />
                                                                                                    <Key frame="41" value="0.612838" />
                                                                                                    <Key frame="46" value="1.0523" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="7.08143" />
                                                                                                    <Key frame="41" value="0.541454" />
                                                                                                    <Key frame="46" value="0.661453" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="77.6108" />
                                                                                                    <Key frame="39" value="87.5426" />
                                                                                                    <Key frame="44" value="87.0152" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-15.0319" />
                                                                                                    <Key frame="39" value="-11.8678" />
                                                                                                    <Key frame="44" value="-12.3951" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="44.295" />
                                                                                                    <Key frame="39" value="77.2544" />
                                                                                                    <Key frame="44" value="76.9908" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="78.9292" />
                                                                                                    <Key frame="39" value="29.0067" />
                                                                                                    <Key frame="44" value="29.0067" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="4.91953" />
                                                                                                    <Key frame="39" value="0.612838" />
                                                                                                    <Key frame="44" value="1.0523" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="15.3614" />
                                                                                                    <Key frame="39" value="7.54143" />
                                                                                                    <Key frame="44" value="7.74143" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-9.57779" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="-0.173379" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="3.51807" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="-0.70073" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-14.2361" />
                                                                                                    <Key frame="40" value="-24.9588" />
                                                                                                    <Key frame="45" value="-24.9588" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="42.6251" />
                                                                                                    <Key frame="40" value="40.0762" />
                                                                                                    <Key frame="45" value="40.6915" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-21.448" />
                                                                                                    <Key frame="40" value="-19.9538" />
                                                                                                    <Key frame="45" value="-19.8659" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-1.75543" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="0.266079" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-1.93121" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="0.353971" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-14.4166" />
                                                                                                    <Key frame="40" value="-25.0515" />
                                                                                                    <Key frame="45" value="-25.0515" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="36.7411" />
                                                                                                    <Key frame="40" value="39.9053" />
                                                                                                    <Key frame="45" value="39.9053" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-16.2576" />
                                                                                                    <Key frame="40" value="-20.1248" />
                                                                                                    <Key frame="45" value="-20.9158" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="3.43018" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="-0.0854875" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="toWalk_2" robot="" id="14" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="645" y="538">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-1.84813" />
                                                                                                    <Key frame="43" value="-0.441863" />
                                                                                                    <Key frame="48" value="-0.441863" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-23.6453" />
                                                                                                    <Key frame="43" value="-16" />
                                                                                                    <Key frame="48" value="-15.1198" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="95.448" />
                                                                                                    <Key frame="41" value="97.909" />
                                                                                                    <Key frame="46" value="97.4695" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="17.5759" />
                                                                                                    <Key frame="41" value="12.2145" />
                                                                                                    <Key frame="46" value="11.072" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-63.8118" />
                                                                                                    <Key frame="41" value="-83.939" />
                                                                                                    <Key frame="46" value="-83.6753" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-66.8832" />
                                                                                                    <Key frame="41" value="-38.8457" />
                                                                                                    <Key frame="46" value="-38.3184" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="2.54646" />
                                                                                                    <Key frame="41" value="0.612838" />
                                                                                                    <Key frame="46" value="1.0523" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="7.28143" />
                                                                                                    <Key frame="41" value="0.541454" />
                                                                                                    <Key frame="46" value="0.661453" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="97.1228" />
                                                                                                    <Key frame="39" value="87.5426" />
                                                                                                    <Key frame="44" value="87.0152" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-10.0221" />
                                                                                                    <Key frame="39" value="-11.8678" />
                                                                                                    <Key frame="44" value="-12.3951" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="72.3325" />
                                                                                                    <Key frame="39" value="77.2544" />
                                                                                                    <Key frame="44" value="76.9908" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="61.6145" />
                                                                                                    <Key frame="39" value="29.0067" />
                                                                                                    <Key frame="44" value="29.0067" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="4.39218" />
                                                                                                    <Key frame="39" value="0.612838" />
                                                                                                    <Key frame="44" value="1.0523" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="15.6214" />
                                                                                                    <Key frame="39" value="7.54143" />
                                                                                                    <Key frame="44" value="7.74143" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-25.1346" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="-0.173379" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="2.72705" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="-0.70073" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-27.244" />
                                                                                                    <Key frame="40" value="-24.9588" />
                                                                                                    <Key frame="45" value="-24.9588" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="51.9416" />
                                                                                                    <Key frame="40" value="40.0762" />
                                                                                                    <Key frame="45" value="40.6915" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-15.9108" />
                                                                                                    <Key frame="40" value="-19.9538" />
                                                                                                    <Key frame="45" value="-19.8659" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-2.01911" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="0.266079" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="2.63916" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="0.353971" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-23.8211" />
                                                                                                    <Key frame="40" value="-25.0515" />
                                                                                                    <Key frame="45" value="-25.0515" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="48.6065" />
                                                                                                    <Key frame="40" value="39.9053" />
                                                                                                    <Key frame="45" value="39.9053" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-15.9939" />
                                                                                                    <Key frame="40" value="-20.1248" />
                                                                                                    <Key frame="45" value="-20.9158" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-0.349163" />
                                                                                                    <Key frame="40" value="0.00240423" />
                                                                                                    <Key frame="45" value="-0.0854875" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="toWalk_3" robot="" id="15" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="646" y="669">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="-8.79158" />
                                                                                                    <Key frame="58" value="-21.0085" />
                                                                                                    <Key frame="80" value="-19.778" />
                                                                                                    <Key frame="104" value="-13.3619" />
                                                                                                    <Key frame="131" value="-0.441863" />
                                                                                                    <Key frame="136" value="-0.617646" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="28.7382" />
                                                                                                    <Key frame="58" value="29.0019" />
                                                                                                    <Key frame="80" value="28.0351" />
                                                                                                    <Key frame="104" value="29.5" />
                                                                                                    <Key frame="131" value="0.524946" />
                                                                                                    <Key frame="136" value="1.66754" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="75.2329" />
                                                                                                    <Key frame="56" value="49.8322" />
                                                                                                    <Key frame="78" value="42.0098" />
                                                                                                    <Key frame="102" value="72.2446" />
                                                                                                    <Key frame="129" value="94.657" />
                                                                                                    <Key frame="134" value="94.3054" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="23.0252" />
                                                                                                    <Key frame="56" value="0.5" />
                                                                                                    <Key frame="78" value="0.5" />
                                                                                                    <Key frame="102" value="13.2692" />
                                                                                                    <Key frame="129" value="11.5114" />
                                                                                                    <Key frame="134" value="10.7204" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="-58.6262" />
                                                                                                    <Key frame="56" value="-10.901" />
                                                                                                    <Key frame="78" value="-5.80326" />
                                                                                                    <Key frame="102" value="-41.6631" />
                                                                                                    <Key frame="129" value="-75.853" />
                                                                                                    <Key frame="134" value="-75.3256" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="-87.9772" />
                                                                                                    <Key frame="56" value="-42.6251" />
                                                                                                    <Key frame="78" value="-55.7209" />
                                                                                                    <Key frame="102" value="-70.6625" />
                                                                                                    <Key frame="129" value="-44.9982" />
                                                                                                    <Key frame="134" value="-44.6466" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="3.1617" />
                                                                                                    <Key frame="56" value="-12" />
                                                                                                    <Key frame="78" value="-28" />
                                                                                                    <Key frame="102" value="-25.2273" />
                                                                                                    <Key frame="129" value="-0.529755" />
                                                                                                    <Key frame="134" value="-0.353971" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="12.4414" />
                                                                                                    <Key frame="56" value="36.8" />
                                                                                                    <Key frame="78" value="30.3" />
                                                                                                    <Key frame="102" value="30.4014" />
                                                                                                    <Key frame="129" value="14.7414" />
                                                                                                    <Key frame="134" value="14.8614" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="70.6674" />
                                                                                                    <Key frame="54" value="52.5617" />
                                                                                                    <Key frame="76" value="54.5832" />
                                                                                                    <Key frame="100" value="82.0054" />
                                                                                                    <Key frame="127" value="89.9156" />
                                                                                                    <Key frame="132" value="89.3004" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-30.0614" />
                                                                                                    <Key frame="54" value="-20.657" />
                                                                                                    <Key frame="76" value="-25.1394" />
                                                                                                    <Key frame="100" value="-24.1726" />
                                                                                                    <Key frame="127" value="-9.14314" />
                                                                                                    <Key frame="132" value="-8.08844" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="57.3909" />
                                                                                                    <Key frame="54" value="27.6835" />
                                                                                                    <Key frame="76" value="26.453" />
                                                                                                    <Key frame="100" value="56.7757" />
                                                                                                    <Key frame="127" value="80.6822" />
                                                                                                    <Key frame="132" value="80.4185" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="78.6655" />
                                                                                                    <Key frame="54" value="25.9305" />
                                                                                                    <Key frame="76" value="47.2882" />
                                                                                                    <Key frame="100" value="77.3471" />
                                                                                                    <Key frame="127" value="36.829" />
                                                                                                    <Key frame="132" value="36.2138" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="8.96255" />
                                                                                                    <Key frame="54" value="2" />
                                                                                                    <Key frame="76" value="15" />
                                                                                                    <Key frame="100" value="16.4333" />
                                                                                                    <Key frame="127" value="0.349163" />
                                                                                                    <Key frame="132" value="0.964405" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="21.6414" />
                                                                                                    <Key frame="54" value="45" />
                                                                                                    <Key frame="76" value="38.8" />
                                                                                                    <Key frame="100" value="28.318" />
                                                                                                    <Key frame="127" value="14.4414" />
                                                                                                    <Key frame="132" value="14.4814" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-38.5821" />
                                                                                                    <Key frame="55" value="-44.9103" />
                                                                                                    <Key frame="77" value="-44.9103" />
                                                                                                    <Key frame="101" value="-22.9373" />
                                                                                                    <Key frame="128" value="0.00240423" />
                                                                                                    <Key frame="133" value="-0.0854875" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-11.2477" />
                                                                                                    <Key frame="55" value="-16.2576" />
                                                                                                    <Key frame="77" value="-16.2576" />
                                                                                                    <Key frame="101" value="3.34229" />
                                                                                                    <Key frame="128" value="0.00240423" />
                                                                                                    <Key frame="133" value="0.00240423" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-37.1758" />
                                                                                                    <Key frame="55" value="-62.9281" />
                                                                                                    <Key frame="77" value="-62.9281" />
                                                                                                    <Key frame="101" value="-54.1389" />
                                                                                                    <Key frame="128" value="-24.9588" />
                                                                                                    <Key frame="133" value="-24.9588" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="63.807" />
                                                                                                    <Key frame="55" value="99.3152" />
                                                                                                    <Key frame="77" value="99.2274" />
                                                                                                    <Key frame="101" value="93.0749" />
                                                                                                    <Key frame="128" value="39.9883" />
                                                                                                    <Key frame="133" value="39.9883" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-12.8346" />
                                                                                                    <Key frame="55" value="-19.9538" />
                                                                                                    <Key frame="77" value="-19.9538" />
                                                                                                    <Key frame="101" value="-36.2138" />
                                                                                                    <Key frame="128" value="-19.8659" />
                                                                                                    <Key frame="133" value="-19.8659" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-1.49176" />
                                                                                                    <Key frame="55" value="0.529755" />
                                                                                                    <Key frame="77" value="0.529755" />
                                                                                                    <Key frame="101" value="-2.28278" />
                                                                                                    <Key frame="128" value="-0.0854875" />
                                                                                                    <Key frame="133" value="-0.0854875" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-0.349163" />
                                                                                                    <Key frame="55" value="6.50639" />
                                                                                                    <Key frame="77" value="6.59428" />
                                                                                                    <Key frame="101" value="11.2525" />
                                                                                                    <Key frame="128" value="0.00240423" />
                                                                                                    <Key frame="133" value="0.00240423" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-51.7706" />
                                                                                                    <Key frame="55" value="-67.5033" />
                                                                                                    <Key frame="77" value="-67.5033" />
                                                                                                    <Key frame="101" value="-46.9366" />
                                                                                                    <Key frame="128" value="-24.8758" />
                                                                                                    <Key frame="133" value="-24.9637" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="82.7964" />
                                                                                                    <Key frame="55" value="120.941" />
                                                                                                    <Key frame="77" value="120.941" />
                                                                                                    <Key frame="101" value="88.1578" />
                                                                                                    <Key frame="128" value="40.081" />
                                                                                                    <Key frame="133" value="40.081" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-26.8925" />
                                                                                                    <Key frame="55" value="-49.7443" />
                                                                                                    <Key frame="77" value="-49.7443" />
                                                                                                    <Key frame="101" value="-38.4063" />
                                                                                                    <Key frame="128" value="-20.0369" />
                                                                                                    <Key frame="133" value="-20.2127" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="26" value="-4.91953" />
                                                                                                    <Key frame="55" value="-9.75358" />
                                                                                                    <Key frame="77" value="-9.66569" />
                                                                                                    <Key frame="101" value="-5.79845" />
                                                                                                    <Key frame="128" value="0.00240423" />
                                                                                                    <Key frame="133" value="0.00240423" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Dispatcher" robot="" id="1" tooltip="Dispatch an event carrying an information, depending on the information value. The information will be tested against all the values of the table, and the matching output will be stimulated!" bitmap_expanded="1" plugin="dispatcher_plugin" x="315" y="355">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		else:
			self.onDefault()]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <keywords>
                                                                                                <keyword>0</keyword>
                                                                                                <keyword>1</keyword>
                                                                                                <keyword>2</keyword>
                                                                                                <keyword></keyword>
                                                                                            </keywords>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                    </Box>
                                                                                    <Box name="Random Int." robot="" id="2" tooltip="Generate a random integer between 0 and a max number set as parameter.&#x0A;Note that the max number is excluded from the range of possible integers." bitmap_expanded="1" plugin="" x="237" y="147">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max")
        if(self.getParameter("Shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Generates a random integer." id="2" />
                                                                                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                        <Parameter name="Max" inherits_from_parent="0" content_type="1" value="3" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max, excluding max!" id="4" />
                                                                                        <Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between 0 and max before giving the same number twice." id="5" />
                                                                                    </Box>
                                                                                    <Box name="End" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="845" y="61">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Box name="IsAlreadyInWalkPoseOrNotFirstTime" robot="" id="4" tooltip="cf the box title" bitmap_expanded="1" plugin="" x="64" y="63">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.bAlreadyDone = False;        

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # enter here your specific position, to know the current position of Nao, launch RecordPose_ref and copy paste the code in the log window, you can erase joint or inertial that you don't want to compare.
        if( self.bAlreadyDone ):
            self.output_yes();
            return;
        self.bAlreadyDone = True;
        
        specificPosition = {
    'LAnklePitch': -0.349793970585,
    'LAnkleRoll': 0.00464396178722,
    'LElbowRoll': -0.673384070396,
    'LElbowYaw': -1.45734202862,
    'LHand': 0.0178446080536,
    'LHipPitch': -0.438682049513,
    'LHipRoll': -0.0106960386038,
    'LHipYawPitch': -0.00302603840828,
    'LKneePitch': 0.708666086197,
    'LShoulderPitch': 1.69809603691,
    'LShoulderRoll': 0.188640043139,
    'LWristYaw': 0.0229680389166,
    'RAnklePitch': -0.363516032696,
    'RAnkleRoll': -0.00149203836918,
    'RElbowRoll': 0.512398004532,
    'RElbowYaw': 1.34220802784,
    'RHand': 0.136753320694,
    'RHipPitch': -0.435697972775,
    'RHipRoll': 0.00464396178722,
    'RKneePitch': 0.6995459795,
    'RShoulderPitch': 1.52483797073,
    'RShoulderRoll': -0.200995966792,
    'RWristYaw': 0.0183660387993,
        };    
        
        # specify the threshold you want here
        rThreshold = 0.1;
        
        # specify here chain that you want to ignore (easier to remove all chain in one shot)
        aListToIgnore = [];
#        aListToIgnore = ['Head'];
        aListToIgnore = ['Head', 'Arms'];
        
        rValDiff = altools.PoseLibrary.comparePosition( specificPosition, aListToIgnore );
        print( "%s: %f" % (self.boxName, rValDiff ) );
        if( rValDiff < rThreshold ):
            self.output_yes()
        else:
            self.output_no();]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="13" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                                    <Link inputowner="13" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="14" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="15" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="15" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="6" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="775" y="288">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("StartWalking")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>StartWalking</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Stiffness" robot="" id="13" tooltip="When onStart is stimulated, the stiffness of the selected parts (see parameters) is set to the Max stiffness value that may be set in the parameters.&#x0A;When onStop is stimulated, it uses the Min stiffness value.&#x0A;&#x0A;Note: you can also set the duration of the transition." bitmap_expanded="1" plugin="" x="168" y="9">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def setStiffness(self, stiffness):
        duration = self.getParameter("Duration")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)

    def onInput_onStart(self):
        self.setStiffness(self.getParameter("Max stiffness"))
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.setStiffness(self.getParameter("Min stiffness"))
        self.onStopped() #~ activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="Min stiffness" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="1" tooltip="What stiffness do we want to set when onStop is stimulated." id="5" />
                                                                    <Parameter name="Max stiffness" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="1" tooltip="What stiffness do we want to set when onStart is stimulated." id="6" />
                                                                    <Parameter name="Duration" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to we leave the robot to go to the correct stiffness. (in seconds)" id="7" />
                                                                    <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="8" />
                                                                    <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="9" />
                                                                    <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="10" />
                                                                    <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="11" />
                                                                    <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="12" />
                                                                </Box>
                                                                <Box name="SetAutoWhiteBalance" robot="" id="14" tooltip="Lock or unlock auto white balancy, then restore it.&#x0A;&#x0A;v0.9" bitmap_expanded="1" plugin="" x="73" y="266">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# SetAutoWhiteBalance
# v0.9
import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.video = ALProxy( "ALVideoDevice" );

    def onLoad(self):
        #~ puts code for box initialization here
        self.bInitParam = self.video.getParam( altools.cameradef.AutoWhiteBalanceID );

    def onUnload(self):
        self.onInput_onStop();
        pass

    def onInput_onStart(self):
        bEnableIt = self.getParameter("bEnableIt");
        self.log( "%s: set to %d" % ( self.boxName, bEnableIt ) );
        self.video.setParam( altools.cameradef.AutoWhiteBalanceID, int( bEnableIt ) );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.log( "%s: restore to %d" % ( self.boxName, self.bInitParam ) );    
        self.video.setParam( altools.cameradef.AutoWhiteBalanceID, self.bInitParam );
        
# SetAutoWhiteBalance - end
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="bEnableIt" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Set true to have auto white balance, false to remove it" id="5" />
                                                                </Box>
                                                                <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="5" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="8" indexofoutput="6" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="7" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="3" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="6" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="FindAnObjective" index="20" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="GotoMenu" robot="" id="1" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="379" y="92">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(40)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>40</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="2" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="521" y="92">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.getName(), int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="WalkAndExploreALittle" index="40" bitmap="">
                                                            <Diagram scale="100">
                                                                <Box name="WalkAndDodge_ref" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="187" y="261">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_somethingAtLeft" type="1" type_size="1" nature="2" inner="0" tooltip="Output info, so we can decide to look at the obstacles" id="5" />
                                                                    <Output name="output_somethingAtCenter" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Output name="output_somethingAtRight" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                    <Output name="output_blocked" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Output name="output_video_crash" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                    <Parameter name="bUseSonar" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="" id="10" />
                                                                    <Parameter name="bUseBumpers" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="11" />
                                                                    <Parameter name="bEnableSound" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="12" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="67">
                                                                                    <Box name="ChangeCamera" robot="" id="1" tooltip="Change the currently used camera.&#x0A;*** ref box in: ./4_localize/ChangeCamera/ExampleChangeCamera.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="112" y="213">
                                                                                        <bitmap>media/images/box/interaction/look.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self),
        self.kCameraSelectID = 18;
        self.cameraModule = ALProxy( "ALVideoDevice" ); # "ALVideoDevice"

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onUseTopCamera(self):
        #~ self.log( self.boxName + ": Use Top Camera" );
        self.cameraModule.setParam( self.kCameraSelectID, 0 );
        self.output_Finished();

    def onInput_onUseBottomCamera(self):
        #~ self.log( self.boxName + ": Use Bottom Camera" );    
        self.cameraModule.setParam( self.kCameraSelectID, 1 );
        self.output_Finished();]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onUseTopCamera" type="1" type_size="1" nature="1" inner="0" tooltip="use the camera at the top of the head (forehead)" id="2" />
                                                                                        <Input name="onUseBottomCamera" type="1" type_size="1" nature="1" inner="0" tooltip="Use the camera at the bottom of the head (mouth)" id="3" />
                                                                                        <Output name="output_Finished" type="1" type_size="1" nature="1" inner="0" tooltip="The change is finished." id="4" />
                                                                                    </Box>
                                                                                    <Box name="SetHeadPos - and hand" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="127" y="101">
                                                                                        <bitmap>media/images/box/interaction/face.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALMotion.angleInterpolationWithSpeed( ['HeadPitch','HeadYaw'], [0.375, 0.], 0.1 );
        # hand position
        ALMotion.post.angleInterpolationWithSpeed( ['RHand','LHand'], [0.47, 0.47], 0.1 );        
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Box name="Sonar" robot="" id="3" tooltip="activates ALUltrasound extractor. Selects the right output. You can change the parameters in the script:&#x0A;- @period: period of acquisition of ultrasound devices. (in miliseconds) &#x0A;- @threshold_nothing: if both distances are more than this value, nothing will be activated. (in meters) &#x0A;- @threshold_obstacle: threshold for the detection of an obstacle. &#x0A;if one or both distances are below this value, an obstacle will be detected. The relevant output will be activated. (in meters)" bitmap_expanded="1" plugin="" x="136" y="675">
                                                                                        <bitmap>media/images/box/sensors/ultrasound.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Behavior is finished" id="4" />
                                                                                        <Output name="onNothingLeft" type="1" type_size="1" nature="2" inner="0" tooltip="No obstacle." id="5" />
                                                                                        <Output name="onNothingRight" type="1" type_size="1" nature="2" inner="0" tooltip="onNothingRight" id="6" />
                                                                                        <Output name="onObstacle" type="3" type_size="1" nature="2" inner="0" tooltip="An obstacle has been detected. Output can be set to : &apos;left&apos; or &apos;right&apos;." id="7" />
                                                                                        <Parameter name="bUseSonar" inherits_from_parent="1" content_type="0" value="0" default_value="1" tooltip="" id="8" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Sonar" robot="" id="1" tooltip="activates ALUltrasound extractor. Selects the right output. You can change the parameters in the script: - @period: period of acquisition of ultrasound devices. (in miliseconds) - @threshold_nothing: if both distances are more than this value, nothing will be activated. (in meters) - @threshold_obstacle: threshold for the detection of an obstacle. if one or both distances are below this value, an obstacle will be detected. The relevant output will be activated. (in meters)" bitmap_expanded="1" plugin="" x="102" y="65">
                                                                                                            <bitmap>media/images/box/sensors/ultrasound.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.gotoAndStop(1)
        pass

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Input name="SonarNothingDetected" type="0" type_size="1" nature="4" stm_value_name="SonarNothingDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                                                            <Input name="SonarLeftDetected" type="0" type_size="1" nature="4" stm_value_name="SonarLeftDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                                                                            <Input name="SonarRightDetected" type="0" type_size="1" nature="4" stm_value_name="SonarRightDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                                                                            <Input name="SonarLeftNothingDetected" type="0" type_size="1" nature="4" stm_value_name="SonarLeftNothingDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="7" />
                                                                                                            <Input name="SonarRightNothingDetected" type="0" type_size="1" nature="4" stm_value_name="SonarRightNothingDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="8" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Behavior is finished" id="9" />
                                                                                                            <Output name="nothingLeft" type="1" type_size="1" nature="2" inner="0" tooltip="nothingLeft" id="10" />
                                                                                                            <Output name="left" type="2" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                                                            <Output name="right" type="2" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                                                            <Output name="nothingRight" type="1" type_size="1" nature="2" inner="0" tooltip="nothingLeft" id="13" />
                                                                                                            <Parameter name="bUseSonar" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="14" />
                                                                                                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                                        <Diagram scale="-1">
                                                                                                                            <Box name="DisableIt" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="184" y="4">
                                                                                                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        if( not self.getParameter( 'bUseSonar' ) ):
            self.onDisableIt() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onDisableIt" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="0" indexofinput="11" outputowner="0" indexofoutput="5" />
                                                                                                                            <Link inputowner="0" indexofinput="12" outputowner="0" indexofoutput="6" />
                                                                                                                            <Link inputowner="0" indexofinput="10" outputowner="0" indexofoutput="7" />
                                                                                                                            <Link inputowner="0" indexofinput="13" outputowner="0" indexofoutput="8" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="0" indexofinput="9" outputowner="1" indexofoutput="4" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                                <ActuatorList />
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="toString" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="329" y="205">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass

    def onInput_left(self):
        self.StringOutput("left")

    def onInput_right(self):
        self.StringOutput("right")]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="left" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                                                            <Input name="right" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                                            <Output name="StringOutput" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="7" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="11" />
                                                                                                        <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="12" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="13" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="FusionObstacles_ref" robot="" id="4" tooltip="Use sonar, bumper and vision to detect obstacles.&#x0A;output distance matrix containing 11 distances (left to right)." bitmap_expanded="1" plugin="" x="332" y="277">
                                                                                        <bitmap>media/images/box/icons_appu/obstacles.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_distances_matrix" type="2" type_size="11" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Parameter name="bEnableSound" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="6" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectObstaclesUS_ref" robot="" id="1" tooltip="Detect objectacles near using ultrasound" bitmap_expanded="1" plugin="" x="118" y="124">
                                                                                                            <bitmap>media/images/box/sensors/ultrasound.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Behavior is finished" id="4" />
                                                                                                            <Output name="output_obstacles" type="2" type_size="2" nature="2" inner="0" tooltip="No obstacle." id="5" />
                                                                                                            <Output name="output_nothing" type="1" type_size="1" nature="2" inner="0" tooltip="onNothingRight" id="6" />
                                                                                                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                                        <Diagram scale="-1">
                                                                                                                            <Box name="Just Here to launch the extractors" robot="" id="1" tooltip="activates ALUltrasound extractor. Selects the right output. You can change the parameters in the script: - @period: period of acquisition of ultrasound devices. (in miliseconds) - @threshold_nothing: if both distances are more than this value, nothing will be activated. (in meters) - @threshold_obstacle: threshold for the detection of an obstacle. if one or both distances are below this value, an obstacle will be detected. The relevant output will be activated. (in meters)" bitmap_expanded="1" plugin="" x="88" y="201">
                                                                                                                                <bitmap>media/images/box/sensors/ultrasound.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.gotoAndStop(1)
        pass

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()
        pass]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                                                <Input name="SonarNothingDetected" type="0" type_size="1" nature="4" stm_value_name="SonarNothingDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                                                                                <Input name="SonarLeftDetected" type="0" type_size="1" nature="4" stm_value_name="SonarLeftDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                                                                                                <Input name="SonarRightDetected" type="0" type_size="1" nature="4" stm_value_name="SonarRightDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                                                                                                <Input name="SonarLeftNothingDetected" type="0" type_size="1" nature="4" stm_value_name="SonarLeftNothingDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="7" />
                                                                                                                                <Input name="SonarRightNothingDetected" type="0" type_size="1" nature="4" stm_value_name="SonarRightNothingDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="8" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Behavior is finished" id="9" />
                                                                                                                                <Output name="nothingLeft" type="1" type_size="1" nature="2" inner="0" tooltip="nothingLeft" id="10" />
                                                                                                                                <Output name="left" type="2" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                                                                                <Output name="right" type="2" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                                                                                <Output name="nothingRight" type="1" type_size="1" nature="2" inner="0" tooltip="nothingLeft" id="13" />
                                                                                                                                <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                                                                    <watches />
                                                                                                                                    <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                                                        <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                                                            <Diagram scale="-1">
                                                                                                                                                <Link inputowner="0" indexofinput="11" outputowner="0" indexofoutput="5" />
                                                                                                                                                <Link inputowner="0" indexofinput="12" outputowner="0" indexofoutput="6" />
                                                                                                                                                <Link inputowner="0" indexofinput="10" outputowner="0" indexofoutput="7" />
                                                                                                                                                <Link inputowner="0" indexofinput="13" outputowner="0" indexofoutput="8" />
                                                                                                                                            </Diagram>
                                                                                                                                        </BehaviorKeyframe>
                                                                                                                                    </BehaviorLayer>
                                                                                                                                    <ActuatorList />
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="DetectObstacleUS_Loop" robot="" id="2" tooltip="detect les obstacles mais attention l&apos;extraceur n&apos;est pas lancé par cette boite (d&apos;ou la boite connexe)" bitmap_expanded="1" plugin="" x="144" y="38">
                                                                                                                                <bitmap>media/images/box/loop.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[# DetectObstacleUS
# v0.81
import time
class MyClass(GeneratedClass):
    """ insert here your comments about this class """
    def __init__(self):
        GeneratedClass.__init__(self);
        self.BIND_PYTHON( self.getName(),"myDataChanged" );
        
    def onLoad(self):
        self.bMustStop = False;
        self.bIsRunning = False;
        self.rDistPrevL = 1.;
        self.rDistPrevR = 1.;

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        self.log( self.boxName + ": start - begin" );
        
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" );
            return;

        self.bIsRunning = True;
        self.bMustStop = False;
        
        rPeriod = self.getParameter( 'rPeriod' );
        rThreshold = self.getParameter( 'rThreshold' );        
        strTemplate = 'Device/SubDeviceList/US/%s/Sensor/Value';
        aListVarUS = [ strTemplate % 'Left', strTemplate % 'Right' ];
        ALMemory.subscribeToMicroEvent( 'SonarMiddleDetected', self.getName(), "", "myDataChanged" ); # just to launch the sonar extractor (but it doesn't work !!!)
        # we post a big value, so when Ultrasound doesn't work, they stop triggering...
        ALMemory.insertData( strTemplate % 'Left', 2.55 );
        ALMemory.insertData( strTemplate % 'Right', 2.55 );
        bFuckedUS = False;
        while( not self.bMustStop ):
            rDistL, rDistR = ALMemory.getListData( aListVarUS );
            self.rDistPrevL = ( self.rDistPrevL + rDistL ) / 2.;
            self.rDistPrevR = ( self.rDistPrevR + rDistR ) / 2.;
            self.log( "%s: %5.2f, %5.2f => %5.2f, %5.2f" % ( self.boxName, rDistL, rDistR, self.rDistPrevL, self.rDistPrevR ) );
            if( self.rDistPrevL < rThreshold or self.rDistPrevR < rThreshold ): # or ou and, it depends if you want fake positif or false negative...
                self.output_obstacles( [ self.rDistPrevL, self.rDistPrevR ] );
            else:
                self.output_nothing();
            if( self.rDistPrevL > 2.5499 and self.rDistPrevR > 2.5499 and not bFuckedUS ):
                bFuckedUS = True;
                self.output_us_is_fucked();
            time.sleep( rPeriod );
        # end while
        ALMemory.unsubscribeToMicroEvent( 'SonarNothingDetected', self.getName() );        
        self.bIsRunning = False;
        self.onStopped();    
        self.log( self.boxName + ": start - end" ); 

    def onInput_onStop(self):
        self.bMustStop = True; # stop current loop execution
        
    def myDataChanged(self, pDataName, pValue, pMessage):
        self.log( "%s: %s: %s" % ( self.boxName, pDataName, str( pValue ) ) );
        pass]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Output name="output_obstacles" type="2" type_size="2" nature="2" inner="0" tooltip="" id="5" />
                                                                                                                                <Output name="output_nothing" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                                                                                <Output name="output_us_is_fucked" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                                                                                <Parameter name="rPeriod" inherits_from_parent="0" content_type="2" value="0.5" default_value="1" min="0" max="100000" tooltip="period in seconds" id="8" />
                                                                                                                                <Parameter name="rThreshold" inherits_from_parent="0" content_type="2" value="0.31" default_value="0.4" min="0" max="3" tooltip="obstacles detection threshold in meters" id="9" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Enter name here" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="280" y="175">
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = "Warning: my Sonar doesn't work!"
		sFrench = "Attention: mes sonars ne marchent pas!"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <english>Warning: my Sonar doesn&apos;t work!</english>
                                                                                                                                    <french>Attention: mes sonars ne marchent pas!</french>
                                                                                                                                    <spanish></spanish>
                                                                                                                                    <italian></italian>
                                                                                                                                    <german></german>
                                                                                                                                    <chinese></chinese>
                                                                                                                                    <polish></polish>
                                                                                                                                    <korean></korean>
                                                                                                                                    <language>1</language>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="SayTextPrerender_p" robot="" id="4" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.02" bitmap_expanded="1" plugin="" x="542" y="175">
                                                                                                                                <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[# SayTextPrerender - v1.02
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        self.nStep = self.nStateInit;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;
#        txt = "\\RSPD=85\\ " + altools.transformAsciiAccentForSynthesis( p ); # not usefull now!
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        if( not self.getParameter( 'bJustPrepare' ) ):
            self.nStep = self.nStateSpeaking;
            self.output_onStartSpeaking();
            if( self.getParameter( "bWithLight" ) ):
                altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
            else:
                altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.nStep = self.nStateStopped;
        self.output_onStopSpeaking();
        
    def onInput_onStop(self):
        while( self.nStep == self.nStatePreparing ): # can't kill while preparing
            time.sleep( 0.2 );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                                                                                                <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="5" />
                                                                                                                                <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="6" />
                                                                                                                                <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="7" />
                                                                                                                                <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="8" />
                                                                                                                                <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="9" />
                                                                                                                                <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="10" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="0" indexofinput="6" outputowner="2" indexofoutput="6" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                                <ActuatorList />
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="DetectArmsObstacles" robot="" id="2" tooltip="Test de detection des bras qui touchent des obstacles pendant qu&apos;on marchent" bitmap_expanded="1" plugin="" x="118" y="252">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time
class MyClass(GeneratedClass):
    """ insert here your comments about this class """
    def __init__(self):
        GeneratedClass.__init__(self);
        self.bMustStop = False;
        self.bIsRunning = False;
        self.aJointMove = [ 
                                    altools.JointMove( "LShoulderRoll" ), altools.JointMove( "RShoulderRoll" ),
                                    altools.JointMove( "LElbowRoll" ), altools.JointMove( "RElbowRoll" )                                     
                                    ];

    def onLoad(self):
        self.bMustStop = False;
        self.bIsRunning = False;

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        self.log( self.boxName + ": start - begin" );
        
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" );
            return;

        ALMotion.setStiffnesses( ["LShoulderRoll", "RShoulderRoll"], 0.12, 0.05 );
#        ALMotion.setStiffnesses( [ "LShoulderPitch", "RShoulderPitch" ], 0.05, 0.05 );
        ALMotion.setStiffnesses( [ "LElbowRoll", "RElbowRoll" ], 0.04, 0.05 );        

        self.bIsRunning = True;
        self.bMustStop = False;
        
        rPeriod = self.getParameter( 'rPeriod' );
        nNbrJoint = len( self.aJointMove );
        nNbrOutput = 2; # we concatene side by side
        abTouch = altools.arrayCreate( nNbrOutput, False );
        while( not self.bMustStop ):
            bTouch = False;
            for i in range( nNbrJoint ):
                if( self.aJointMove[i].update() != 0 ):
                    abTouch[i%2] = True;
                    bTouch = True;                    
                else:
                    if( i < 2 ):
                        abTouch[i%2] = False;
                    else:
                        abTouch[i%2] |= False;                    
            if( bTouch ):
                self.output_touched( abTouch );
            time.sleep( rPeriod );
        # end while
        self.bIsRunning = False;
        self.onStopped();    
        self.log( self.boxName + ": start - end" ); 

    def onInput_onStop(self):
        self.bMustStop = True; # stop current loop execution]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Output name="output_touched" type="2" type_size="2" nature="2" inner="0" tooltip="Some arms has touched something [left touched, right touched]" id="5" />
                                                                                                            <Parameter name="rPeriod" inherits_from_parent="0" content_type="2" value="0.14" default_value="1" min="0" max="1e+06" tooltip="period in seconds" id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="ExtractObstacles_ref" robot="" id="3" tooltip="Detect obstacles" bitmap_expanded="1" plugin="" x="301" y="75">
                                                                                                            <bitmap>media/images/box/interaction/look.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.extractor = ALProxy("UsageVisionObstacle");
        self.strALMemoryValRoot =  "extractors/UsageVisionObstacle/";
        self.astrALMemoryVal = [ "distances_matrix" ];
        self.bSoundDirectPlay = True;
        self.BIND_PYTHON( self.getName(),"myDataChanged" );
        self.BIND_PYTHON( self.getName(),"myDataChangedBumper" );
            
    def onLoad(self):
        self.bIsRunning = False;
        self.bDebugMode = False;
        self.nBumperCpt = 0; # frame emulating bumpers obstacles
        self.arBumperDistance = [ 0,0 ]; # the real distance emulated for bumpers (L,R)
        self.nUS_Cpt = 0;
        self.arUS_Distance = [ 0,0 ];  # an init value
        
        self.nArmsCpt = 0;         # arms detection
        self.arArmsDistance = [ 0,0 ];  # an init value
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self ):
        rPeriod = self.getParameter( "refreshPeriodMs" );
        if( self.bIsRunning == False ):
            self.bIsRunning = True;
            self.extractor.subscribe(self.getName(),  rPeriod, 0.0 )
            # on a plus besoin de se registrer vu que c'est fait dans le module directement
            for val in self.astrALMemoryVal:
                strTotalName = self.strALMemoryValRoot + val;
                ALMemory.subscribeToMicroEvent(strTotalName, self.getName(), val, "myDataChanged") # set to "subscribeOnData" if you want to trigger output_NoMark after every analyses without mark
#                ALMemory.subscribeOnDataSetTimePolicy(strTotalName, self.getName(),rPeriod/2)

            if( self.getParameter( 'bUseBumpers' ) ):
                ALMemory.subscribeToMicroEvent( 'LeftBumperPressed', self.getName(), "L", "myDataChangedBumper" );
                ALMemory.subscribeToMicroEvent( 'RightBumperPressed', self.getName(), "R", "myDataChangedBumper" );
                
            self.log("%s detection: on" % self.boxName );
        
    def onInput_onStop(self):
        if(self.bIsRunning == True):
            self.bIsRunning = False    
            self.extractor.unsubscribe(self.getName())
            for val in self.astrALMemoryVal:
                strTotalName = self.strALMemoryValRoot + val;
                ALMemory.unsubscribeToMicroEvent(strTotalName, self.getName())
            if( self.getParameter( 'bUseBumpers' ) ):
                ALMemory.unsubscribeToMicroEvent( 'LeftBumperPressed', self.getName() );
                ALMemory.unsubscribeToMicroEvent( 'RightBumperPressed', self.getName() );
                
            self.log("%s detection: off" % self.boxName );
            self.onStopped();
            
    def onInput_onSetDebugMode(self ):
        self.bDebugMode = not self.bDebugMode;
        self.extractor.setDebugMode( self.bDebugMode );
        if( self.bDebugMode ):
            try:
                cv = ALProxy( 'CameraViewer' );
                cv.subscribeLog( "obstacle_distances" );
            except:
                self.log( "WARNING: no telepathe found !!!" );
        
    def onInput_onUS(self, p):
        self.log( "%s: onInput_onUS" % self.boxName );
        if( self.getParameter( 'bUseSonar' ) ):
            ALLeds.post.fadeListRGB( "ChestLeds", [0xFF, 0x00], [0.2,1.5] );
            if( self.getParameter( 'bEnableSound' ) ):
                altools.playSound( 'bipReco2.wav', bWait = False, bDirectPlay = self.bSoundDirectPlay );
            self.nUS_Cpt = 1000 / self.getParameter( "refreshPeriodMs" ); # 3000: temps de l'emulation en ms
            for i in range( 2 ):
                if( p[i] < 0.33 ):
                    self.arUS_Distance[i] = p[i]*100;
                else:
                    self.arUS_Distance[i] = 400;
    # onInput_onUS - end
    
    def onInput_onArmsTouch(self, p):
        if( self.getParameter( 'bEnableSound' ) ):
            altools.playSound( 'bipReco8.wav', bWait = False, bDirectPlay = self.bSoundDirectPlay );
        self.nArmsCpt = 2000 / self.getParameter( "refreshPeriodMs" );
        for i in range( 2 ):
            if( p[i] ):
                self.arArmsDistance[i] = 13;
            else:
                self.arArmsDistance[i] = 1000;
    # onInput_onArmsTouch - end

    def myDataChangedBumper(self, pDataName, pValue, pMessage):
            if( pValue ):
                # we will have some frame emulating an obstacle
                self.log( "BUMPER!" );
                if( pMessage == 'L' ):
                    strLedName = "LeftFootLeds";
                    self.arBumperDistance[0] = 30;
                else:
                    strLedName = "RightFootLeds";
                    self.arBumperDistance[1] = 30;
                ALLeds.post.fadeListRGB( strLedName, [0xFF, 0x00], [0.2,1.5] );
                if( self.getParameter( 'bEnableSound' ) ):    
                    altools.playSound( 'bipReco9.wav', bWait = False, bDirectPlay = self.bSoundDirectPlay );
                self.nBumperCpt = 3000 / self.getParameter( "refreshPeriodMs" );
      
    def myDataChanged(self, pDataName, pValue, pMessage):
#        self.log( "%s::myDataChanged: pDataName: %s, pValue: %s, pMessage: %s" % ( self.boxName, pDataName, pValue, pMessage ) );
        outputFunc = getattr( self, "output_" + pMessage );
#        bBumpL, bBumpR = ALMemory.getListData( ['LeftBumperPressed', 'RightBumperPressed'] );
        nIdxCenter = 5;
        nIdxStepL = 0;
        nIdxStepR = 10;        
        if( pMessage[0] == 'd' ):

            if( self.nUS_Cpt > 0 ):
                self.nUS_Cpt -= 1;
                self.log( "CPT US TOUCH: %f (%f,%f)" % ( self.nUS_Cpt, self.arUS_Distance[0], self.arUS_Distance[1] ) );
                # on éparpille la proba des ultrasons autour du centre
                rCoefAlentour = 1.5; # coef de dispertion
                if( self.arUS_Distance[0] < 100 ):
                    pValue[nIdxStepL] = min( pValue[nIdxStepL], 200 );
                pValue[nIdxCenter-3] = min( pValue[nIdxCenter-3], self.arUS_Distance[0] * rCoefAlentour );
                pValue[nIdxCenter-2] = min( pValue[nIdxCenter-2], self.arUS_Distance[0] );
                pValue[nIdxCenter-1] = min( pValue[nIdxCenter-1], self.arUS_Distance[0] );
                pValue[nIdxCenter+0] = min( pValue[nIdxCenter+0], ( self.arUS_Distance[0] + self.arUS_Distance[1] ) / 2.  );
                pValue[nIdxCenter+1] = min( pValue[nIdxCenter+1], self.arUS_Distance[1] );
                pValue[nIdxCenter+2] = min( pValue[nIdxCenter+2], self.arUS_Distance[1] );
                pValue[nIdxCenter+3] = min( pValue[nIdxCenter+3], self.arUS_Distance[1] * rCoefAlentour );
                if( self.arUS_Distance[1] < 100 ):
                    pValue[nIdxStepR] = min( pValue[nIdxStepR], 200 );
                
            if( self.nBumperCpt > 0 ):
                self.nBumperCpt -= 1;
                self.log( "CPT BUMP TOUCH: %f" % self.nBumperCpt );
                rCoefAlentour = 1.5; # coef de dispertion
                pValue[nIdxCenter-2] = min( pValue[nIdxCenter-2], self.arBumperDistance[0] * rCoefAlentour );
                pValue[nIdxCenter-1] = min( pValue[nIdxCenter-1], self.arBumperDistance[0] );
                pValue[nIdxCenter+0] = min( pValue[nIdxCenter+0], ( self.arBumperDistance[0] + self.arBumperDistance[1] ) / 2.  );
                pValue[nIdxCenter+1] = min( pValue[nIdxCenter+1], self.arBumperDistance[1] );
                pValue[nIdxCenter+2] = min( pValue[nIdxCenter+2], self.arBumperDistance[1] * rCoefAlentour  );
                if( self.nBumperCpt <= 0 ):
                    # reset
                    self.arBumperDistance[0] = 999.;
                    self.arBumperDistance[1] = 999.;

            if( self.nArmsCpt > 0 ):
                self.nArmsCpt -= 1;
                self.log( "CPT ARMS TOUCH: %f" % self.nArmsCpt );
                # dans le doute on bloque step et avant
                pValue[nIdxStepL] = min( pValue[nIdxStepL], self.arArmsDistance[0] );
                pValue[nIdxStepR] = min( pValue[nIdxStepR], self.arArmsDistance[1] );
                pValue[nIdxCenter-1] = min( pValue[nIdxCenter-1], self.arArmsDistance[0] );
                pValue[nIdxCenter+1] = min( pValue[nIdxCenter+1], self.arArmsDistance[1] );
                    
            #~ if( self.nCptInhibeStraight ):
                #~ self.log( "INIHIBATE STRAIGHT: %d" %  self.nCptInhibeStraight );
                #~ self.nCptInhibeStraight -= 1;
                #~ pValue[nIdxCenter-1] = 0;
                #~ pValue[nIdxCenter] = 0;
                #~ pValue[nIdxCenter+1] = 0;
                        
            
            # output has params:
            outputFunc( pValue );
            nLimit = 999;
            #~ if( pValue[nIdxCenter-3] < nLimit ):
                #~ self.output_dist_ll( pValue[nIdxCenter-3] );
            #~ if( pValue[nIdxCenter-2] < nLimit ):                
                #~ self.output_dist_l( pValue[nIdxCenter-2] );
            #~ if( pValue[nIdxCenter] < nLimit ):                
                #~ self.output_dist_c( pValue[nIdxCenter] );
            #~ if( pValue[nIdxCenter+2] < nLimit ):                
                #~ self.output_dist_r( pValue[nIdxCenter+2] );
            #~ if( pValue[nIdxCenter+3] < nLimit ):                
                #~ self.output_dist_rr( pValue[nIdxCenter+3] );
                
            self.log( "%s:results matrix: %s" % ( self.boxName, pValue ) );
            if( self.bDebugMode ):
                # poste dans les débugs dans télépathe
                aListDir = [ 
                                -2,  0, # TODO: update depuis les sources cpp qui ont changé
                                -2, -1,
                                -2, -2,
                                -1, -2,
                                 0, -2,
                                 0, -2,
                                 0, -2,
                                 1, -2,
                                 2, -2,
                                 2, -1,
                                 2,  0,
                                ];
                aListOffset = [
                                     -10,  2,
                                     -16,  0,
                                     -16,  0,
                                     -16,  0,
                                     -16, -2,
                                      0,  -2,
                                      16, -2,
                                      16,  0,
                                      16,  0,
                                      16,  0,
                                      10,  2,
                                    ];
                aListRay = [];
                for nDir in range( len( pValue ) ):
#                    self.log( "nDir: %d" % nDir );
                    for i in range( pValue[nDir] / 40 ):
                        x = ( 80 + aListOffset[nDir*2] + aListDir[nDir*2] * i*6 ) / 160.;
                        y = ( 120 - 3 + aListOffset[nDir*2+1] + aListDir[nDir*2+1] * i*6 ) / 120.;
                        if( x <= 1 and x >= 0 and y <= 1 and y >= 0 ):
#                            self.log( "x:%f, y: %f" % ( x, y ) );                        
                            aListRay.append( [ x, y, 0.2, 1, 0, 0, 0, 255, "%d-%d " % ( nDir, int( i ) ) ] ); # la chaine doit changer pour différencier les objets
                ALMemory.insertData( "obstacle_distances", aListRay );
        else:
            # no params
            outputFunc();
    # myDataChanged - end
    
pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Input name="onUS" type="2" type_size="2" nature="1" inner="0" tooltip="An external info told us they is some obstacles in front of Nao" id="4" />
                                                                                                            <Input name="onArmsTouch" type="2" type_size="2" nature="1" inner="0" tooltip="" id="5" />
                                                                                                            <Input name="onSetDebugMode" type="1" type_size="1" nature="1" inner="0" tooltip="Call me if you want to have the possibility to have many times the same mark. By default, once a mark is seen, there will be no triggering until another mark is seen." id="6" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="sdfqsdf" id="7" />
                                                                                                            <Output name="output_distances_matrix" type="0" type_size="1" nature="2" inner="0" tooltip="output distance in straight line" id="8" />
                                                                                                            <Output name="output_dist_ll" type="2" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                                            <Output name="output_dist_l" type="2" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                                                            <Output name="output_dist_c" type="2" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                                                            <Output name="output_dist_r" type="2" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                                                            <Output name="output_dist_rr" type="2" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                                                                            <Parameter name="refreshPeriodMs" inherits_from_parent="0" content_type="1" value="300" default_value="200" min="0" max="100000" tooltip="The refresh period of the extractor in milliseconds, eg: 500." id="14" />
                                                                                                            <Parameter name="bUseBumpers" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="15" />
                                                                                                            <Parameter name="bUseSonar" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="16" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="3" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="3" indexofoutput="8" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="3" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="ExtractObstacles_ref" robot="" id="5" tooltip="Detect obstacles" bitmap_expanded="1" plugin="" x="339" y="686">
                                                                                        <bitmap>media/images/box/interaction/look.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.extractor = ALProxy("UsageVisionObstacle");
        self.strALMemoryValRoot =  "extractors/UsageVisionObstacle/";
        self.astrALMemoryVal = [ "distances_matrix" ];
            
    def onLoad(self):
        self.bIsRunning = False;
        self.bDebugMode = False;
        self.nCptBumperTouch = 0;
        self.nCptDetectUS = 0;
        self.nCptInhibeStraight = 0;         # sometimes it's usefull to inhibate straight line (if facing a wall or ...)        
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self ):
        rPeriod = self.getParameter( "refreshPeriodMs" );
        if( self.bIsRunning == False ):
            self.bIsRunning = True;
            self.extractor.subscribe(self.getName(),  rPeriod, 0.0 )
            # on a plus besoin de se registrer vu que c'est fait dans le module directement
            for val in self.astrALMemoryVal:
                strTotalName = self.strALMemoryValRoot + val;
                ALMemory.subscribeToMicroEvent(strTotalName, self.getName(), val, "myDataChanged") # set to "subscribeOnData" if you want to trigger output_NoMark after every analyses without mark
#                ALMemory.subscribeOnDataSetTimePolicy(strTotalName, self.getName(),rPeriod/2)

            if( self.getParameter( 'bUseBumpers' ) ):
                ALMemory.subscribeToMicroEvent( 'LeftBumperPressed', self.getName(), "L", "myDataChangedBumper" );
                ALMemory.subscribeToMicroEvent( 'RightBumperPressed', self.getName(), "R", "myDataChangedBumper" );
                
            self.log("%s detection: on" % self.boxName );
        
    def onInput_onStop(self):
        if(self.bIsRunning == True):
            self.bIsRunning = False    
            self.extractor.unsubscribe(self.getName())
            for val in self.astrALMemoryVal:
                strTotalName = self.strALMemoryValRoot + val;
                ALMemory.unsubscribeToMicroEvent(strTotalName, self.getName())
            if( self.getParameter( 'bUseBumpers' ) ):
                ALMemory.unsubscribeToMicroEvent( 'LeftBumperPressed', self.getName() );
                ALMemory.unsubscribeToMicroEvent( 'RightBumperPressed', self.getName() );
                
            self.log("%s detection: off" % self.boxName );
            self.onStopped();
            
    def onInput_onSetDebugMode(self ):
        self.bDebugMode = not self.bDebugMode;
        self.extractor.setDebugMode( self.bDebugMode );
        
    def onInput_onObstaclesFound(self):
        self.log( "%s: onInput_onObstaclesFound" % self.boxName );
        self.nCptDetectUS = 5;
        ALLeds.fadeListRGB( "ChestLeds", [0xFF, 0x00], [0.2,1.5] );
        

    def myDataChangedBumper(self, pDataName, pValue, pMessage):
            if( pValue ):
                # we will have some frame emulating an obstacle
                self.log( "BUMPER!" );
                if( pMessage == 'L' ):
                    strLedName = "LeftFootLeds";
                else:
                    strLedName = "RightFootLeds";                
                ALLeds.fadeListRGB( strLedName, [0xFF, 0x00], [0.2,1.5] );
                self.nCptBumperTouch = 3000 / self.getParameter( "refreshPeriodMs" ); # 5000 => 5 sec de marche arriere (mais en fait elle part pas de suite, a cause des 2 pas de blocages ou ???)
                self.nCptInhibeStraight = self.nCptBumperTouch * 3;
      
    def myDataChanged(self, pDataName, pValue, pMessage):
        self.log( "%s::myDataChanged: pDataName: %s, pValue: %s, pMessage: %s" % ( self.boxName, pDataName, pValue, pMessage ) );
        outputFunc = getattr( self, "output_" + pMessage );
#        bBumpL, bBumpR = ALMemory.getListData( ['LeftBumperPressed', 'RightBumperPressed'] );
        nIdxCenter = 5;
        if( pMessage[0] == 'd' ):
        
            if( self.nCptDetectUS > 0 ):
                self.nCptDetectUS -= 1;
                pValue[nIdxCenter-2] = 40;
                pValue[nIdxCenter-1] = 10;
                pValue[nIdxCenter] = 10;
                pValue[nIdxCenter+1] = 10;
                pValue[nIdxCenter+2] = 40;                
                
            if( self.nCptBumperTouch > 0 ):
                self.nCptBumperTouch -= 1;
                self.log( "CPT BUMP TOUCH: %d" % self.nCptBumperTouch );
                for i in range( len( pValue ) ):
                    pValue[i] = 0;
                    
            if( self.nCptInhibeStraight ):
                self.log( "INIHIBATE STRAIGHT: %d" %  self.nCptInhibeStraight );
                self.nCptInhibeStraight -= 1;
                pValue[nIdxCenter-1] = 0;
                pValue[nIdxCenter] = 0;
                pValue[nIdxCenter+1] = 0;
                        
            
            # output has params:
            outputFunc( pValue );
            nLimit = 999;
            if( pValue[nIdxCenter-3] < nLimit ):
                self.output_dist_ll( pValue[nIdxCenter-3] );
            if( pValue[nIdxCenter-2] < nLimit ):                
                self.output_dist_l( pValue[nIdxCenter-2] );
            if( pValue[nIdxCenter] < nLimit ):                
                self.output_dist_c( pValue[nIdxCenter] );
            if( pValue[nIdxCenter+2] < nLimit ):                
                self.output_dist_r( pValue[nIdxCenter+2] );
            if( pValue[nIdxCenter+3] < nLimit ):                
                self.output_dist_rr( pValue[nIdxCenter+3] );

        else:
            # no params
            outputFunc();
    # myDataChanged - end
    
pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Input name="onSetDebugMode" type="1" type_size="1" nature="1" inner="0" tooltip="Call me if you want to have the possibility to have many times the same mark. By default, once a mark is seen, there will be no triggering until another mark is seen." id="4" />
                                                                                        <Input name="onObstaclesFound" type="1" type_size="1" nature="1" inner="0" tooltip="An external info told us they is some obstacles in front of Nao" id="5" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="sdfqsdf" id="6" />
                                                                                        <Output name="output_distances_matrix" type="0" type_size="1" nature="2" inner="0" tooltip="output distance in straight line" id="7" />
                                                                                        <Output name="output_dist_ll" type="2" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                                        <Output name="output_dist_l" type="2" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                        <Output name="output_dist_c" type="2" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                                        <Output name="output_dist_r" type="2" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                                        <Output name="output_dist_rr" type="2" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                                        <Parameter name="refreshPeriodMs" inherits_from_parent="0" content_type="1" value="200" default_value="200" min="0" max="100000" tooltip="The refresh period of the extractor in milliseconds, eg: 500." id="13" />
                                                                                        <Parameter name="bUseBumpers" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="14" />
                                                                                    </Box>
                                                                                    <Box name="AnalyseObstacles" robot="" id="6" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="571" y="695">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.rX = 0.1;
        self.rY = 0.0;
        self.rT = 0.0;        
        self.nCptBlocked = 0;

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, dist_matrix):
        center = 5;
        firstindexleft = 3;
        firstindexright = 7;
        stepl = 0;
        stepr = 10;
        nLimit = 600;
        nLimitNear = 320;
        rSpeedFront = 1.0;
        rSpeedRot = 0.4;
        rSpeedStep = 0.4;
        # estimation de l'encombrement gauche/droite
        rSumLeft = dist_matrix[firstindexleft] + dist_matrix[firstindexleft-1] + dist_matrix[firstindexleft-2] + dist_matrix[firstindexleft-3] + dist_matrix[center-1];
        rSumRight = dist_matrix[firstindexright] + dist_matrix[firstindexright+1] + dist_matrix[firstindexright+2] + dist_matrix[firstindexright+3] + dist_matrix[center+1];
        
        rDistCenter = min( dist_matrix[center-1], dist_matrix[center+0], dist_matrix[center+1] );
    
        if( rDistCenter < nLimitNear or dist_matrix[firstindexleft] < nLimitNear or dist_matrix[firstindexright] < nLimitNear ):
            bFirstPass = True; # premiere pass: on cherche le mieux, deuxieme on cherche juste un truc qui marche
            bFound = False;
            if( self.nCptBlocked > 0 ):
                self.nCptBlocked -= 1;
            for i in range( 2 ):
                # part a gauche
                if( ( not bFirstPass or rSumLeft > rSumRight ) and not bFound ):
                    if( dist_matrix[firstindexleft] > nLimitNear ):
                            self.rT = rSpeedRot / 2.;
                            bFound = True;
                            self.rX = rSpeedFront/4.
                    elif( dist_matrix[firstindexleft-1] > nLimitNear ):
                            self.rT = rSpeedRot;                
                            self.rX = 0.;
                            bFound = True;
                # part a droite                    
                if( ( not bFirstPass or rSumLeft <= rSumRight ) and not bFound ):
                    if( dist_matrix[firstindexright] > nLimitNear ):
                        self.rT = -rSpeedRot / 2.;        
                        bFound = True;
                        self.rX = rSpeedFront/4.                        
                    elif( dist_matrix[firstindexright+1] > nLimitNear ):
                        self.rT = -rSpeedRot;
                        self.rX = 0.;                        
                        bFound = True;
                bFirstPass = False;
            if( not bFound ):
                # side step
                self.rX = 0.;
                self.rT = 0.;                
                if( dist_matrix[stepl] > nLimitNear ):
                    self.rY = rSpeedStep;
                elif( dist_matrix[stepr] > nLimitNear ):
                    self.rY = -rSpeedStep;
                else:
                    self.rY = 0.;
                    self.nCptBlocked += 4;
                    if( self.nCptBlocked > 25 ):
                        self.log( "BLOCKED: %f/%f" % ( float( dist_matrix[stepl] ), float( dist_matrix[stepr] ) ) );
                        self.output_blocked();
                        if( dist_matrix[stepr] > dist_matrix[stepl] + 5 ):
                            # tourne a droite
                            self.rX = 0.;                            
                            self.rT = -rSpeedRot;
                        elif( dist_matrix[stepl] > dist_matrix[stepr] + 5 ):
                            # tourne a gauche
                            self.rX = 0.;                            
                            self.rT = rSpeedRot;
                        else:
                            self.rX = -rSpeedFront/3.; # recule
                            self.rT = ( random.random() - 0.5 ) / 1.5; # part un peu de traviole
                    # ncpt blocked
                # else: dist matr
        else:
            # tout droit a fond
            if( rDistCenter < nLimit ):
                self.rX = rSpeedFront/5.;            # enfin pas trop vite quand meme!
            else:
                self.rX = rSpeedFront;
            self.rY = 0.;    
            self.rT = 0.;
        self.output_x( self.rX );
        self.output_y( self.rY );
        self.output_t( self.rT );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_x" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Output name="output_y" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                                        <Output name="output_t" type="2" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                                        <Output name="output_obstacle_l" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                                        <Output name="output_obstacle_c" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                        <Output name="output_obstacle_r" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                                        <Output name="output_blocked" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                                    </Box>
                                                                                    <Box name="AnalyseObstacles" robot="" id="7" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="588" y="324">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.rX = 0.1;
        self.rY = 0.0;
        self.rT = 0.0;
        self.rSendX = -1.0;
        self.rSendY = -1.0;        
        self.rSendT = -1.0;
        self.rStepFrequency = 0.5;
        self.rSendStepFrequency = -1.0;
        self.nCptBlocked = 0;
        self.nCptSideStep = 0;
        self.nCptTurnSos = 0;

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, dist_matrix):
        center = 5;
        firstindexleft = 3;
        firstindexright = 7;
        stepl = 0;
        stepr = 10;
        nLimit = 400;
        nLimitNear = 100;
        rSpeedFront = 1.0;
        rSpeedRot = 0.4;
        rSpeedStep = 0.4;
        # estimation de l'encombrement gauche/droite
        rSumLeft = ( dist_matrix[firstindexleft] + dist_matrix[firstindexleft-1] + dist_matrix[firstindexleft-2] + dist_matrix[firstindexleft-3] + dist_matrix[center-1] ) / 5.;
        rSumRight = ( dist_matrix[firstindexright] + dist_matrix[firstindexright+1] + dist_matrix[firstindexright+2] + dist_matrix[firstindexright+3] + dist_matrix[center+1] ) / 5.;
        
        rDistCenter = min( dist_matrix[center-1], dist_matrix[center+0], dist_matrix[center+1] );
        
        # compute nearest obstacles in radians:
        for i in range( center - 1, stepl, -1 ): # step excluded
            if( dist_matrix[i] < 600 ):
                rAngleObstaclesL = (center - i)*0.2;
                break;
        else:
            rAngleObstaclesL = 2.; # no obstacles found
            
        for i in range( center + 1, stepr ):
            if( dist_matrix[i] < 600 ):
                rAngleObstaclesR = -(i - center)*0.2;
                break;
        else:
            rAngleObstaclesR = -2.;
        
                
        # debug sur les brainleds
        nDebugRight = altools.limitRange( int( rDistCenter / (500/6) ), 0, 6 );
        nDebugLeft = 6;
        if( rDistCenter <  nLimitNear ):
            nDebugLeft = 0;
        elif( rDistCenter <  nLimit ):
            nDebugLeft = 3;
        altools.setBrainVuMeter( nDebugLeft, nDebugRight, 0.8, bDontWait = True, bInverseSide = True );
        
        
        # output for watcher
        if( dist_matrix[center-2] < 300 ):
            self.output_obstacle_l();
        if( dist_matrix[center] < 300 ):
            self.output_obstacle_c();
        if( dist_matrix[center+2] < 300 ):
            self.output_obstacle_r();

            
        if( rDistCenter > nLimit ):
            # speed max
            self.rX = rSpeedFront;
            self.rY = 0;
            self.rT = ( rAngleObstaclesL + rAngleObstaclesR ) / 8.; # on ne veut pas balancer trop fort sur cette direction
            ALMotion.setWalkArmsEnable( True, True );
            self.rStepFrequency = 1.0;
            self.nCptSideStep = 0; # only in some case, we reinit it.
            self.nCptBlocked = 0;            
        elif( rDistCenter > nLimitNear ):
            # speed medium
            self.rX = rSpeedFront / 2;        
            self.rY = 0;
            rRotMax = 0.5;
            self.rT = altools.limitRange( ( rSumLeft - rSumRight ) / 1000., -rRotMax, rRotMax ); # angle negatif => avance to the right
            self.nCptBlocked = 0;
            self.nCptTurnSos = 0;
        elif( ( dist_matrix[stepl] > nLimit or dist_matrix[stepr] > nLimit ) and self.nCptSideStep < 20 ):
            # side step
            self.nCptSideStep += 1;
            rStepMax = 0.5;
            if( dist_matrix[stepl] > dist_matrix[stepr] ):
                self.rY = altools.limitRange( dist_matrix[stepl] / 400., 0, rStepMax ); # d'autant plus vite que c'est libre
            else:
                self.rY = altools.limitRange( dist_matrix[stepr] / 400., 0, -rStepMax );
            self.rX = 0;
            self.rT = 0;
            ALMotion.setWalkArmsEnable( False, False );
        elif( self.nCptBlocked < 30 ):
            # cul de sac => recule et rotation
            self.output_blocked();        
            self.nCptBlocked += 1;
            rRotMax = 0.8;
            rRotMin = 0.25;
            self.rY = 0;            
            self.rT = altools.limitRange( ( rSumLeft - rSumRight ) / 1000., -rRotMax, rRotMax );
            if( abs( self.rT ) < rRotMin ):
                if( self.rT < 0 ):
                    self.rT = -rRotMin;
                else:
                    self.rT = rRotMin;                
            if( self.nCptBlocked < 6 ):
                self.rX = -rSpeedFront / 2.; # recul franchement au début
                self.rT /= 2.; # en tournant un peu moins
            else:
                self.rX =  -rSpeedFront / 5.; # puis ne recul (presque plus)
                
#            self.rX = 0; # temp debug
#            self.rT = 0; # temp debug
        elif( self.nCptTurnSos < 30 ):
            self.nCptTurnSos += 1;
            rRotMax = 0.8;            
            self.rX = 0;
            self.rY = 0;            
            self.rT = rRotMax;
            self.rStepFrequency = 0.4;
        else:
            # ouin ouin
            self.rX = 0;
            self.rY = 0;            
            self.rT = 0;
        
            if( random.random() < 0.01 ):
                tts = ALProxy( "ALTextToSpeech" );
                tts.say( "ouin ouin!" );
            
        
        self.log( "xyt: %s, %s, %s (rAngleObstaclesL: %s, rAngleObstaclesR: %s)" % ( str( self.rX ), str( self.rY ), str( self.rT ), str( rAngleObstaclesL ), str( rAngleObstaclesR ) ) );
        if( self.getParameter( 'bOnlyStraight' ) ):
            self.rY = 0.;
            self.rT = 0.;
            
        if( self.rSendX != self.rX ):
            self.rSendX = self.rX;
            self.output_x( self.rX );
        if( self.rSendY != self.rY ):
            self.rSendY = self.rY;
            self.output_y( self.rY );
        if( self.rSendT != self.rT ):
            self.rSendT = self.rT;            
            self.output_t( self.rT );

        if( self.rSendStepFrequency != self.rStepFrequency ):
            # c'est beaucoup moins couteux de ne renvoyer que les parametres qui changent !
            self.rSendStepFrequency = self.rStepFrequency;
            self.output_step_frequency( self.rStepFrequency );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_x" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Output name="output_y" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                                        <Output name="output_t" type="2" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                                        <Output name="output_step_frequency" type="2" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                                        <Output name="output_obstacle_l" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                        <Output name="output_obstacle_c" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                                        <Output name="output_obstacle_r" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                                        <Output name="output_blocked" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                                        <Parameter name="bOnlyStraight" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Nao has only the right to walk straight" id="13" />
                                                                                    </Box>
                                                                                    <Box name="RestartWalk" robot="" id="8" tooltip="It happens sometimes than walk stoppes (without reasons), so from time to time, if we get correct distance, we relaunch it)" bitmap_expanded="1" plugin="" x="592" y="9">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.lastTime = time.time();

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        timeNow = time.time();
        if( timeNow - self.lastTime > 2. ):
            self.lastTime = timeNow;
            self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Box name="WaitDetectCrashVision" robot="" id="9" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="597" y="109">
                                                                                        <bitmap>media/images/box/wait.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# Wait_ThreadSafe
# v1.0
import threading # opkg install python-threading
import mutex
#import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.mutex = mutex.mutex();    
        self.tb = False;
      
    def onUnload(self):
        self.onInput_onStop();
    
    def triggerOutput( self, rPeriod = 1 ):
        self.timerOutput();
        self.onInput_onStop(); # to clean everything
  
    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel();
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
        self.tb.start();
        
    def onInput_onStart(self):
#        print( "%s: %s: entering" % ( self.boxName, altools.getHumanTimeStamp() ) );
        while( self.mutex.testandset() == False ):
            time.sleep( 0.05 );
        self.startTimer( self.getParameter("timeout") );
        self.mutex.unlock();
#        print( "%s: %s: exiting" % ( self.boxName, altools.getHumanTimeStamp() ) );
        
    def onInput_onStop(self):
        while( self.mutex.testandset() == False ):
            time.sleep( 0.05 );
        if( self.tb ):
            self.tb.cancel();
            self.tb = False;
        self.mutex.unlock();]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                        <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                        <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="2.5" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                    </Box>
                                                                                    <Box name="OmniWalk" robot="" id="10" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="731" y="203">
                                                                                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.rX = 0.;
        self.rY = 0.;
        self.rT = 0.;
        self.rStep = 0.;
        self.bStopped = False;        

    def onUnload(self):
        #~ puts code for box cleanup here
        self.onInput_onStop();

    def onInput_onStart(self):
        self.bStopped = False;

    def onInput_onStop(self):
        self.bStopped = True;
        ALMotion.setWalkTargetVelocity(0., 0., 0., 0.);
        # to ensure the walk is really stopped:        
        time.sleep( 0.5 );
        ALMotion.setWalkTargetVelocity(0., 0., 0., 0. );
        self.onStopped() #~ activate output of the box        

    def onInput_onWalkX(self, p):
        self.rX = p;
        self.sendNewWalkTarget();
        
    def onInput_onWalkY(self, p):
        self.rY = p;
        self.sendNewWalkTarget();
        
    def onInput_onWalkT(self, p):
        self.rT = p;
        self.sendNewWalkTarget();
        
    def onInput_onWalkStepFrequency(self, p):
        self.rStep = p;
        self.sendNewWalkTarget();
        
    def sendNewWalkTarget( self ):
        if( not self.bStopped ):
            ALMotion.setWalkTargetVelocity(self.rX, self.rY, self.rT, self.rStep);]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Input name="onWalkX" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                                        <Input name="onWalkY" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Input name="onWalkT" type="2" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                        <Input name="onWalkStepFrequency" type="2" type_size="1" nature="1" inner="0" tooltip="" id="7" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Text Edit" robot="" id="11" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="747" y="500">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Une fois elle ne s'est pas arreter de marcher quand j'ai déchargé le comportement! - corrigé maintenant !!!")]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <text>Une fois elle ne s&apos;est pas arreter de marcher quand j&apos;ai déchargé le comportement! - corrigé maintenant !!!</text>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="DemoOmni - modif really stopping ! - optimised" robot="" id="12" tooltip="This Box is a examples of NAO omniWalk!&#x0A;&#x0A;Box Extra Parameter define robot direction like a Joystick :&#x0A;   X for front/rear motion&#x0A;   Y for lateral motion&#x0A;   Theta for rotation&#x0A;&#x0A;You can also define step Frequency between two predifine range.&#x0A;&#x0A;The new parmeter is send to robot every 0.5 second." bitmap_expanded="1" plugin="" x="787" y="792">
                                                                                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Input name="command" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                                        <Parameter name="X" inherits_from_parent="0" content_type="2" value="0.4" default_value="0.5" min="-1" max="1" tooltip="The OmniWalk vector control for front/rear motion.&#x0A;1.0  -&gt; Max Step Lenght in Front motion&#x0A;-1.0 -&gt; Max Step Length in Rear motion&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="6" />
                                                                                        <Parameter name="Y" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="The OmniWalk vector control for lateral motion.&#x0A;1.0  -&gt; Max Step length on the Right&#x0A;-1.0 -&gt; Max Step length on the Left&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="7" />
                                                                                        <Parameter name="Theta" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="The OmniWalk vector control for rotation motion.&#x0A;1.0  -&gt; Max Step Rotation on the Right&#x0A;-1.0 -&gt; Max Step Rotation on the Left&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="8" />
                                                                                        <Parameter name="Step Frequency" inherits_from_parent="0" content_type="2" value="0.48" default_value="0.5" min="0" max="1" tooltip="The OmniWalk vector control for NAO Step Frequency.&#x0A;0.0  -&gt; Max Step Frequency.&#x0A;1.0  -&gt; Min Step Frequency.&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="9" />
                                                                                        <Parameter name="left arm enable" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Sets if left arm motions are enabled during the Walk Process.&#x0A;&#x0A;note :&#x0A;it&apos;s possible to send Arms motion define by timeLine up to Walk arms motion." id="10" />
                                                                                        <Parameter name="right arm enable" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Sets if left arm motions are enabled during the Walk Process.&#x0A;&#x0A;note :&#x0A;it&apos;s possible to send Arms motion define by timeLine up to Walk arms motion." id="11" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Joystick" robot="" id="1" tooltip="This Box simulate a Joystick" bitmap_expanded="1" plugin="" x="152" y="28">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.running = False

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.running = False
        self.outputX(0.0)
        self.outputY(0.0)
        self.outputTheta(0.0)
        #

    def onInput_onStart(self):
        self.running = True

        while(self.running == True) : 
            self.outputX(self.getParameter("X"))
            self.outputY(self.getParameter("Y"))
            self.outputTheta(self.getParameter("Theta"))
            self.outputStepFrequency(self.getParameter("Step Frequency"))
#            self.outputLeftArmEnable(self.getParameter("left arm enable"))
#            self.outputRightArmEnable(self.getParameter("right arm enable"))
            time.sleep(0.5)

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="outputX" type="2" type_size="1" nature="2" inner="0" tooltip="The new value X" id="4" />
                                                                                                            <Output name="outputY" type="2" type_size="1" nature="2" inner="0" tooltip="The new value Y" id="5" />
                                                                                                            <Output name="outputTheta" type="2" type_size="1" nature="2" inner="0" tooltip="The new value Theta" id="6" />
                                                                                                            <Output name="outputStepFrequency" type="2" type_size="1" nature="2" inner="0" tooltip="The new value Step Frequency" id="7" />
                                                                                                            <Output name="outputLeftArmEnable" type="0" type_size="1" nature="2" inner="0" tooltip="New Value of Left Arm Enable (boolean)" id="8" />
                                                                                                            <Output name="outputRightArmEnable" type="0" type_size="1" nature="2" inner="0" tooltip="New Value of Left Arm Enable (boolean)" id="9" />
                                                                                                        </Box>
                                                                                                        <Box name="OmniWalk - modif really stopping !" robot="" id="2" tooltip="This Box should make your robot a reactive omniWalk!&#x0A;&#x0A;Inputs :&#x0A;   X for front/rear motion&#x0A;   Y for lateral motion&#x0A;   Theta for rotation&#x0A;   Step Frequency between two predifine range.&#x0A;" bitmap_expanded="1" plugin="" x="338" y="90">
                                                                                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.X = 0.0
        self.Y = 0.0
        self.Theta = 0.0
        self.StepFrequency = 0.0
        self.motion = ALProxy("ALMotion")

    def onLoad(self):
        #~ puts code for box initialization here
        self.bStopped = False;

    def onUnload(self):
        self.bStopped = True;
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, self.StepFrequency)
        # to ensure the walk is really stopped:        
        time.sleep( 0.5 );
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, self.StepFrequency)        

    def onInput_X(self, p):
        self.X = p
        self.sendNewWalkTarget()
            
    def onInput_Y(self, p):
        self.Y = p
        self.sendNewWalkTarget()
            
    def onInput_Theta(self, p):
        self.Theta = p
        self.sendNewWalkTarget()
                        
    def onInput_StepFrequency(self, p):
        self.StepFrequency = p
        self.sendNewWalkTarget()

    def sendNewWalkTarget(self):
        if( not self.bStopped ):
            self.motion.setWalkTargetVelocity(self.X, self.Y, self.Theta, self.StepFrequency)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="X" type="2" type_size="1" nature="1" inner="0" tooltip="The OmniWalk vector control for front/rear motion. &#x0A;1.0 -&gt; Max Step Lenght in Front motion&#x0A;-1.0 -&gt; Max Step Length in Rear motion&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="2" />
                                                                                                            <Input name="Y" type="2" type_size="1" nature="1" inner="0" tooltip="The OmniWalk vector control for lateral motion. &#x0A;1.0 -&gt; Max Step length on the Right&#x0A;-1.0 -&gt; Max Step length on the Left&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="3" />
                                                                                                            <Input name="Theta" type="2" type_size="1" nature="1" inner="0" tooltip="The OmniWalk vector control for rotation motion. &#x0A;1.0 -&gt; Max Step Rotation on the Right&#x0A;-1.0 -&gt; Max Step Rotation on the Left&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="4" />
                                                                                                            <Input name="Step Frequency" type="2" type_size="1" nature="1" inner="0" tooltip="The OmniWalk vector control for NAO Step Frequency. &#x0A;0.0 -&gt; Max Step Frequency.&#x0A;1.0 -&gt; Min Step Frequency.&#x0A;&#x0A;note:&#x0A;see the ALMotion documentation on RedDoc for more details" id="5" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="EnableArms" robot="" id="3" tooltip="This Box enable arms during walk process&#x0A;&#x0A;note:&#x0A;is possible to send arms motion even if arms is enable during walk process&#x0A;" bitmap_expanded="1" plugin="" x="340" y="213">
                                                                                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.leftArmEnable = True
        self.rightArmEnable = True
        self.motion = ALProxy("ALMotion")

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        pass
        #
         
    def onInput_LeftArmEnable(self, p):
        self.leftArmEnable = p
        self.setWalkArmsEnable()
        
    def onInput_RightArmEnable(self, p):
        self.rightArmEnable = p
        self.setWalkArmsEnable()
        
    def setWalkArmsEnable(self):
        self.motion.setWalkArmsEnable(self.leftArmEnable, self.rightArmEnable )]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="LeftArmEnable" type="0" type_size="1" nature="1" inner="0" tooltip="enable Left Arm during Walk Process" id="2" />
                                                                                                            <Input name="RightArmEnable" type="0" type_size="1" nature="1" inner="0" tooltip="enable Right Arm during Walk Process" id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="6" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="2" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="3" indexofinput="3" outputowner="1" indexofoutput="9" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="FallManager" robot="" id="13" tooltip="Enable or disable the fall manager." bitmap_expanded="1" plugin="" x="102" y="367">
                                                                                        <bitmap>media/images/box/sensors/fall_manager.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onDisable();

    def onInput_onEnable(self):
        print( "%s: Enabling Fall Manager !" % self.boxName );
        proxy = ALProxy( "ALMotion" )
        proxy.setMotionConfig( [["ENABLE_FALL_MANAGEMENT_PROTECTION",True]] );

    def onInput_onDisable(self):
        print( "%s: Disabling Fall Manager !" % self.boxName );    
        proxy = ALProxy( "ALMotion" )
        proxy.setMotionConfig( [["ENABLE_FALL_MANAGEMENT_PROTECTION",False]] );
        self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onEnable" type="1" type_size="1" nature="1" inner="0" tooltip="Enable the fall manager." id="2" />
                                                                                        <Input name="onDisable" type="1" type_size="1" nature="1" inner="0" tooltip="Disable the fall manager." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Disable the fall manager." id="4" />
                                                                                    </Box>
                                                                                    <Box name="bras long du corps" robot="" id="14" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="130" y="0">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="77.2544" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="29.4413" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-40.2568" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-31.0234" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="95.8044" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-23.3816" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="75.145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="39.5537" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="8" outputowner="7" indexofoutput="12" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="5" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="3" outputowner="9" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="9" />
                                                                                    <Link inputowner="0" indexofinput="6" outputowner="7" indexofoutput="10" />
                                                                                    <Link inputowner="0" indexofinput="7" outputowner="7" indexofoutput="11" />
                                                                                    <Link inputowner="10" indexofinput="3" outputowner="9" indexofoutput="4" />
                                                                                    <Link inputowner="10" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                                    <Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="10" indexofinput="4" outputowner="7" indexofoutput="5" />
                                                                                    <Link inputowner="10" indexofinput="5" outputowner="7" indexofoutput="6" />
                                                                                    <Link inputowner="10" indexofinput="6" outputowner="7" indexofoutput="7" />
                                                                                    <Link inputowner="10" indexofinput="7" outputowner="7" indexofoutput="8" />
                                                                                    <Link inputowner="0" indexofinput="9" outputowner="9" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="8" />
                                                                                    <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Wait" robot="" id="2" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="192" y="64">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                    <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="600" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                </Box>
                                                                <Box name="SomeTimes" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="318" y="265">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random
import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.timelastTime = time.time(); # fais dans l'init: on ne veut pas mettre a jour a chaque reload de cette boite !!!

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        if( time.time() - self.timelastTime < 20. ):
            # on regarde pas randomiquement plus souvent qu'une fois toutes les 10 sec !
            return;    
        if( not self.getParameter( 'bNever' ) and random.random() < self.getParameter( 'rChanceOfLookAt' ) / 1000.  ): # 0.002: is good!  # 0.0001 is rare
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="bNever" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Desactivate the sometimes" id="5" />
                                                                </Box>
                                                                <Box name="Enter name here" robot="" id="4" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="346" y="475">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = "It seems like I've got a problem with my eyes, all's weird!"
		sFrench = "Je crois que j'ai un problème avec mes yeux car ce que je vois est très bizarre!"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <english>It seems like I&apos;ve got a problem with my eyes, all&apos;s weird!</english>
                                                                        <french>Je crois que j&apos;ai un problème avec mes yeux car ce que je vois est très bizarre!</french>
                                                                        <spanish></spanish>
                                                                        <italian></italian>
                                                                        <german></german>
                                                                        <chinese></chinese>
                                                                        <polish></polish>
                                                                        <korean></korean>
                                                                        <language>0</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="5" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="371" y="359">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Blocked")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Blocked</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="GotoFindObjective" robot="" id="6" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="462" y="73">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>20</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="GotoLookAt" robot="" id="7" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="467" y="221">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(60)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>60</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="SayTextPrerender_p" robot="" id="9" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.02" bitmap_expanded="1" plugin="" x="608" y="475">
                                                                    <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# SayTextPrerender - v1.02
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        self.nStep = self.nStateInit;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;
#        txt = "\\RSPD=85\\ " + altools.transformAsciiAccentForSynthesis( p ); # not usefull now!
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        if( not self.getParameter( 'bJustPrepare' ) ):
            self.nStep = self.nStateSpeaking;
            self.output_onStartSpeaking();
            if( self.getParameter( "bWithLight" ) ):
                altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
            else:
                altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.nStep = self.nStateStopped;
        self.output_onStopSpeaking();
        
    def onInput_onStop(self):
        while( self.nStep == self.nStatePreparing ): # can't kill while preparing
            time.sleep( 0.2 );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                                    <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="5" />
                                                                    <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="6" />
                                                                    <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="7" />
                                                                    <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="8" />
                                                                    <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="9" />
                                                                    <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="10" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="10" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="637" y="106">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.getName(), int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Box name="GotoLookAtFake" robot="" id="11" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="462" y="146">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(80)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>80</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Timer" robot="" id="12" tooltip="Send a bang with a predefined period." bitmap_expanded="1" plugin="" x="191" y="159">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False;

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value (seconds)." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the timer." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                                    <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds). The box output will be stimulated at this period." id="6" />
                                                                </Box>
                                                                <Box name="SomeTimesFake" robot="" id="13" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="318" y="151">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.timelastTime = time.time(); # fais dans l'init: on ne veut pas mettre a jour a chaque reload de cette boite !!!

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        if( time.time() - self.timelastTime < 40. ):
            # on regarde pas randomiquement plus souvent qu'une fois toutes les 10 sec !
            return;
        rChance = self.getParameter( 'rChanceOfLookAt' ) / 100.; # 10 fois plus souvent que le test réel on regarde fakement en l'air
        self.log( "rChance: %f" % rChance );
        if( not self.getParameter( 'bNever' ) and random.random() < rChance  ): 
            self.timelastTime = time.time();
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="bNever" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Desactivate the sometimes" id="5" />
                                                                </Box>
                                                                <Link inputowner="10" indexofinput="2" outputowner="7" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="7" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="9" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="9" indexofoutput="6" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="8" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="11" indexofoutput="3" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="4" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="12" indexofoutput="5" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="LookAtSomething" index="60" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Text Edit" robot="" id="1" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="79" y="549">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LookAt_Begin")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>LookAt_Begin</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="2" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="86" y="657">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LookAt_End")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>LookAt_End</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="ChangeCamera" robot="" id="3" tooltip="Change the currently used camera.&#x0A;*** ref box in: ./4_localize/ChangeCamera/ExampleChangeCamera.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="99" y="434">
                                                                    <bitmap>media/images/box/interaction/look.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self),
        self.kCameraSelectID = 18;
        self.cameraModule = ALProxy( "ALVideoDevice" ); # "ALVideoDevice"

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onUseTopCamera(self):
        #~ self.log( self.boxName + ": Use Top Camera" );
        self.cameraModule.setParam( self.kCameraSelectID, 0 );
        self.output_Finished();

    def onInput_onUseBottomCamera(self):
        #~ self.log( self.boxName + ": Use Bottom Camera" );    
        self.cameraModule.setParam( self.kCameraSelectID, 1 );
        self.output_Finished();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onUseTopCamera" type="1" type_size="1" nature="1" inner="0" tooltip="use the camera at the top of the head (forehead)" id="2" />
                                                                    <Input name="onUseBottomCamera" type="1" type_size="1" nature="1" inner="0" tooltip="Use the camera at the bottom of the head (mouth)" id="3" />
                                                                    <Output name="output_Finished" type="1" type_size="1" nature="1" inner="0" tooltip="The change is finished." id="4" />
                                                                </Box>
                                                                <Box name="Wait" robot="" id="4" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="112" y="317">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                    <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                </Box>
                                                                <Box name="ExtractInterest_ref" robot="" id="5" tooltip="Detect object of interest" bitmap_expanded="1" plugin="" x="140" y="16">
                                                                    <bitmap>media/images/box/interaction/look.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.extractor = ALProxy("UsageVisionInterest");
        self.strALMemoryValRoot =  "extractors/UsageVisionInterest/";
        self.astrALMemoryVal = [ "zone" ];
        self.BIND_PYTHON( self.getName(),"myDataChanged" );        
            
    def onLoad(self):
        self.bIsRunning = False;
        self.bDebugMode = False;
        self.rThreshold = 0.;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self ):
        rPeriod = self.getParameter( "refreshPeriodMs" );
        self.rThreshold = self.getParameter( 'rThreshold' );
        self.extractor.setMode_DetectInterestingObject();
        self.extractor.setLookAt( self.getParameter( 'bAutoLookAt' ) );
        if( self.bIsRunning == False ):
            self.bIsRunning = True;
            self.extractor.subscribe(self.getName(),  rPeriod, 0.0 )
            # on a plus besoin de se registrer vu que c'est fait dans le module directement
            for val in self.astrALMemoryVal:
                strTotalName = self.strALMemoryValRoot + val;
                ALMemory.subscribeToMicroEvent(strTotalName, self.getName(), val, "myDataChanged") # set to "subscribeOnData" if you want to trigger output_NoMark after every analyses without mark
#                ALMemory.subscribeOnDataSetTimePolicy(strTotalName, self.getName(),rPeriod/2)

            self.log("%s detection: on" % self.boxName );
        
    def onInput_onStop(self):
        if(self.bIsRunning == True):
            self.bIsRunning = False;
            self.extractor.setLookAt( False );
            self.extractor.unsubscribe(self.getName())
            for val in self.astrALMemoryVal:
                strTotalName = self.strALMemoryValRoot + val;
                ALMemory.unsubscribeToMicroEvent(strTotalName, self.getName())
                
            self.log("%s detection: off" % self.boxName );
            self.onStopped();
            
    def onInput_onSetDebugMode(self ):
        self.bDebugMode = not self.bDebugMode;
        self.extractor.setDebugMode( self.bDebugMode );
      
    def myDataChanged(self, pDataName, pValue, pMessage):
#        self.log( "%s::myDataChanged: pDataName: %s, pValue: %s, pMessage: %s" % ( self.boxName, pDataName, pValue, pMessage ) );
        if( pValue[5] > self.rThreshold ):
            self.output_objectInfo( pValue );
    # myDataChanged - end
    
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="onSetDebugMode" type="1" type_size="1" nature="1" inner="0" tooltip="Call me if you want to have the possibility to have many times the same mark. By default, once a mark is seen, there will be no triggering until another mark is seen." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="sdfqsdf" id="5" />
                                                                    <Output name="output_objectInfo" type="0" type_size="1" nature="2" inner="0" tooltip="output distance in straight line" id="6" />
                                                                    <Parameter name="refreshPeriodMs" inherits_from_parent="0" content_type="1" value="200" default_value="200" min="0" max="100000" tooltip="The refresh period of the extractor in milliseconds, eg: 500." id="7" />
                                                                    <Parameter name="rThreshold" inherits_from_parent="0" content_type="2" value="0.15" default_value="0.15" min="0" max="1" tooltip="Threshold to detect object" id="8" />
                                                                    <Parameter name="bAutoLookAt" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="does nao will look directly at the object ?" id="9" />
                                                                </Box>
                                                                <Box name="ExtractInfo - modified data wroten directly in the module" robot="" id="6" tooltip="Detect various info (luminosity, darkness, flash, average color)" bitmap_expanded="1" plugin="" x="147" y="118">
                                                                    <bitmap>media/images/box/icons_appu/luminosity.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.extractor = ALProxy("UsageVisionInfo");
        self.strALMemoryValRoot =  "extractors/UsageVisionInfo/";
        self.astrALMemoryVal = [ "luminosity", "blackout", "flash", "average_rgb", "move" ];
        self.BIND_PYTHON( self.getName(),"myDataChanged" );        
            
    def onLoad(self):
        self.bIsRunning = False;
        self.bDebugMode = False;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self ):
        rPeriod = self.getParameter( "refreshPeriodMs" );
        if( self.bIsRunning == False ):
            self.bIsRunning = True;
            self.extractor.subscribe(self.getName(),  rPeriod, 0.0 )
            self.extractor.setAutonomousPost_activate( True ); # activate auto post to the autonomous life variable
            # on a plus besoin de se registrer vu que c'est fait dans le module directement
            #~ for val in self.astrALMemoryVal:
                #~ strTotalName = self.strALMemoryValRoot + val;
                #~ ALMemory.subscribeOnData(strTotalName, self.getName(), val, "myDataChanged") # set to "subscribeOnData" if you want to trigger output_NoMark after every analyses without mark
                #~ ALMemory.subscribeOnDataSetTimePolicy(strTotalName, self.getName(),rPeriod/2)
            self.log("%s detection: on" % self.boxName );
        
    def onInput_onStop(self):
        if(self.bIsRunning == True):
            self.bIsRunning = False    
            self.extractor.unsubscribe(self.getName())
            #~ for val in self.astrALMemoryVal:
                #~ strTotalName = self.strALMemoryValRoot + val;
                #~ ALMemory.unsubscribeOnData(strTotalName, self.getName())
            self.log("%s detection: off" % self.boxName );
            self.onStopped();
            
    def onInput_onSetDebugMode(self ):
        self.bDebugMode = not self.bDebugMode;
        self.extractor.setDebugMode( self.bDebugMode );
      
    def myDataChanged(self, pDataName, pValue, pMessage):
#        self.log( "%s::myDataChanged: pDataName: %s, pValue: %s, pMessage: %s" % ( self.boxName, pDataName, pValue, pMessage ) );
        outputFunc = getattr( self, "output_" + pMessage );
        if( pMessage[0] == 'l' or pMessage[0] == 'a' or pMessage[0] == 'm' ):
            # output has params:
            outputFunc( pValue );
        else:
            # no params
            outputFunc();
    # myDataChanged - end
    
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="onSetDebugMode" type="1" type_size="1" nature="1" inner="0" tooltip="Call me if you want to have the possibility to have many times the same mark. By default, once a mark is seen, there will be no triggering until another mark is seen." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="sdfqsdf" id="5" />
                                                                    <Output name="output_luminosity" type="2" type_size="1" nature="2" inner="0" tooltip="output global luminosity [0...1.]" id="6" />
                                                                    <Output name="output_blackout" type="1" type_size="1" nature="2" inner="0" tooltip="suddenly the darkness has fall." id="7" />
                                                                    <Output name="output_flash" type="1" type_size="1" nature="2" inner="0" tooltip="suddenly the light has arrived (flash)." id="8" />
                                                                    <Output name="output_average_rgb" type="2" type_size="3" nature="2" inner="0" tooltip="" id="9" />
                                                                    <Output name="output_move" type="2" type_size="3" nature="2" inner="0" tooltip="output information about the most moving zone [posX, posY,moving value]" id="10" />
                                                                    <Parameter name="refreshPeriodMs" inherits_from_parent="0" content_type="1" value="200" default_value="200" min="0" max="100000" tooltip="The refresh period of the extractor in milliseconds, eg: 500." id="11" />
                                                                </Box>
                                                                <Box name="Anim_extStand_seeToy" robot="" id="10" tooltip="Anim_extStand_seeToy, random" bitmap_expanded="1" plugin="" x="354" y="75">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="96">
                                                                                    <Box name="RandomInt" robot="" id="1" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="138" y="128">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                        <Parameter name="max" inherits_from_parent="0" content_type="1" value="6" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                        <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                    </Box>
                                                                                    <Box name="Dispatcher" robot="" id="2" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" bitmap_expanded="1" plugin="dispatcher_plugin" x="308" y="112">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		elif(p == (3)):
			self.output_4(p)
		elif(p == (4)):
			self.output_5(p)
		elif(p == (5)):
			self.output_6(p)
		else:
			self.onDefault()]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <keywords>
                                                                                                <keyword>0</keyword>
                                                                                                <keyword>1</keyword>
                                                                                                <keyword>2</keyword>
                                                                                                <keyword>3</keyword>
                                                                                                <keyword>4</keyword>
                                                                                                <keyword>5</keyword>
                                                                                                <keyword></keyword>
                                                                                            </keywords>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" />
                                                                                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" />
                                                                                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" />
                                                                                        <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" />
                                                                                        <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" />
                                                                                        <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" />
                                                                                    </Box>
                                                                                    <Box name="Anim_extStand_seeToy2" robot="" id="4" tooltip="Anim_extStand_seeToy" bitmap_expanded="1" plugin="" x="684" y="132">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="1" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="LED" mute="0">
                                                                                                <BehaviorKeyframe name="happy" index="7" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Light_CuriosityEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Curiosity&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_CuriosityEyes.xar ***&#x0A;*** last modification date(svn): 2009-09-25 16:26:32 +0200 (ven, 25 sep 2009) ***" bitmap_expanded="1" plugin="" x="170" y="84">
                                                                                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.2;
    ALLeds.fadeRGB( "FaceLeds", 0x00ffff, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.5
      ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.post.fadeRGB( "FaceLed6", 0x00ffff, rTime );      
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="normal" index="114" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="FaceLeds" robot="" id="1" tooltip="FaceLeds" bitmap_expanded="1" plugin="" x="159" y="73">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALLeds.fadeRGB("FaceLeds", 0xFFFFFF, 1)
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="6.3258" />
                                                                                                    <Key frame="49" value="4.12851" />
                                                                                                    <Key frame="109" value="4.04062" />
                                                                                                    <Key frame="149" value="7.20472" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="25.662" />
                                                                                                    <Key frame="49" value="30.0566" />
                                                                                                    <Key frame="109" value="26.8925" />
                                                                                                    <Key frame="149" value="-1.145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="98.4363" />
                                                                                                    <Key frame="28" value="105.468" />
                                                                                                    <Key frame="44" value="117.069" />
                                                                                                    <Key frame="104" value="112.235" />
                                                                                                    <Key frame="119" value="108.895" />
                                                                                                    <Key frame="129" value="110.653" />
                                                                                                    <Key frame="136" value="99.6668" />
                                                                                                    <Key frame="144" value="89.6472" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="18.1912" />
                                                                                                    <Key frame="28" value="16.6091" />
                                                                                                    <Key frame="44" value="7.55628" />
                                                                                                    <Key frame="104" value="7.11683" />
                                                                                                    <Key frame="119" value="9.40201" />
                                                                                                    <Key frame="129" value="13.5329" />
                                                                                                    <Key frame="136" value="19.0701" />
                                                                                                    <Key frame="144" value="13.0056" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-48.4307" />
                                                                                                    <Key frame="28" value="21.5311" />
                                                                                                    <Key frame="44" value="10.4567" />
                                                                                                    <Key frame="104" value="11.5993" />
                                                                                                    <Key frame="119" value="16.1697" />
                                                                                                    <Key frame="129" value="-31.995" />
                                                                                                    <Key frame="136" value="-55.2863" />
                                                                                                    <Key frame="144" value="-65.4817" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-1.0523" />
                                                                                                    <Key frame="28" value="-22.9373" />
                                                                                                    <Key frame="44" value="-53.6994" />
                                                                                                    <Key frame="104" value="-52.5569" />
                                                                                                    <Key frame="119" value="-20.6522" />
                                                                                                    <Key frame="129" value="-4.48007" />
                                                                                                    <Key frame="136" value="-12.1267" />
                                                                                                    <Key frame="144" value="-25.8378" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="44" value="-12.1315" />
                                                                                                    <Key frame="104" value="-12.7467" />
                                                                                                    <Key frame="144" value="-12.5709" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="44" value="2.20145" />
                                                                                                    <Key frame="104" value="2.26145" />
                                                                                                    <Key frame="144" value="2.50145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="12" value="95.8044" />
                                                                                                    <Key frame="26" value="108.637" />
                                                                                                    <Key frame="42" value="116.811" />
                                                                                                    <Key frame="102" value="115.492" />
                                                                                                    <Key frame="117" value="115.141" />
                                                                                                    <Key frame="127" value="111.185" />
                                                                                                    <Key frame="134" value="105.209" />
                                                                                                    <Key frame="142" value="91.3219" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="12" value="-18.7233" />
                                                                                                    <Key frame="26" value="-15.735" />
                                                                                                    <Key frame="42" value="-13.4498" />
                                                                                                    <Key frame="102" value="-11.8678" />
                                                                                                    <Key frame="117" value="-11.2525" />
                                                                                                    <Key frame="127" value="-15.4713" />
                                                                                                    <Key frame="134" value="-14.8561" />
                                                                                                    <Key frame="142" value="-7.38531" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="12" value="55.1936" />
                                                                                                    <Key frame="26" value="-13.1862" />
                                                                                                    <Key frame="42" value="-3.2544" />
                                                                                                    <Key frame="102" value="-8.96736" />
                                                                                                    <Key frame="117" value="21.1795" />
                                                                                                    <Key frame="127" value="66.7953" />
                                                                                                    <Key frame="134" value="89.2077" />
                                                                                                    <Key frame="142" value="86.9225" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="12" value="4.83645" />
                                                                                                    <Key frame="26" value="31.995" />
                                                                                                    <Key frame="42" value="61.2629" />
                                                                                                    <Key frame="102" value="60.7356" />
                                                                                                    <Key frame="117" value="18.196" />
                                                                                                    <Key frame="127" value="16.6139" />
                                                                                                    <Key frame="134" value="27.0731" />
                                                                                                    <Key frame="142" value="38.9384" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="42" value="-11.0768" />
                                                                                                    <Key frame="102" value="-11.3404" />
                                                                                                    <Key frame="142" value="-9.75839" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="42" value="13.5814" />
                                                                                                    <Key frame="102" value="13.5814" />
                                                                                                    <Key frame="142" value="13.3414" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="-31.4628" />
                                                                                                    <Key frame="103" value="-33.748" />
                                                                                                    <Key frame="143" value="-19.949" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="2" />
                                                                                                    <Key frame="103" value="1" />
                                                                                                    <Key frame="143" value="4.04542" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="6.59349" />
                                                                                                    <Key frame="103" value="-3.68984" />
                                                                                                    <Key frame="143" value="-5.09532" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="7.87391" />
                                                                                                    <Key frame="103" value="11.4775" />
                                                                                                    <Key frame="143" value="32.6054" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="0" />
                                                                                                    <Key frame="103" value="5" />
                                                                                                    <Key frame="143" value="-14.153" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="-5" />
                                                                                                    <Key frame="103" value="-6" />
                                                                                                    <Key frame="143" value="-3.1617" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="-4.53969" />
                                                                                                    <Key frame="103" value="-2" />
                                                                                                    <Key frame="143" value="-2.28278" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="1.04019" />
                                                                                                    <Key frame="103" value="-8.6279" />
                                                                                                    <Key frame="143" value="-6.85796" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="15.915" />
                                                                                                    <Key frame="103" value="23.9131" />
                                                                                                    <Key frame="143" value="31.5555" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="-3" />
                                                                                                    <Key frame="103" value="-8" />
                                                                                                    <Key frame="143" value="-10.8962" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="43" value="6" />
                                                                                                    <Key frame="103" value="6" />
                                                                                                    <Key frame="143" value="1.49656" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_extStand_seeToy1" robot="" id="5" tooltip="Anim_extStand_seeToy" bitmap_expanded="1" plugin="" x="684" y="26">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="1" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="LED" mute="0">
                                                                                                <BehaviorKeyframe name="happy" index="15" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Light_AmusedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-09-25 16:26:32 +0200 (ven, 25 sep 2009) ***" bitmap_expanded="1" plugin="" x="154" y="57">
                                                                                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="normal" index="195" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="FaceLeds" robot="" id="1" tooltip="FaceLeds" bitmap_expanded="1" plugin="" x="159" y="73">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALLeds.fadeRGB("FaceLeds", 0xFFFFFF, 1)
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="9.84147" />
                                                                                                    <Key frame="45" value="8.61098" />
                                                                                                    <Key frame="67" value="8.61098" />
                                                                                                    <Key frame="89" value="6.15002" />
                                                                                                    <Key frame="126" value="3.42537" />
                                                                                                    <Key frame="151" value="2.19489" />
                                                                                                    <Key frame="169" value="0.612838" />
                                                                                                    <Key frame="198" value="11.5993" />
                                                                                                    <Key frame="229" value="5.00742" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="15.3786" />
                                                                                                    <Key frame="45" value="21.1795" />
                                                                                                    <Key frame="67" value="19.4217" />
                                                                                                    <Key frame="89" value="21.1795" />
                                                                                                    <Key frame="126" value="15.7302" />
                                                                                                    <Key frame="151" value="13.8845" />
                                                                                                    <Key frame="169" value="10.7204" />
                                                                                                    <Key frame="198" value="28.4745" />
                                                                                                    <Key frame="229" value="-0.881321" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="65.7406" />
                                                                                                    <Key frame="41" value="73.1235" />
                                                                                                    <Key frame="63" value="44.6466" />
                                                                                                    <Key frame="85" value="29.9687" />
                                                                                                    <Key frame="122" value="27.0682" />
                                                                                                    <Key frame="147" value="34.8906" />
                                                                                                    <Key frame="165" value="5.18321" />
                                                                                                    <Key frame="194" value="28.0351" />
                                                                                                    <Key frame="225" value="82.9674" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="5.2711" />
                                                                                                    <Key frame="41" value="8.78677" />
                                                                                                    <Key frame="63" value="1.14019" />
                                                                                                    <Key frame="85" value="1.14019" />
                                                                                                    <Key frame="122" value="1.57965" />
                                                                                                    <Key frame="147" value="1.57965" />
                                                                                                    <Key frame="165" value="24.4315" />
                                                                                                    <Key frame="194" value="25.3983" />
                                                                                                    <Key frame="225" value="12.1267" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-44.3877" />
                                                                                                    <Key frame="41" value="-30.1493" />
                                                                                                    <Key frame="63" value="-35.0712" />
                                                                                                    <Key frame="85" value="-26.4578" />
                                                                                                    <Key frame="122" value="-19.4265" />
                                                                                                    <Key frame="147" value="-24.2605" />
                                                                                                    <Key frame="165" value="41.043" />
                                                                                                    <Key frame="194" value="38.5821" />
                                                                                                    <Key frame="225" value="-49.3976" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-52.6447" />
                                                                                                    <Key frame="41" value="-75.8482" />
                                                                                                    <Key frame="63" value="-88.6803" />
                                                                                                    <Key frame="85" value="-89.0319" />
                                                                                                    <Key frame="122" value="-88.5925" />
                                                                                                    <Key frame="147" value="-88.3288" />
                                                                                                    <Key frame="165" value="-86.7467" />
                                                                                                    <Key frame="194" value="-61.5218" />
                                                                                                    <Key frame="225" value="-29.0898" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-10.9889" />
                                                                                                    <Key frame="63" value="-12.9225" />
                                                                                                    <Key frame="85" value="-12.5709" />
                                                                                                    <Key frame="165" value="-40" />
                                                                                                    <Key frame="194" value="-12.7467" />
                                                                                                    <Key frame="225" value="-12.3072" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="1.64145" />
                                                                                                    <Key frame="63" value="1.74145" />
                                                                                                    <Key frame="85" value="1.74145" />
                                                                                                    <Key frame="165" value="6.4" />
                                                                                                    <Key frame="194" value="1.84145" />
                                                                                                    <Key frame="225" value="2.20145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="50.3644" />
                                                                                                    <Key frame="37" value="37.3564" />
                                                                                                    <Key frame="59" value="43.0693" />
                                                                                                    <Key frame="81" value="29.6219" />
                                                                                                    <Key frame="118" value="35.1591" />
                                                                                                    <Key frame="143" value="39.29" />
                                                                                                    <Key frame="161" value="69.1732" />
                                                                                                    <Key frame="190" value="77.3471" />
                                                                                                    <Key frame="221" value="89.3004" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-17.6686" />
                                                                                                    <Key frame="37" value="-9.40682" />
                                                                                                    <Key frame="59" value="-7.20953" />
                                                                                                    <Key frame="81" value="-0.705538" />
                                                                                                    <Key frame="118" value="-5.10012" />
                                                                                                    <Key frame="143" value="-4.92434" />
                                                                                                    <Key frame="161" value="-14.3288" />
                                                                                                    <Key frame="190" value="-4.57277" />
                                                                                                    <Key frame="221" value="-4.66067" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="74.0024" />
                                                                                                    <Key frame="37" value="82.5279" />
                                                                                                    <Key frame="59" value="64.4222" />
                                                                                                    <Key frame="81" value="49.4806" />
                                                                                                    <Key frame="118" value="56.5999" />
                                                                                                    <Key frame="143" value="62.9281" />
                                                                                                    <Key frame="161" value="53.4358" />
                                                                                                    <Key frame="190" value="84.5494" />
                                                                                                    <Key frame="221" value="87.362" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="89.1246" />
                                                                                                    <Key frame="37" value="88.8609" />
                                                                                                    <Key frame="59" value="70.3158" />
                                                                                                    <Key frame="81" value="33.1376" />
                                                                                                    <Key frame="118" value="50.1886" />
                                                                                                    <Key frame="143" value="46.0577" />
                                                                                                    <Key frame="161" value="79.5444" />
                                                                                                    <Key frame="190" value="44.2998" />
                                                                                                    <Key frame="221" value="27.8641" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-42" />
                                                                                                    <Key frame="59" value="-41.9268" />
                                                                                                    <Key frame="81" value="-15" />
                                                                                                    <Key frame="161" value="-15.1198" />
                                                                                                    <Key frame="190" value="-13.8893" />
                                                                                                    <Key frame="221" value="-14.0651" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="35" />
                                                                                                    <Key frame="26" value="16" />
                                                                                                    <Key frame="32" value="38" />
                                                                                                    <Key frame="37" value="21" />
                                                                                                    <Key frame="59" value="20.9414" />
                                                                                                    <Key frame="81" value="49" />
                                                                                                    <Key frame="118" value="30.4" />
                                                                                                    <Key frame="161" value="30.3814" />
                                                                                                    <Key frame="190" value="14" />
                                                                                                    <Key frame="221" value="14" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-24.2557" />
                                                                                                    <Key frame="61" value="-31.4628" />
                                                                                                    <Key frame="83" value="-35.5059" />
                                                                                                    <Key frame="163" value="-35.5059" />
                                                                                                    <Key frame="192" value="-35.6816" />
                                                                                                    <Key frame="223" value="-14.1482" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="0.441863" />
                                                                                                    <Key frame="61" value="-3.79963" />
                                                                                                    <Key frame="83" value="-10.4794" />
                                                                                                    <Key frame="163" value="-11.3583" />
                                                                                                    <Key frame="192" value="2.1997" />
                                                                                                    <Key frame="223" value="4.57277" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-2.63435" />
                                                                                                    <Key frame="61" value="-59.6769" />
                                                                                                    <Key frame="83" value="-76.5521" />
                                                                                                    <Key frame="163" value="-76.4642" />
                                                                                                    <Key frame="192" value="-50.9748" />
                                                                                                    <Key frame="223" value="-5.2711" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="18.1912" />
                                                                                                    <Key frame="61" value="99.545" />
                                                                                                    <Key frame="83" value="124.77" />
                                                                                                    <Key frame="163" value="124.506" />
                                                                                                    <Key frame="192" value="70.6625" />
                                                                                                    <Key frame="223" value="30.1445" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-0.00240423" />
                                                                                                    <Key frame="61" value="-29" />
                                                                                                    <Key frame="83" value="-35" />
                                                                                                    <Key frame="163" value="-36" />
                                                                                                    <Key frame="192" value="-15.9108" />
                                                                                                    <Key frame="223" value="-13.0104" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="0.441863" />
                                                                                                    <Key frame="61" value="6" />
                                                                                                    <Key frame="83" value="15" />
                                                                                                    <Key frame="163" value="17" />
                                                                                                    <Key frame="192" value="2.46337" />
                                                                                                    <Key frame="223" value="-3.68905" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-2.107" />
                                                                                                    <Key frame="61" value="1.9643" />
                                                                                                    <Key frame="83" value="2" />
                                                                                                    <Key frame="163" value="3.54635" />
                                                                                                    <Key frame="192" value="11.2525" />
                                                                                                    <Key frame="223" value="-0.437054" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-2.02391" />
                                                                                                    <Key frame="61" value="-40.972" />
                                                                                                    <Key frame="83" value="-45.6303" />
                                                                                                    <Key frame="163" value="-46.685" />
                                                                                                    <Key frame="192" value="-31.995" />
                                                                                                    <Key frame="223" value="-4.3091" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="23.8211" />
                                                                                                    <Key frame="61" value="100.291" />
                                                                                                    <Key frame="83" value="123.67" />
                                                                                                    <Key frame="163" value="124.373" />
                                                                                                    <Key frame="192" value="61.8782" />
                                                                                                    <Key frame="223" value="30.325" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-6.76526" />
                                                                                                    <Key frame="61" value="-47" />
                                                                                                    <Key frame="83" value="-61" />
                                                                                                    <Key frame="163" value="-59" />
                                                                                                    <Key frame="192" value="-21.0916" />
                                                                                                    <Key frame="223" value="-14.3239" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="0.969213" />
                                                                                                    <Key frame="61" value="4" />
                                                                                                    <Key frame="83" value="8" />
                                                                                                    <Key frame="163" value="15" />
                                                                                                    <Key frame="192" value="1.23289" />
                                                                                                    <Key frame="223" value="0.090296" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_extStand_seeToy3" robot="" id="3" tooltip="Anim_extStand_seeToy" bitmap_expanded="1" plugin="" x="684" y="238">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="1" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="LED" mute="0">
                                                                                                <BehaviorKeyframe name="happy" index="71" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Light_AmusedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-09-25 16:26:32 +0200 (ven, 25 sep 2009) ***" bitmap_expanded="1" plugin="" x="154" y="57">
                                                                                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="normal" index="142" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="FaceLeds" robot="" id="1" tooltip="FaceLeds" bitmap_expanded="1" plugin="" x="159" y="73">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALLeds.fadeRGB("FaceLeds", 0xFFFFFF, 1)
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="36" value="34.8906" />
                                                                                                    <Key frame="65" value="-18.8991" />
                                                                                                    <Key frame="79" value="10.6325" />
                                                                                                    <Key frame="115" value="14.6755" />
                                                                                                    <Key frame="149" value="15.2908" />
                                                                                                    <Key frame="178" value="15.4665" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="36" value="11.5993" />
                                                                                                    <Key frame="65" value="22.41" />
                                                                                                    <Key frame="79" value="26.8925" />
                                                                                                    <Key frame="115" value="27.1561" />
                                                                                                    <Key frame="149" value="27.7714" />
                                                                                                    <Key frame="178" value="2.89802" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="32" value="87.2741" />
                                                                                                    <Key frame="73" value="90.0866" />
                                                                                                    <Key frame="87" value="94.3054" />
                                                                                                    <Key frame="111" value="85.5163" />
                                                                                                    <Key frame="145" value="76.7271" />
                                                                                                    <Key frame="174" value="90.5261" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="32" value="13.6208" />
                                                                                                    <Key frame="73" value="11.5114" />
                                                                                                    <Key frame="87" value="13.6208" />
                                                                                                    <Key frame="111" value="10.8962" />
                                                                                                    <Key frame="145" value="7.55628" />
                                                                                                    <Key frame="174" value="10.3688" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="32" value="-67.5033" />
                                                                                                    <Key frame="73" value="-73.3041" />
                                                                                                    <Key frame="87" value="-62.845" />
                                                                                                    <Key frame="111" value="-50.0128" />
                                                                                                    <Key frame="145" value="-49.837" />
                                                                                                    <Key frame="174" value="-79.105" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="32" value="-19.158" />
                                                                                                    <Key frame="73" value="-19.158" />
                                                                                                    <Key frame="87" value="-38.5821" />
                                                                                                    <Key frame="111" value="-63.5433" />
                                                                                                    <Key frame="145" value="-63.6312" />
                                                                                                    <Key frame="174" value="-27.5956" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="73" value="-13.0983" />
                                                                                                    <Key frame="111" value="-13.0983" />
                                                                                                    <Key frame="145" value="-13.0983" />
                                                                                                    <Key frame="174" value="-12.0436" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="73" value="2.32145" />
                                                                                                    <Key frame="111" value="2.32145" />
                                                                                                    <Key frame="145" value="2.32145" />
                                                                                                    <Key frame="174" value="2.32145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="88.4215" />
                                                                                                    <Key frame="69" value="86.4" />
                                                                                                    <Key frame="83" value="88.4215" />
                                                                                                    <Key frame="107" value="84.5542" />
                                                                                                    <Key frame="141" value="74.2709" />
                                                                                                    <Key frame="170" value="93.695" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="-6.59428" />
                                                                                                    <Key frame="69" value="-6.06693" />
                                                                                                    <Key frame="83" value="-10.6373" />
                                                                                                    <Key frame="107" value="-5.53958" />
                                                                                                    <Key frame="141" value="-4.74856" />
                                                                                                    <Key frame="170" value="-7.82477" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="84.9889" />
                                                                                                    <Key frame="69" value="86.7467" />
                                                                                                    <Key frame="83" value="66.5316" />
                                                                                                    <Key frame="107" value="57.303" />
                                                                                                    <Key frame="141" value="51.6779" />
                                                                                                    <Key frame="170" value="86.3073" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="27.4246" />
                                                                                                    <Key frame="69" value="27.0731" />
                                                                                                    <Key frame="83" value="35.3349" />
                                                                                                    <Key frame="107" value="58.7141" />
                                                                                                    <Key frame="141" value="59.5051" />
                                                                                                    <Key frame="170" value="32.1708" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="69" value="-8.08844" />
                                                                                                    <Key frame="107" value="-8.61579" />
                                                                                                    <Key frame="141" value="-8.61579" />
                                                                                                    <Key frame="170" value="-8.61579" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="69" value="13.1414" />
                                                                                                    <Key frame="107" value="12.9614" />
                                                                                                    <Key frame="141" value="12.8214" />
                                                                                                    <Key frame="170" value="12.9214" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-22.7616" />
                                                                                                    <Key frame="85" value="-25.3104" />
                                                                                                    <Key frame="143" value="-25.5741" />
                                                                                                    <Key frame="172" value="-20.6522" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="9.84628" />
                                                                                                    <Key frame="85" value="5.16533" />
                                                                                                    <Key frame="143" value="4.28641" />
                                                                                                    <Key frame="172" value="5.18802" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="11.0768" />
                                                                                                    <Key frame="85" value="0.353182" />
                                                                                                    <Key frame="143" value="0.00161465" />
                                                                                                    <Key frame="172" value="1.23289" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="18.367" />
                                                                                                    <Key frame="85" value="6.46764" />
                                                                                                    <Key frame="143" value="7.17077" />
                                                                                                    <Key frame="172" value="17.2244" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-9.40682" />
                                                                                                    <Key frame="85" value="6" />
                                                                                                    <Key frame="143" value="4" />
                                                                                                    <Key frame="172" value="-3.78175" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-6.76526" />
                                                                                                    <Key frame="85" value="-5" />
                                                                                                    <Key frame="143" value="-6" />
                                                                                                    <Key frame="172" value="-4.56797" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-5.71056" />
                                                                                                    <Key frame="85" value="0.645925" />
                                                                                                    <Key frame="143" value="-2" />
                                                                                                    <Key frame="172" value="-4.2164" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="8.4352" />
                                                                                                    <Key frame="85" value="1.65544" />
                                                                                                    <Key frame="143" value="0.512843" />
                                                                                                    <Key frame="172" value="0.349163" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="17.5807" />
                                                                                                    <Key frame="85" value="12.5751" />
                                                                                                    <Key frame="143" value="15.1239" />
                                                                                                    <Key frame="172" value="20.2175" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-5.53477" />
                                                                                                    <Key frame="85" value="-3" />
                                                                                                    <Key frame="143" value="-4" />
                                                                                                    <Key frame="172" value="-6.23791" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="3.51807" />
                                                                                                    <Key frame="85" value="3" />
                                                                                                    <Key frame="143" value="5" />
                                                                                                    <Key frame="172" value="3.16651" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_extStand_seeToy4" robot="" id="6" tooltip="Anim_extStand_seeToy" bitmap_expanded="1" plugin="" x="685" y="342">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="1" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="LED" mute="0">
                                                                                                <BehaviorKeyframe name="happy" index="9" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Light_AmusedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-09-25 16:26:32 +0200 (ven, 25 sep 2009) ***" bitmap_expanded="1" plugin="" x="154" y="57">
                                                                                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="normal" index="45" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="FaceLeds" robot="" id="1" tooltip="FaceLeds" bitmap_expanded="1" plugin="" x="159" y="73">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALLeds.fadeRGB("FaceLeds", 0xFFFFFF, 1)
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="1.40386" />
                                                                                                    <Key frame="53" value="-5.45169" />
                                                                                                    <Key frame="74" value="-0.178188" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="28" value="20.4764" />
                                                                                                    <Key frame="53" value="22.41" />
                                                                                                    <Key frame="74" value="-6.85796" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="91.8445" />
                                                                                                    <Key frame="50" value="91.6687" />
                                                                                                    <Key frame="71" value="92.1081" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="10.0173" />
                                                                                                    <Key frame="50" value="10.9841" />
                                                                                                    <Key frame="71" value="11.2477" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="-58.2746" />
                                                                                                    <Key frame="50" value="-66.4485" />
                                                                                                    <Key frame="71" value="-82.3569" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="-58.9729" />
                                                                                                    <Key frame="50" value="-48.2502" />
                                                                                                    <Key frame="71" value="-32.3418" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="-0.705538" />
                                                                                                    <Key frame="50" value="-1.58446" />
                                                                                                    <Key frame="71" value="-1.93602" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="1.54145" />
                                                                                                    <Key frame="50" value="1.42145" />
                                                                                                    <Key frame="71" value="1.44145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="86.0484" />
                                                                                                    <Key frame="46" value="90.1793" />
                                                                                                    <Key frame="67" value="92.7282" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-0.498473" />
                                                                                                    <Key frame="46" value="-1.67235" />
                                                                                                    <Key frame="67" value="-5.80326" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="56.4241" />
                                                                                                    <Key frame="46" value="71.2778" />
                                                                                                    <Key frame="67" value="86.0436" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="46.6729" />
                                                                                                    <Key frame="46" value="42.1025" />
                                                                                                    <Key frame="67" value="32.6981" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-5.45169" />
                                                                                                    <Key frame="46" value="-4.74856" />
                                                                                                    <Key frame="67" value="-4.74856" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="6.04144" />
                                                                                                    <Key frame="46" value="5.94144" />
                                                                                                    <Key frame="67" value="6.02144" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-17.3123" />
                                                                                                    <Key frame="48" value="-17.3123" />
                                                                                                    <Key frame="69" value="0.00240423" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="6.85796" />
                                                                                                    <Key frame="48" value="6.85796" />
                                                                                                    <Key frame="69" value="-0.261271" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-7.73207" />
                                                                                                    <Key frame="48" value="-7.64418" />
                                                                                                    <Key frame="69" value="-25.0467" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="8.34731" />
                                                                                                    <Key frame="48" value="8.25942" />
                                                                                                    <Key frame="69" value="40.0762" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="2.81013" />
                                                                                                    <Key frame="48" value="2.81013" />
                                                                                                    <Key frame="69" value="-19.8659" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-7.81996" />
                                                                                                    <Key frame="48" value="-7.81996" />
                                                                                                    <Key frame="69" value="0.090296" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="0.266079" />
                                                                                                    <Key frame="48" value="0.266079" />
                                                                                                    <Key frame="69" value="0.178188" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-8.35212" />
                                                                                                    <Key frame="48" value="-8.35212" />
                                                                                                    <Key frame="69" value="-25.1394" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="10.3736" />
                                                                                                    <Key frame="48" value="10.3736" />
                                                                                                    <Key frame="69" value="39.8174" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="2.02391" />
                                                                                                    <Key frame="48" value="2.11181" />
                                                                                                    <Key frame="69" value="-20.1248" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="1.93602" />
                                                                                                    <Key frame="48" value="1.93602" />
                                                                                                    <Key frame="69" value="0.00240423" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_extStand_seeToy5" robot="" id="7" tooltip="Anim_extStand_seeToy" bitmap_expanded="1" plugin="" x="686" y="449">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="1" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="LED" mute="0">
                                                                                                <BehaviorKeyframe name="happy" index="9" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Light_AmusedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-09-25 16:26:32 +0200 (ven, 25 sep 2009) ***" bitmap_expanded="1" plugin="" x="154" y="57">
                                                                                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="normal" index="74" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="FaceLeds" robot="" id="1" tooltip="FaceLeds" bitmap_expanded="1" plugin="" x="159" y="73">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALLeds.fadeRGB("FaceLeds", 0xFFFFFF, 1)
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="0.0854875" />
                                                                                                    <Key frame="80" value="-3.60596" />
                                                                                                    <Key frame="101" value="-0.178188" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="27" value="29.5016" />
                                                                                                    <Key frame="80" value="29.0898" />
                                                                                                    <Key frame="101" value="-6.85796" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="89.9987" />
                                                                                                    <Key frame="77" value="92.987" />
                                                                                                    <Key frame="98" value="92.1081" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="9.57779" />
                                                                                                    <Key frame="77" value="11.2477" />
                                                                                                    <Key frame="98" value="11.2477" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="-73.0404" />
                                                                                                    <Key frame="77" value="-73.4799" />
                                                                                                    <Key frame="98" value="-82.3569" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="-35.418" />
                                                                                                    <Key frame="77" value="-37.8789" />
                                                                                                    <Key frame="98" value="-32.3418" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="0.788621" />
                                                                                                    <Key frame="77" value="-3.78175" />
                                                                                                    <Key frame="98" value="-1.93602" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="24" value="2.08145" />
                                                                                                    <Key frame="77" value="1.84145" />
                                                                                                    <Key frame="98" value="1.44145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="88.4215" />
                                                                                                    <Key frame="73" value="92.2887" />
                                                                                                    <Key frame="94" value="92.7282" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-2.63916" />
                                                                                                    <Key frame="73" value="-2.28759" />
                                                                                                    <Key frame="94" value="-5.80326" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="72.7719" />
                                                                                                    <Key frame="73" value="79.8912" />
                                                                                                    <Key frame="94" value="86.0436" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="38.2353" />
                                                                                                    <Key frame="73" value="40.6084" />
                                                                                                    <Key frame="94" value="32.6981" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-5.62747" />
                                                                                                    <Key frame="73" value="-4.22121" />
                                                                                                    <Key frame="94" value="-4.74856" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="6.62144" />
                                                                                                    <Key frame="73" value="6.68143" />
                                                                                                    <Key frame="94" value="6.02144" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-12.3024" />
                                                                                                    <Key frame="75" value="-15.8181" />
                                                                                                    <Key frame="96" value="-10.8083" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="4.57277" />
                                                                                                    <Key frame="75" value="5.80326" />
                                                                                                    <Key frame="96" value="3.95753" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="0.441863" />
                                                                                                    <Key frame="75" value="-4.04062" />
                                                                                                    <Key frame="96" value="-7.55628" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="10.7204" />
                                                                                                    <Key frame="75" value="21.4432" />
                                                                                                    <Key frame="96" value="22.41" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="0.437054" />
                                                                                                    <Key frame="75" value="-5.01223" />
                                                                                                    <Key frame="96" value="-8.96736" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-3.86483" />
                                                                                                    <Key frame="75" value="-4.04062" />
                                                                                                    <Key frame="96" value="-4.39218" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-1.66754" />
                                                                                                    <Key frame="75" value="1.58446" />
                                                                                                    <Key frame="96" value="-0.612838" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="3.51326" />
                                                                                                    <Key frame="75" value="0.173379" />
                                                                                                    <Key frame="96" value="-9.23104" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="7.56109" />
                                                                                                    <Key frame="75" value="12.7467" />
                                                                                                    <Key frame="96" value="23.2937" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="1.145" />
                                                                                                    <Key frame="75" value="-0.0854875" />
                                                                                                    <Key frame="96" value="-8.08363" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="1.76024" />
                                                                                                    <Key frame="75" value="-0.70073" />
                                                                                                    <Key frame="96" value="0.881321" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Anim_extStand_seeToy6" robot="" id="8" tooltip="Anim_extStand_seeToy" bitmap_expanded="1" plugin="" x="688" y="551">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="1" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="LED" mute="0">
                                                                                                <BehaviorKeyframe name="happy" index="9" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="Light_AmusedEyes" robot="" id="1" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-09-25 16:26:32 +0200 (ven, 25 sep 2009) ***" bitmap_expanded="1" plugin="" x="154" y="57">
                                                                                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );
    
    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;       
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );      

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="normal" index="86" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="FaceLeds" robot="" id="1" tooltip="FaceLeds" bitmap_expanded="1" plugin="" x="159" y="73">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALLeds.fadeRGB("FaceLeds", 0xFFFFFF, 1)
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-13.1862" />
                                                                                                    <Key frame="42" value="-12.5709" />
                                                                                                    <Key frame="96" value="-12.8346" />
                                                                                                    <Key frame="125" value="-4.92434" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="22.5858" />
                                                                                                    <Key frame="42" value="23.2889" />
                                                                                                    <Key frame="96" value="28.1229" />
                                                                                                    <Key frame="125" value="0.261271" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="87.2741" />
                                                                                                    <Key frame="39" value="84.9889" />
                                                                                                    <Key frame="93" value="86.9225" />
                                                                                                    <Key frame="122" value="83.5826" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="5.2711" />
                                                                                                    <Key frame="39" value="8.78677" />
                                                                                                    <Key frame="93" value="8.69888" />
                                                                                                    <Key frame="122" value="2.72224" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-65.4817" />
                                                                                                    <Key frame="39" value="-60.5598" />
                                                                                                    <Key frame="93" value="-66.4485" />
                                                                                                    <Key frame="122" value="-64.6907" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-32.5175" />
                                                                                                    <Key frame="39" value="-35.5937" />
                                                                                                    <Key frame="93" value="-30.6718" />
                                                                                                    <Key frame="122" value="-30.496" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-0.969213" />
                                                                                                    <Key frame="39" value="-2.11181" />
                                                                                                    <Key frame="93" value="-3.51807" />
                                                                                                    <Key frame="122" value="-3.43018" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="1.86145" />
                                                                                                    <Key frame="39" value="2.30145" />
                                                                                                    <Key frame="93" value="2.26145" />
                                                                                                    <Key frame="122" value="2.28145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="82.1812" />
                                                                                                    <Key frame="35" value="70.6674" />
                                                                                                    <Key frame="89" value="78.1381" />
                                                                                                    <Key frame="118" value="85.7847" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-12.483" />
                                                                                                    <Key frame="35" value="-13.9772" />
                                                                                                    <Key frame="89" value="-13.0983" />
                                                                                                    <Key frame="118" value="-1.84813" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="57.0393" />
                                                                                                    <Key frame="35" value="58.7093" />
                                                                                                    <Key frame="89" value="82.6158" />
                                                                                                    <Key frame="118" value="83.3189" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="70.5795" />
                                                                                                    <Key frame="35" value="39.6416" />
                                                                                                    <Key frame="89" value="42.3662" />
                                                                                                    <Key frame="118" value="34.1044" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-5.01223" />
                                                                                                    <Key frame="35" value="-25" />
                                                                                                    <Key frame="89" value="-24.0847" />
                                                                                                    <Key frame="118" value="-10" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="6.70144" />
                                                                                                    <Key frame="35" value="38" />
                                                                                                    <Key frame="89" value="36.5413" />
                                                                                                    <Key frame="118" value="11.5" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="-10.3688" />
                                                                                                    <Key frame="91" value="-10.3688" />
                                                                                                    <Key frame="120" value="-10.8083" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="1.84813" />
                                                                                                    <Key frame="91" value="5.62747" />
                                                                                                    <Key frame="120" value="1.93602" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="-4.39218" />
                                                                                                    <Key frame="91" value="-5.2711" />
                                                                                                    <Key frame="120" value="-8.34731" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="15.906" />
                                                                                                    <Key frame="91" value="18.1912" />
                                                                                                    <Key frame="120" value="24.7831" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="-2.90283" />
                                                                                                    <Key frame="91" value="-2.72705" />
                                                                                                    <Key frame="120" value="-7.82477" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="-1.40386" />
                                                                                                    <Key frame="91" value="-4.12851" />
                                                                                                    <Key frame="120" value="-0.261271" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="-2.54646" />
                                                                                                    <Key frame="91" value="1.49656" />
                                                                                                    <Key frame="120" value="-2.19489" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="1.31597" />
                                                                                                    <Key frame="91" value="1.75543" />
                                                                                                    <Key frame="120" value="-1.76024" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="4.83645" />
                                                                                                    <Key frame="91" value="6.33061" />
                                                                                                    <Key frame="120" value="12.6588" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="2.46337" />
                                                                                                    <Key frame="91" value="2.55126" />
                                                                                                    <Key frame="120" value="-1.75543" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="37" value="3.34229" />
                                                                                                    <Key frame="91" value="0.00240423" />
                                                                                                    <Key frame="120" value="3.95753" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="6" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="8" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="9" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="DecideToStop" robot="" id="11" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="506" y="66">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        if( random.random() < self.getParameter( 'rChanceToExit' ) ):
            self.output_exit();
        else:
            self.output_continue();

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="output_continue" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_exit" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                </Box>
                                                                <Box name="FaceLeds" robot="" id="12" tooltip="Turns on and off the face LEDs." bitmap_expanded="1" plugin="" x="513" y="298">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.ledName = "FaceLeds"
        
    def onLoad(self):
        self.ids = []
        
    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            ALLeds.stop(id)
        
    def getRGB(self, r, g, b):
        return 256*256*r + 256*g + b
        pass
        
    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self, p):
        r = self.clampColor(p[0])
        g = self.clampColor(p[1])
        b = self.clampColor(p[2])

        id = ALLeds.post.fadeRGB(self.ledName, self.getRGB(r, g, b), self.getParameter("duration"))
        self.ids.append(id)
        ALLeds.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="3" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="duration" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.5" min="0" max="1" tooltip="Fade duration in seconds." id="5" />
                                                                </Box>
                                                                <Box name="OhCestQuoiCa (sans couleur)" robot="" id="13" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="530" y="504">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random
import altools
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        time.sleep( 2. ); # temps que l'anim se lance
        nNum = random.randint( 1,6 );
        altools.playSound( "oh_cest_quoi_ca%d.wav" % nNum );
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="GeneratePhraseDescribingThings_ref" robot="" id="14" tooltip="Ask a question about something" bitmap_expanded="1" plugin="" x="534" y="407">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        strText = altools.generateQuestionAboutThings(p);
        self.log( "%s => %s" % ( str( p ), strText ) );        
        self.onStopped(strText) #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="GotoFind" robot="" id="15" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="638" y="54">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>20</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="GotoExit" robot="" id="16" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="640" y="121">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(100)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>100</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Say Text" robot="" id="17" tooltip="Say the sentence asked. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="726" y="405">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        
    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []
        
    def onUnload(self):
        #puts code for box cleanup here    
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        
    def onInput_onStart(self, p):
        sentence = "\RSPD="+ str( self.getParameter("speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ " 
        sentence += str(p)
        sentence +=  "\RST\ "
        id = self.tts.post.say(sentence)
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="5" />
                                                                    <Parameter name="speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="change the speed of the voice" id="6" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="18" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="771" y="61">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.getName(), int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Box name="FastStiff" robot="" id="7" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="265" y="9">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        ALMotion.stiffnessInterpolation("Body", 1., 0.7 );
        self.onStopped() #~ activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="ExtractInfo_GetRGB_ref" robot="" id="19" tooltip="Ask UsageVisionInfo (that should be already running) the median rgb color at a position&#x0A;&#x0A;v0.9" bitmap_expanded="1" plugin="" x="243" y="294">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <bitmap>media/images/box/icons_appu/luminosity.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# ExtractInfo_GetRGB_ref
# v0.9
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rPosX = self.getParameter( 'rPosX' );
        rPosY = self.getParameter( 'rPosY' );        
        nSampleSize = self.getParameter( 'nSampleSize' );
        demo = ALProxy( 'UsageVisionInfo' );
#        ret = demo.getPixelRGB( 80, 60 );
#        self.log( "rgb: %s" % str( ret ) );
        ret = demo.getAverageRGB( rPosX, rPosY, nSampleSize );
#        self.log( "rgbmedian: %s" % str( ret ) );        
        self.output_rgb( ret );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass
        
# ExtractInfo_GetRGB_ref - end
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_rgb" type="0" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Parameter name="nSampleSize" inherits_from_parent="0" content_type="1" value="20" default_value="3" min="1" max="1000" tooltip="size of the square to sample" id="6" />
                                                                    <Parameter name="rPosX" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.5" max="0.5" tooltip="Sample position (x)" id="7" />
                                                                    <Parameter name="rPosY" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.5" max="0.5" tooltip="Sample position (y)" id="8" />
                                                                </Box>
                                                                <Box name="RecognizeColor_ref" robot="" id="20" tooltip="Recognize color&#x0A;&#x0A;v0.9" bitmap_expanded="1" plugin="" x="339" y="408">
                                                                    <bitmap>media/images/box/icons_appu/luminosity.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# RecognizeColor_ref
# v0.91

import altools


class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onRGB(self, rgb):
        hsv = altools.rgbToHsv( rgb );
        self.log( "rgb: %s; hsv: %s" % ( str( rgb ), str( hsv ) ) );
        strColor, rDistance = altools.getColorNameFromHSV( hsv, altools.getDefaultSpeakLanguage() );
        self.log( "col: '%s', dist: %f" % (strColor, rDistance) );
        if( rDistance > 0.8 ):
            self.output_color_unknown();
        else:
            if( rDistance > 0.5 ):
                strColor = "presque " + strColor;
            self.onColorDetected(strColor) #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass
# RecognizeColor_ref - end
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onRGB" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onColorDetected" type="3" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="output_color_unknown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                <Link inputowner="18" indexofinput="2" outputowner="15" indexofoutput="3" />
                                                                <Link inputowner="15" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                <Link inputowner="16" indexofinput="2" outputowner="11" indexofoutput="5" />
                                                                <Link inputowner="18" indexofinput="2" outputowner="16" indexofoutput="3" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="17" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="6" indexofinput="3" outputowner="12" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="3" outputowner="17" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="20" indexofinput="2" outputowner="19" indexofoutput="5" />
                                                                <Link inputowner="14" indexofinput="2" outputowner="20" indexofoutput="3" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="20" indexofoutput="4" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="19" indexofoutput="5" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="19" indexofoutput="5" />
                                                                <Link inputowner="6" indexofinput="3" outputowner="19" indexofoutput="5" />
                                                                <Link inputowner="19" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="LookAtSomethingFake" index="80" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Text Edit" robot="" id="6" tooltip="Transmits the text you entered when the input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="25" y="301">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Dans cette frame, on n'as rien vu, mais on fait semblant que, pour 'meubler', l'exploration")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Dans cette frame, on n&apos;as rien vu, mais on fait semblant que, pour &apos;meubler&apos;, l&apos;exploration</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="stand_lookAround_negative1" robot="" id="1" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="477" y="39">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="speech" mute="0">
                                                                            <BehaviorKeyframe name="keyframe47" index="47" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Say" robot="" id="1" tooltip="Say the sentence configured as a parameter. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="117" y="51">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += self.getParameter("Text")
        sentence +=  "\RST\ "
        id = self.tts.post.say(str(sentence))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Text" inherits_from_parent="0" content_type="3" value="Qu&apos;est ce que c&apos;est moche ici! Tu as vraiment mauvais goût des fois, peuchêre!" default_value="Hello" custom_choice="0" tooltip="Text to synthesize." id="5" />
                                                                                        <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="6" />
                                                                                        <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="7" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="led" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="blinkRandom" robot="" id="5" tooltip="Blink randomly every 0~10 seconds." bitmap_expanded="1" plugin="" x="111" y="48">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="RandomInt" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="236" y="248">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                                            <Parameter name="max" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                                            <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" robot="" id="3" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="242" y="56">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                                            <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="419" y="58">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        self.onStopped()
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="5" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-33.4892" />
                                                                                <Key frame="89" value="-42.542" />
                                                                                <Key frame="151" value="23.0252" />
                                                                                <Key frame="213" value="31.1113" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="42" value="-13.0104" />
                                                                                <Key frame="89" value="-17.9323" />
                                                                                <Key frame="122" value="1" />
                                                                                <Key frame="151" value="-19.9538" />
                                                                                <Key frame="213" value="-22.6785" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="85.4284" />
                                                                                <Key frame="86" value="86.0436" />
                                                                                <Key frame="148" value="86.4831" />
                                                                                <Key frame="210" value="84.8131" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="0.498473" />
                                                                                <Key frame="86" value="3.24959" />
                                                                                <Key frame="148" value="0.788621" />
                                                                                <Key frame="210" value="0.498473" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="-60.0325" />
                                                                                <Key frame="86" value="-65.2181" />
                                                                                <Key frame="148" value="-68.3822" />
                                                                                <Key frame="210" value="-61.4387" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="-39.2852" />
                                                                                <Key frame="86" value="-32.8691" />
                                                                                <Key frame="148" value="-28.7382" />
                                                                                <Key frame="210" value="-28.2987" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="21" />
                                                                                <Key frame="86" value="20.6522" />
                                                                                <Key frame="148" value="20.3006" />
                                                                                <Key frame="210" value="20.0369" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="28" />
                                                                                <Key frame="86" value="27.9614" />
                                                                                <Key frame="148" value="27.9814" />
                                                                                <Key frame="210" value="27.9814" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="81.9175" />
                                                                                <Key frame="83" value="78.3139" />
                                                                                <Key frame="145" value="79.105" />
                                                                                <Key frame="207" value="79.4565" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="-1.84813" />
                                                                                <Key frame="83" value="-1.67235" />
                                                                                <Key frame="145" value="-5.71537" />
                                                                                <Key frame="207" value="-3.86964" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="51.6779" />
                                                                                <Key frame="83" value="41.9219" />
                                                                                <Key frame="145" value="50.2717" />
                                                                                <Key frame="207" value="46.4923" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="38.8505" />
                                                                                <Key frame="83" value="28.6551" />
                                                                                <Key frame="145" value="17.7565" />
                                                                                <Key frame="207" value="21.1843" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="0" />
                                                                                <Key frame="83" value="-1.145" />
                                                                                <Key frame="145" value="-1.0571" />
                                                                                <Key frame="207" value="-1.23289" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="36" value="32" />
                                                                                <Key frame="83" value="32.0214" />
                                                                                <Key frame="145" value="32.0214" />
                                                                                <Key frame="207" value="32.0214" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="-13.6208" />
                                                                                <Key frame="84" value="-13.5329" />
                                                                                <Key frame="146" value="-14.2361" />
                                                                                <Key frame="208" value="-14.4997" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="14.6803" />
                                                                                <Key frame="84" value="17.1413" />
                                                                                <Key frame="146" value="1.67235" />
                                                                                <Key frame="208" value="-0.0854875" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="12.1315" />
                                                                                <Key frame="84" value="12.2194" />
                                                                                <Key frame="146" value="14.2409" />
                                                                                <Key frame="208" value="12.5709" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="-5.29104" />
                                                                                <Key frame="84" value="-5.18802" />
                                                                                <Key frame="146" value="-5.27591" />
                                                                                <Key frame="208" value="-5.27591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="7.3805" />
                                                                                <Key frame="84" value="8.08363" />
                                                                                <Key frame="146" value="3.60116" />
                                                                                <Key frame="208" value="5.00742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="-11.5993" />
                                                                                <Key frame="84" value="-13.445" />
                                                                                <Key frame="146" value="-2.72224" />
                                                                                <Key frame="208" value="-1.40386" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="3.86964" />
                                                                                <Key frame="84" value="6.24272" />
                                                                                <Key frame="146" value="-9.75358" />
                                                                                <Key frame="208" value="-10.8083" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="14.8513" />
                                                                                <Key frame="84" value="15.4665" />
                                                                                <Key frame="146" value="14.5876" />
                                                                                <Key frame="208" value="12.3024" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="-5.44688" />
                                                                                <Key frame="84" value="-5.44688" />
                                                                                <Key frame="146" value="-5.90622" />
                                                                                <Key frame="208" value="-5.79845" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="5.27591" />
                                                                                <Key frame="84" value="5.01223" />
                                                                                <Key frame="146" value="3.43018" />
                                                                                <Key frame="208" value="5.10012" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="37" value="-2.28278" />
                                                                                <Key frame="84" value="-4.12851" />
                                                                                <Key frame="146" value="7.73688" />
                                                                                <Key frame="208" value="8.5279" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="stand_lookAround_negative2" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="600" y="39">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="speech" mute="0">
                                                                            <BehaviorKeyframe name="keyframe34" index="34" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Say" robot="" id="1" tooltip="Say the sentence configured as a parameter. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="117" y="51">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += self.getParameter("Text")
        sentence +=  "\RST\ "
        id = self.tts.post.say(str(sentence))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Text" inherits_from_parent="0" content_type="3" value="J&apos;aime pas trop la déco de cette pièce!" default_value="Hello" custom_choice="0" tooltip="Text to synthesize." id="5" />
                                                                                        <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="6" />
                                                                                        <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="7" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="led" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="blinkRandom" robot="" id="5" tooltip="Blink randomly every 0~10 seconds." bitmap_expanded="1" plugin="" x="111" y="48">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="RandomInt" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="236" y="248">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                                            <Parameter name="max" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                                            <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" robot="" id="3" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="242" y="56">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                                            <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="419" y="58">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        self.onStopped()
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="5" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="21.619" />
                                                                                <Key frame="81" value="19.949" />
                                                                                <Key frame="136" value="-9.49471" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="39" value="-4.57277" />
                                                                                <Key frame="81" value="-17.1413" />
                                                                                <Key frame="136" value="-15.2956" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="88.2409" />
                                                                                <Key frame="77" value="97.2937" />
                                                                                <Key frame="132" value="90.2624" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="6.58948" />
                                                                                <Key frame="77" value="10.1051" />
                                                                                <Key frame="132" value="3.95272" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-108.285" />
                                                                                <Key frame="77" value="-89.5641" />
                                                                                <Key frame="132" value="-83.7632" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="-31.6386" />
                                                                                <Key frame="77" value="-35.2422" />
                                                                                <Key frame="132" value="-34.3633" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="44" />
                                                                                <Key frame="77" value="14" />
                                                                                <Key frame="132" value="5" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="35" value="15" />
                                                                                <Key frame="77" value="19.6" />
                                                                                <Key frame="132" value="12" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="76.5561" />
                                                                                <Key frame="74" value="78.226" />
                                                                                <Key frame="129" value="89.1246" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-2.99072" />
                                                                                <Key frame="74" value="-4.22121" />
                                                                                <Key frame="129" value="-4.04542" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="38.67" />
                                                                                <Key frame="74" value="62.2249" />
                                                                                <Key frame="129" value="67.4106" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="68.1185" />
                                                                                <Key frame="74" value="64.6907" />
                                                                                <Key frame="129" value="48.0792" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-42" />
                                                                                <Key frame="74" value="-21" />
                                                                                <Key frame="129" value="-2" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="45" />
                                                                                <Key frame="74" value="42" />
                                                                                <Key frame="129" value="20.6" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-15.4665" />
                                                                                <Key frame="75" value="-16.697" />
                                                                                <Key frame="130" value="-17.3123" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="11.2525" />
                                                                                <Key frame="75" value="13.3619" />
                                                                                <Key frame="130" value="5.80326" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="12.6588" />
                                                                                <Key frame="75" value="8.44001" />
                                                                                <Key frame="130" value="5.62747" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-4.83645" />
                                                                                <Key frame="75" value="-5.29104" />
                                                                                <Key frame="130" value="-5.29104" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="7.3805" />
                                                                                <Key frame="75" value="8.69888" />
                                                                                <Key frame="130" value="10.193" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-8.87466" />
                                                                                <Key frame="75" value="-10.9841" />
                                                                                <Key frame="130" value="-5.71056" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-0.173379" />
                                                                                <Key frame="75" value="3.60596" />
                                                                                <Key frame="130" value="-2.54646" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="14.3239" />
                                                                                <Key frame="75" value="11.6872" />
                                                                                <Key frame="130" value="6.58948" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="-5.09532" />
                                                                                <Key frame="75" value="-5.90622" />
                                                                                <Key frame="130" value="-5.62267" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="6.33061" />
                                                                                <Key frame="75" value="6.94585" />
                                                                                <Key frame="130" value="9.23104" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="33" value="0.441863" />
                                                                                <Key frame="75" value="-1.66754" />
                                                                                <Key frame="130" value="2.81494" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="stand_lookAround_negative3" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="718" y="39">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="speech" mute="0">
                                                                            <BehaviorKeyframe name="keyframe35" index="35" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Say" robot="" id="1" tooltip="Say the sentence configured as a parameter. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="117" y="51">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += self.getParameter("Text")
        sentence +=  "\RST\ "
        id = self.tts.post.say(str(sentence))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Text" inherits_from_parent="0" content_type="3" value="C&apos;est nul ce coin!" default_value="Hello" custom_choice="0" tooltip="Text to synthesize." id="5" />
                                                                                        <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="6" />
                                                                                        <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="7" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="led" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="blinkRandom" robot="" id="5" tooltip="Blink randomly every 0~10 seconds." bitmap_expanded="1" plugin="" x="111" y="48">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="RandomInt" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="236" y="248">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                                            <Parameter name="max" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                                            <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" robot="" id="3" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="242" y="56">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                                            <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="419" y="58">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        self.onStopped()
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="5" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="-13.8893" />
                                                                                <Key frame="58" value="6.06212" />
                                                                                <Key frame="93" value="-17.5807" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="31" value="8.17153" />
                                                                                <Key frame="58" value="5.71056" />
                                                                                <Key frame="93" value="13.0056" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="86.3073" />
                                                                                <Key frame="55" value="96.0633" />
                                                                                <Key frame="90" value="96.4148" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="5.97423" />
                                                                                <Key frame="55" value="8.08363" />
                                                                                <Key frame="90" value="7.81996" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-46.9366" />
                                                                                <Key frame="55" value="-101.429" />
                                                                                <Key frame="90" value="-102.484" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="-47.1076" />
                                                                                <Key frame="55" value="-33.1328" />
                                                                                <Key frame="90" value="-20.0369" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="20.8279" />
                                                                                <Key frame="55" value="-24" />
                                                                                <Key frame="90" value="-26.0184" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="28" value="26.9814" />
                                                                                <Key frame="55" value="42" />
                                                                                <Key frame="90" value="40.4413" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="86.8394" />
                                                                                <Key frame="52" value="94.3102" />
                                                                                <Key frame="87" value="98.8806" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-11.1647" />
                                                                                <Key frame="52" value="-7.56109" />
                                                                                <Key frame="87" value="-6.85796" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="40.7794" />
                                                                                <Key frame="52" value="98.4363" />
                                                                                <Key frame="87" value="106.083" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="59.3293" />
                                                                                <Key frame="52" value="37.4443" />
                                                                                <Key frame="87" value="30.0614" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-1.0571" />
                                                                                <Key frame="52" value="35.6" />
                                                                                <Key frame="87" value="35.7695" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="30.7814" />
                                                                                <Key frame="52" value="38.5" />
                                                                                <Key frame="87" value="37.0213" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-19.158" />
                                                                                <Key frame="53" value="-14.9392" />
                                                                                <Key frame="88" value="-14.9392" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="7.64898" />
                                                                                <Key frame="53" value="18.196" />
                                                                                <Key frame="88" value="15.735" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-0.349163" />
                                                                                <Key frame="53" value="24.3484" />
                                                                                <Key frame="88" value="22.0632" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-5.18802" />
                                                                                <Key frame="53" value="-4.74856" />
                                                                                <Key frame="88" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="10.8962" />
                                                                                <Key frame="53" value="-1.67235" />
                                                                                <Key frame="88" value="0.0854875" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-7.90785" />
                                                                                <Key frame="53" value="-13.3571" />
                                                                                <Key frame="88" value="-11.9509" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="1.84813" />
                                                                                <Key frame="53" value="1.145" />
                                                                                <Key frame="88" value="0.090296" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="3.24959" />
                                                                                <Key frame="53" value="26.1014" />
                                                                                <Key frame="88" value="22.5858" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-5.88634" />
                                                                                <Key frame="53" value="-5.90622" />
                                                                                <Key frame="88" value="-5.88634" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="9.05525" />
                                                                                <Key frame="53" value="-0.173379" />
                                                                                <Key frame="88" value="1.40867" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="0.529755" />
                                                                                <Key frame="53" value="-0.261271" />
                                                                                <Key frame="88" value="0.529755" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="stand_lookAround_positive1" robot="" id="4" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="527" y="167">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="speech" mute="0">
                                                                            <BehaviorKeyframe name="keyframe55" index="55" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Say" robot="" id="1" tooltip="Say the sentence configured as a parameter. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="117" y="51">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += self.getParameter("Text")
        sentence +=  "\RST\ "
        id = self.tts.post.say(str(sentence))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Text" inherits_from_parent="0" content_type="3" value="J&apos;aime bien cet endroit, chouette!" default_value="Hello" custom_choice="0" tooltip="Text to synthesize." id="5" />
                                                                                        <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="6" />
                                                                                        <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="7" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="led" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="blinkRandom" robot="" id="5" tooltip="Blink randomly every 0~10 seconds." bitmap_expanded="1" plugin="" x="111" y="48">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="RandomInt" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="236" y="248">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                                            <Parameter name="max" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                                            <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" robot="" id="3" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="242" y="56">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                                            <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="419" y="58">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        self.onStopped()
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="5" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-28.8309" />
                                                                                <Key frame="63" value="-41.4873" />
                                                                                <Key frame="115" value="21.619" />
                                                                                <Key frame="156" value="29.1776" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="32" value="-14.5924" />
                                                                                <Key frame="63" value="-16.6139" />
                                                                                <Key frame="94" value="7" />
                                                                                <Key frame="115" value="-3.86964" />
                                                                                <Key frame="156" value="-6.94585" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="73.563" />
                                                                                <Key frame="60" value="80.9459" />
                                                                                <Key frame="112" value="72.5962" />
                                                                                <Key frame="153" value="83.6705" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="7.64418" />
                                                                                <Key frame="60" value="8.17153" />
                                                                                <Key frame="112" value="4.65586" />
                                                                                <Key frame="153" value="3.33748" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="-55.4621" />
                                                                                <Key frame="60" value="-53.88" />
                                                                                <Key frame="112" value="-51.1554" />
                                                                                <Key frame="153" value="-48.6944" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="-89.1198" />
                                                                                <Key frame="60" value="-88.7682" />
                                                                                <Key frame="112" value="-88.5046" />
                                                                                <Key frame="153" value="-81.4732" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="8.4352" />
                                                                                <Key frame="60" value="8.87466" />
                                                                                <Key frame="112" value="25" />
                                                                                <Key frame="153" value="24.6952" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="12.9614" />
                                                                                <Key frame="60" value="12.9814" />
                                                                                <Key frame="112" value="21.3" />
                                                                                <Key frame="153" value="21.2014" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="81.5659" />
                                                                                <Key frame="57" value="84.73" />
                                                                                <Key frame="109" value="89.2125" />
                                                                                <Key frame="150" value="90.7946" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="-1.67235" />
                                                                                <Key frame="57" value="-0.969213" />
                                                                                <Key frame="109" value="-1.145" />
                                                                                <Key frame="150" value="-0.969213" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="57.4788" />
                                                                                <Key frame="57" value="49.3049" />
                                                                                <Key frame="109" value="55.9846" />
                                                                                <Key frame="150" value="54.842" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="88.4215" />
                                                                                <Key frame="57" value="80.1597" />
                                                                                <Key frame="109" value="71.0189" />
                                                                                <Key frame="150" value="66.6243" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="10.2809" />
                                                                                <Key frame="57" value="10.2809" />
                                                                                <Key frame="109" value="-5" />
                                                                                <Key frame="150" value="-4.57277" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="26" value="22.5414" />
                                                                                <Key frame="57" value="22.5414" />
                                                                                <Key frame="109" value="15.1" />
                                                                                <Key frame="150" value="15.3814" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-13.445" />
                                                                                <Key frame="58" value="-13.6208" />
                                                                                <Key frame="110" value="-13.7087" />
                                                                                <Key frame="151" value="-14.4118" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="16.7018" />
                                                                                <Key frame="58" value="19.1628" />
                                                                                <Key frame="110" value="5.18802" />
                                                                                <Key frame="151" value="1.58446" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="10.2857" />
                                                                                <Key frame="58" value="10.1978" />
                                                                                <Key frame="110" value="7.64898" />
                                                                                <Key frame="151" value="5.3638" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-5.29104" />
                                                                                <Key frame="58" value="-5.29104" />
                                                                                <Key frame="110" value="-5.29104" />
                                                                                <Key frame="151" value="-5.29104" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="7.81996" />
                                                                                <Key frame="58" value="7.90785" />
                                                                                <Key frame="110" value="8.08363" />
                                                                                <Key frame="151" value="9.66569" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-13.3571" />
                                                                                <Key frame="58" value="-15.2029" />
                                                                                <Key frame="110" value="-5.18321" />
                                                                                <Key frame="151" value="-2.63435" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="6.59428" />
                                                                                <Key frame="58" value="8.70368" />
                                                                                <Key frame="110" value="-4.56797" />
                                                                                <Key frame="151" value="-7.29261" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="12.4782" />
                                                                                <Key frame="58" value="13.2692" />
                                                                                <Key frame="110" value="8.61098" />
                                                                                <Key frame="151" value="6.58948" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-4.30429" />
                                                                                <Key frame="58" value="-4.65586" />
                                                                                <Key frame="110" value="-5.53477" />
                                                                                <Key frame="151" value="-5.88634" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="4.57277" />
                                                                                <Key frame="58" value="4.22121" />
                                                                                <Key frame="110" value="6.94585" />
                                                                                <Key frame="151" value="8.26423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="27" value="-4.04062" />
                                                                                <Key frame="58" value="-5.53477" />
                                                                                <Key frame="110" value="4.3091" />
                                                                                <Key frame="151" value="6.50639" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="stand_lookAround_positive2" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="539" y="289">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="speech" mute="0">
                                                                            <BehaviorKeyframe name="keyframe59" index="59" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Say" robot="" id="1" tooltip="Say the sentence configured as a parameter. See box parameters for fine tuning of the voice." bitmap_expanded="1" plugin="" x="117" y="51">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += self.getParameter("Text")
        sentence +=  "\RST\ "
        id = self.tts.post.say(str(sentence))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Text" inherits_from_parent="0" content_type="3" value="C&apos;est vraiment sympa ici!" default_value="Hello" custom_choice="0" tooltip="Text to synthesize." id="5" />
                                                                                        <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="6" />
                                                                                        <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="7" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <BehaviorLayer name="led" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="blinkRandom" robot="" id="5" tooltip="Blink randomly every 0~10 seconds." bitmap_expanded="1" plugin="" x="111" y="48">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="RandomInt" robot="" id="2" tooltip="Generate a random number between 0 and a max number." bitmap_expanded="1" plugin="" x="236" y="248">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass
        
    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0                  
            self.output_RandomValue(nVal)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                                                                                            <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                                            <Parameter name="max" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                                                                                            <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" robot="" id="3" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="242" y="56">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                                                            <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="blink" robot="" id="1" tooltip="blink" bitmap_expanded="1" plugin="" x="419" y="58">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );
        
        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );
        
        self.onStopped()
        

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="5" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="-24.3484" />
                                                                                <Key frame="59" value="-38.6748" />
                                                                                <Key frame="94" value="-16.1745" />
                                                                                <Key frame="129" value="8.87466" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="29" value="-15.9108" />
                                                                                <Key frame="59" value="-5.53958" />
                                                                                <Key frame="94" value="-17.2292" />
                                                                                <Key frame="129" value="2.63435" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="90.7897" />
                                                                                <Key frame="55" value="93.7781" />
                                                                                <Key frame="90" value="89.9987" />
                                                                                <Key frame="125" value="89.8229" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="3.77694" />
                                                                                <Key frame="55" value="5.71056" />
                                                                                <Key frame="90" value="7.64418" />
                                                                                <Key frame="125" value="9.57779" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-58.0988" />
                                                                                <Key frame="55" value="-60.5598" />
                                                                                <Key frame="90" value="-52.298" />
                                                                                <Key frame="125" value="-57.5715" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="-56.4241" />
                                                                                <Key frame="55" value="-50.008" />
                                                                                <Key frame="90" value="-61.2581" />
                                                                                <Key frame="125" value="-32.6933" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="4.48007" />
                                                                                <Key frame="55" value="-24" />
                                                                                <Key frame="90" value="-24.8758" />
                                                                                <Key frame="125" value="-8" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="25" value="12.8014" />
                                                                                <Key frame="55" value="10" />
                                                                                <Key frame="90" value="10.1614" />
                                                                                <Key frame="125" value="21.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="86.1363" />
                                                                                <Key frame="52" value="87.5426" />
                                                                                <Key frame="87" value="88.6852" />
                                                                                <Key frame="122" value="91.8493" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="-2.37548" />
                                                                                <Key frame="52" value="-2.11181" />
                                                                                <Key frame="87" value="-2.11181" />
                                                                                <Key frame="122" value="-3.60596" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="52.469" />
                                                                                <Key frame="52" value="50.008" />
                                                                                <Key frame="87" value="59.4124" />
                                                                                <Key frame="122" value="79.6275" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="67.679" />
                                                                                <Key frame="52" value="61.2629" />
                                                                                <Key frame="87" value="49.3976" />
                                                                                <Key frame="122" value="35.5107" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="10.193" />
                                                                                <Key frame="52" value="35.6" />
                                                                                <Key frame="87" value="35.9453" />
                                                                                <Key frame="122" value="1.1" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="22" value="22.5214" />
                                                                                <Key frame="52" value="14.1" />
                                                                                <Key frame="87" value="14.0614" />
                                                                                <Key frame="122" value="15" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-11.2477" />
                                                                                <Key frame="53" value="-11.2477" />
                                                                                <Key frame="88" value="-10.4567" />
                                                                                <Key frame="123" value="-11.863" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="9.75839" />
                                                                                <Key frame="53" value="11.0768" />
                                                                                <Key frame="88" value="7.03374" />
                                                                                <Key frame="123" value="11.0768" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="7.73688" />
                                                                                <Key frame="53" value="8.00055" />
                                                                                <Key frame="88" value="13.0983" />
                                                                                <Key frame="123" value="10.7252" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-5.29104" />
                                                                                <Key frame="53" value="-5.18802" />
                                                                                <Key frame="88" value="-4.83645" />
                                                                                <Key frame="123" value="-5.29104" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="5.88634" />
                                                                                <Key frame="53" value="6.3258" />
                                                                                <Key frame="88" value="2.37067" />
                                                                                <Key frame="123" value="6.3258" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-8.69888" />
                                                                                <Key frame="53" value="-9.57779" />
                                                                                <Key frame="88" value="-6.76526" />
                                                                                <Key frame="123" value="-9.13834" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="0.266079" />
                                                                                <Key frame="53" value="1.58446" />
                                                                                <Key frame="88" value="-3.95272" />
                                                                                <Key frame="123" value="0.881321" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="9.13834" />
                                                                                <Key frame="53" value="9.66569" />
                                                                                <Key frame="88" value="14.5876" />
                                                                                <Key frame="123" value="12.2145" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="-5.53477" />
                                                                                <Key frame="53" value="-5.18321" />
                                                                                <Key frame="88" value="-5.79845" />
                                                                                <Key frame="123" value="-5.90622" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="4.74856" />
                                                                                <Key frame="53" value="4.74856" />
                                                                                <Key frame="88" value="1.93602" />
                                                                                <Key frame="123" value="5.71537" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                <Key frame="23" value="0.881321" />
                                                                                <Key frame="53" value="0.00240423" />
                                                                                <Key frame="88" value="3.69386" />
                                                                                <Key frame="123" value="-0.0854875" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Dispatcher" robot="" id="7" tooltip="Dispatch an event carrying an information, depending on the information value. The information will be tested against all the values of the table, and the matching output will be stimulated!" bitmap_expanded="1" plugin="dispatcher_plugin" x="176" y="148">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		elif(p == (2)):
			self.output_3(p)
		elif(p == (3)):
			self.output_4(p)
		elif(p == (4)):
			self.output_5(p)
		elif(p == (5)):
			self.output_6(p)
		elif(p == (6)):
			self.output_7(p)
		else:
			self.onDefault()]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <keywords>
                                                                            <keyword>0</keyword>
                                                                            <keyword>1</keyword>
                                                                            <keyword>2</keyword>
                                                                            <keyword>3</keyword>
                                                                            <keyword>4</keyword>
                                                                            <keyword>5</keyword>
                                                                            <keyword>6</keyword>
                                                                            <keyword></keyword>
                                                                        </keywords>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                    <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                    <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                    <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                    <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                    <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                    <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                    <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                    <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                                </Box>
                                                                <Box name="Random Int." robot="" id="8" tooltip="Generate a random integer between 0 and a max number set as parameter.&#x0A;Note that the max number is excluded from the range of possible integers." bitmap_expanded="1" plugin="" x="266" y="17">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max")
        if(self.getParameter("Shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Generates a random integer." id="2" />
                                                                    <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                    <Parameter name="Max" inherits_from_parent="0" content_type="1" value="7" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max, excluding max!" id="4" />
                                                                    <Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="When this option is selected the box will give all the numbers between 0 and max before giving the same number twice." id="5" />
                                                                </Box>
                                                                <Box name="TheEnd" robot="" id="9" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="542" y="406">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.output_ending();
        time.sleep( 0.3 ); # laisse un peu de temps pour que les infos de sorties soient mise a jour        
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_ending" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                </Box>
                                                                <Box name="GotoFind" robot="" id="15" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="733" y="356">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>20</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="18" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="866" y="363">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.getName(), int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Box name="WaitStabilizeBody" robot="" id="10" tooltip="The wait can be stopped any time, but the box won&apos;t output a signal. You may reset it any time, and it will start over." bitmap_expanded="1" plugin="" x="133" y="15">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False;

    def onUnload(self):
        self.onInput_onStop();

    def triggerOutput( self, rPeriod = 1 ):
        self.timerOutput();
        self.onInput_onStop(); # to clean everything

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel();
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
        self.tb.start();

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") );

    def onInput_onStop(self):
        if( self.tb ):
            self.tb.cancel();
            self.tb = False;]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang after a certain amount of time.&#x0A;WARNING: not outputted if stopped before time lapse." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1.5" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="11" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="339" y="481">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LookAt_Fake_Begin")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>LookAt_Fake_Begin</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="12" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="347" y="587">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LookAt_Fake_End")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>LookAt_Fake_End</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="FastStiff" robot="" id="13" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="53" y="193">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        ALMotion.stiffnessInterpolation("Body", 1., 0.7 );
        self.onStopped() #~ activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Link inputowner="7" indexofinput="2" outputowner="8" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="6" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="7" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="7" indexofoutput="8" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="9" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="7" indexofoutput="10" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="3" />
                                                                <Link inputowner="18" indexofinput="2" outputowner="15" indexofoutput="3" />
                                                                <Link inputowner="15" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="3" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Exit" index="100" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="StopWalk" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="83" y="82">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="ChangeCamera" robot="" id="2" tooltip="Change the currently used camera.&#x0A;*** ref box in: ./4_localize/ChangeCamera/ExampleChangeCamera.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" bitmap_expanded="1" plugin="" x="379" y="74">
                                                                    <bitmap>media/images/box/interaction/look.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self),
        self.kCameraSelectID = 18;
        self.cameraModule = ALProxy( "ALVideoDevice" ); # "ALVideoDevice"

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onUseTopCamera(self):
        #~ self.log( self.boxName + ": Use Top Camera" );
        self.cameraModule.setParam( self.kCameraSelectID, 0 );
        self.output_Finished();

    def onInput_onUseBottomCamera(self):
        #~ self.log( self.boxName + ": Use Bottom Camera" );    
        self.cameraModule.setParam( self.kCameraSelectID, 1 );
        self.output_Finished();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onUseTopCamera" type="1" type_size="1" nature="1" inner="0" tooltip="use the camera at the top of the head (forehead)" id="2" />
                                                                    <Input name="onUseBottomCamera" type="1" type_size="1" nature="1" inner="0" tooltip="Use the camera at the bottom of the head (mouth)" id="3" />
                                                                    <Output name="output_Finished" type="1" type_size="1" nature="1" inner="0" tooltip="The change is finished." id="4" />
                                                                </Box>
                                                                <Box name="ReallyStopWalkAgain" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="510" y="69">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # really, really stop the walk
        ALMotion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0 );
        time.sleep( 2. );
        ALMotion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0 );
        ALMotion.killWalk();
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="ExitPoseWalk" robot="" id="6" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="237" y="84">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="Dispatcher" robot="" id="1" tooltip="Dispatch an event carrying an information, depending on the information value. The information will be tested against all the values of the table, and the matching output will be stimulated!" bitmap_expanded="1" plugin="dispatcher_plugin" x="314" y="180">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self, p):
		if(p == (0)):
			self.output_1(p)
		elif(p == (1)):
			self.output_2(p)
		else:
			self.onDefault()]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <keywords>
                                                                                                <keyword>0</keyword>
                                                                                                <keyword>1</keyword>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                            </keywords>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                    </Box>
                                                                                    <Box name="End" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="845" y="61">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Box name="fromWalk_1" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="658" y="348">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-0.617646" />
                                                                                                    <Key frame="43" value="-0.090296" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-5" />
                                                                                                    <Key frame="43" value="-12.1315" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="81.3853" />
                                                                                                    <Key frame="41" value="92.196" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="9.40201" />
                                                                                                    <Key frame="41" value="10.2809" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="-50.0128" />
                                                                                                    <Key frame="41" value="-70.5795" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="-45.7892" />
                                                                                                    <Key frame="41" value="-32.8691" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="3.68905" />
                                                                                                    <Key frame="41" value="5.44688" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="17" value="7.08143" />
                                                                                                    <Key frame="41" value="12.8614" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="84.2906" />
                                                                                                    <Key frame="39" value="86.3121" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-6.77007" />
                                                                                                    <Key frame="39" value="-7.12163" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="56.9514" />
                                                                                                    <Key frame="39" value="67.7621" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="41.3994" />
                                                                                                    <Key frame="39" value="25.1394" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="4.91953" />
                                                                                                    <Key frame="39" value="9.13834" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="15.3614" />
                                                                                                    <Key frame="39" value="22.5014" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-9.57779" />
                                                                                                    <Key frame="40" value="-9.22623" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="3.51807" />
                                                                                                    <Key frame="40" value="6.4185" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-14.2361" />
                                                                                                    <Key frame="40" value="11.692" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="42.6251" />
                                                                                                    <Key frame="40" value="-5.18802" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-21.448" />
                                                                                                    <Key frame="40" value="4.04062" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-1.75543" />
                                                                                                    <Key frame="40" value="-6.15002" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-1.93121" />
                                                                                                    <Key frame="40" value="-3.86483" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-14.4166" />
                                                                                                    <Key frame="40" value="10.8083" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="36.7411" />
                                                                                                    <Key frame="40" value="-4.2164" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="-16.2576" />
                                                                                                    <Key frame="40" value="3.69386" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="16" value="3.43018" />
                                                                                                    <Key frame="40" value="3.78175" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="fromWalk_2" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="659" y="478">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="-0.881321" />
                                                                                                    <Key frame="51" value="-0.529755" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="23" value="2.37067" />
                                                                                                    <Key frame="51" value="-11.9557" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="91.8445" />
                                                                                                    <Key frame="49" value="92.196" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="22.8494" />
                                                                                                    <Key frame="49" value="10.2809" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-64.6028" />
                                                                                                    <Key frame="49" value="-70.6674" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="-88.944" />
                                                                                                    <Key frame="49" value="-33.8359" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="2.98591" />
                                                                                                    <Key frame="49" value="5.44688" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="21" value="7.42143" />
                                                                                                    <Key frame="49" value="12.8214" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="97.4743" />
                                                                                                    <Key frame="47" value="86.2242" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="-18.196" />
                                                                                                    <Key frame="47" value="-7.29742" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="70.311" />
                                                                                                    <Key frame="47" value="68.0258" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="88.3336" />
                                                                                                    <Key frame="47" value="25.1394" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="4.74375" />
                                                                                                    <Key frame="47" value="9.22623" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="19" value="15.6214" />
                                                                                                    <Key frame="47" value="22.3014" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-16.4333" />
                                                                                                    <Key frame="48" value="-9.05044" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="2.37548" />
                                                                                                    <Key frame="48" value="6.4185" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-31.7265" />
                                                                                                    <Key frame="48" value="11.7799" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="76.815" />
                                                                                                    <Key frame="48" value="-5.29" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-35.8622" />
                                                                                                    <Key frame="48" value="4.04062" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="0.79343" />
                                                                                                    <Key frame="48" value="-6.06212" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="2.81494" />
                                                                                                    <Key frame="48" value="-3.95272" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-30.0614" />
                                                                                                    <Key frame="48" value="11.072" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="71.7221" />
                                                                                                    <Key frame="48" value="-4.30429" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-32.2539" />
                                                                                                    <Key frame="48" value="3.86964" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-0.612838" />
                                                                                                    <Key frame="48" value="3.69386" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Random Int." robot="" id="2" tooltip="Generate a random integer between 0 and a max number set as parameter.&#x0A;Note that the max number is excluded from the range of possible integers." bitmap_expanded="1" plugin="" x="90" y="179">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max")
        if(self.getParameter("Shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Generates a random integer." id="2" />
                                                                                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                                                                        <Parameter name="Max" inherits_from_parent="0" content_type="1" value="2" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max, excluding max!" id="4" />
                                                                                        <Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between 0 and max before giving the same number twice." id="5" />
                                                                                    </Box>
                                                                                    <Box name="IsStanding" robot="" id="4" tooltip="Are we standing ? (using ALRobotPose)" bitmap_expanded="1" plugin="" x="57" y="28">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        try:
            rp = ALProxy( "ALRobotPose" );
            pose = rp.getActualPoseAndTime();
            if( pose[0] == 'Stand' ):
                self.output_yes();
                return;
        except BaseException, err:
            print( "ERR: %s: err: %s" % ( self.getName(), str( err ) ) );
        self.output_no();]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="FastStiff" robot="" id="7" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="517" y="187">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        ALMotion.stiffnessInterpolation("Body", 1., 0.7 );
        self.onStopped() #~ activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="construct map" mute="0">
                                                        <BehaviorKeyframe name="waymap" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="Timer" robot="" id="1" tooltip="send a bang with a predefined period&#x0A;*** ref box in: ./4_localize/Time/Timer/ExampleTimer.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="152" y="77">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading

class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False
  
  def onUnload(self):
    if( self.tb ):
      self.tb.cancel()
      self.tb = False;
  
  def startTimer(self, period = 1):
    if( self.tb ):
      self.tb.cancel()
    self.tb = threading.Timer(period, self.startTimer, [period])
    self.tb.start()
    self.timerOutput()
  
  def onInput_onStart(self):
    self.startTimer( self.getParameter("period") )
  
  def onInput_onStop(self):
    self.onUnload()
    self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="start the timer with a specified period value (seconds)" id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="stop the timer." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="onStopped" id="4" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang periodically" id="5" />
                                                                    <Parameter name="period" inherits_from_parent="0" content_type="2" value="0.4" default_value="1" min="0" max="5000" tooltip="Define the period of the timer box (in seconds). The box output will be stimulated at this period." id="6" />
                                                                </Box>
                                                                <Box name="ConstructWayMap_ref" robot="" id="2" tooltip="Construct and store waymap&#x0A;v0.8" bitmap_expanded="1" plugin="" x="309" y="93">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# ConstructWayMap
# v0.8
import altools
import struct
import behaviordata

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
            
    def __del__(self):
        #~ print( "%s: _del_ !!!" % self.boxName );
        pass

    def onLoad(self):
        #~ puts code for box initialization here
        print( "%s: onLoad: bActivateWayMap: %s" % ( self.boxName, str( self.getParameter( 'bOuputMapToPng' ) ) ) );

    def onUnload(self):
        print( "%s: onUnload - begin" % self.boxName );
        print( "%s: onUnload: bActivateWayMap: %s" % ( self.boxName, str( self.getParameter( 'bOuputMapToPng' ) ) ) );
        if( self.getParameter( 'bOuputMapToPng' ) ):
#            behaviordata.wayMap.toString();
            behaviordata.wayMap.drawToImage();
        print( "%s: onUnload - end" % self.boxName );            
    # end



    def onInput_onStart(self):
        behaviordata.wayMap.updateRobotPosition();
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass
        
    def onInput_onOutputMap( self ):
#        self.outputToConsole();
        behaviordata.wayMap.drawToImage();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="onOutputMap" type="1" type_size="1" nature="1" inner="0" tooltip="export the map to the print windows" id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                    <Parameter name="bOuputMapToPng" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="activate the output of a map in png on the robot..." id="6" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="behavior_layer2" mute="0">
                                                        <BehaviorKeyframe name="timeout" index="1" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="getParamTimeout" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="137" y="73">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.output_value( self.getParameter( 'rTimeOut' ) );
        time.sleep( 1. ); # time for the parameters to be received by folowing box
        self.output_launch_it();
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="output_value" type="2" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_launch_it" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                </Box>
                                                                <Box name="Wait" robot="" id="2" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" bitmap_expanded="1" plugin="" x="312" y="76">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.tb = False;
  
  def onUnload(self):
    self.onInput_onStop();
    
  def triggerOutput( self, rPeriod = 1 ):
    self.timerOutput();
    self.onInput_onStop(); # to clean everything
  
  def startTimer( self, rPeriod = 1 ):
    if( self.tb ):
      self.tb.cancel();
    self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] );
    self.tb.start();

  def onInput_onStart(self):
    self.startTimer( self.getParameter("timeout") );
  
  def onInput_onStop(self):
    if( self.tb ):
      self.tb.cancel();
      self.tb = False;]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                                                    <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1000" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                                                </Box>
                                                                <Box name="GotoExit" robot="" id="3" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="509" y="154">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(100)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>100</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="4" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="675" y="95">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.getName(), int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="5" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="361" y="351">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Timeout_NoWalkNoMove")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Timeout_NoWalkNoMove</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="7" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="429" y="0">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Timeout")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Timeout</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="TimeoutNoWalkNoMove" robot="" id="8" tooltip="Our template for the boxes using a while loop in their start method.&#x0A;v1.0" bitmap_expanded="1" plugin="" x="146" y="300">
                                                                    <bitmap>media/images/box/loop.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# TimeoutNoWalkNoMove
# v1.0
import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);

    def onLoad(self):
        self.bMustStop = False;
        self.bIsRunning = False;
        self.info = ALProxy( 'ALInfo' );

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        self.log( self.boxName + ": start - begin" );
        
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" );
            return;

        self.bIsRunning = True;
        self.bMustStop = False;
        
        rPeriod = self.getParameter( 'rPeriod' );
        timeLastWalking = time.time();
        nOldMagic = 0;
        while( not self.bMustStop ):
            bCurrentWalking = ALMotion.walkIsActive();
            nMagic = self.info.getAnglesMagic();
            print( "nAnglesMagic: %d" % nMagic );
            bMoving = nOldMagic != nMagic;
            if( bCurrentWalking or bMoving ):
                timeLastWalking = time.time();
                nOldMagic = nMagic;
            else:
                if( time.time() - timeLastWalking > self.getParameter("rTimeoutSec") ):
                    print( "%s: Timeout !!!" % self.getName() );
                    self.output_timeout_no_walk();
            time.sleep( rPeriod );
        # end while
        self.bIsRunning = False;
        self.onStopped();    
        self.log( self.boxName + ": start - end" ); 

    def onInput_onStop(self):
        self.bMustStop = True; # stop current loop execution
        
# TimeoutNoWalkNoMove - end
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_timeout_no_walk" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Parameter name="rPeriod" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="100000" tooltip="period of refresh in seconds" id="6" />
                                                                    <Parameter name="rTimeoutSec" inherits_from_parent="0" content_type="2" value="12" default_value="10" min="0" max="10000" tooltip="The time to wait without walking in seconds" id="7" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="2" indexofinput="5" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="8" indexofoutput="5" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="behavior_layer3" mute="0">
                                                        <BehaviorKeyframe name="fall detection" index="20" bitmap="">
                                                            <Diagram scale="-1">
                                                                <Box name="IsFall" robot="" id="6" tooltip="Are we at the ground ? (using ALRobotPose)" bitmap_expanded="1" plugin="" x="214" y="66">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        try:
            rp = ALProxy( "ALRobotPose" );
            pose = rp.getActualPoseAndTime();
#            print( str( pose ) );
            pose = pose[0];
            if( pose in ['Back', 'Belly', 'Left', 'Right']  ):
                self.output_yes();
                return;
        except BaseException, err:
            print( "ERR: %s: err: %s" % ( self.getName(), str( err ) ) );
        self.output_no();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="Timer" robot="" id="1" tooltip="Send a bang with a predefined period." bitmap_expanded="1" plugin="" x="86" y="66">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False;

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value (seconds)." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the timer." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                                    <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="1.2" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds). The box output will be stimulated at this period." id="6" />
                                                                </Box>
                                                                <Box name="GotoInit" robot="" id="3" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="357" y="66">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>1</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="Text Edit" robot="" id="7" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="359" y="166">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Fall")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Fall</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="gotoAndStop" robot="" id="4" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="508" y="66">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self, p):
        self.log( "%s: gotoAndStop %d" % ( self.getName(), int( p ) ) );
        ALFrameManager.gotoAndStop(self.parentId, p)

    def onInput_onStop(self):
        ""]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                </Box>
                                                                <Box name="Enter name here" robot="" id="14" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="localizationbox_plugin" x="338" y="332">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)
		self.tts = ALProxy("ALTextToSpeech")

	def onInput_onStart(self):
		sEnglish = "\VOL=400\  Outch!"
		sFrench = "\VOL=400\  Ouille !"
		sSpanish = ""
		sItalian = ""
		sGerman = ""
		sChinese = ""
		sPolish = ""
		sKorean = ""
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(eval("s"+sDefaultLang))]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <english>\VOL=400\  Outch!</english>
                                                                        <french>\VOL=400\  Ouille !</french>
                                                                        <spanish></spanish>
                                                                        <italian></italian>
                                                                        <german></german>
                                                                        <chinese></chinese>
                                                                        <polish></polish>
                                                                        <korean></korean>
                                                                        <language>0</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="SayTextPrerender_p" robot="" id="15" tooltip="Receive a string, precompute it, then say it!&#x0A;All steps are outputted to add synchro or interesting behaviors...&#x0A;&#x0A;v1.02" bitmap_expanded="1" plugin="" x="586" y="330">
                                                                    <bitmap>media/images/box/icons_appu/sayPrecomputed.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# SayTextPrerender - v1.02
import altools

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self);
        self.nStateInit = 0;
        self.nStatePreparing = 1;
        self.nStateSpeaking = 2;
        self.nStateStopped = 3;
        self.nStep = self.nStateInit;
    
    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self, p):
        if( self.nStep == self.nStateSpeaking or self.nStep == self.nStatePreparing ):
            self.log( "%s: already speaking, won't say that sentence: '%s'" % ( self.boxName, p ) );
            return;
#        txt = "\\RSPD=85\\ " + altools.transformAsciiAccentForSynthesis( p ); # not usefull now!
        txt = p;
        self.nStep = self.nStatePreparing;
        self.output_onPreparing();
        if( self.getParameter( "bWithLight" ) ):
            altools.sayAndCacheAndLight( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        else:
            altools.sayAndCache( txt, True, self.getParameter( 'bStoreToNonVolatilePath' ), nUseLang = self.getParameter( 'nNumLanguage' ) );
        if( not self.getParameter( 'bJustPrepare' ) ):
            self.nStep = self.nStateSpeaking;
            self.output_onStartSpeaking();
            if( self.getParameter( "bWithLight" ) ):
                altools.sayAndCacheAndLight( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
            else:
                altools.sayAndCache( txt, nUseLang = self.getParameter( 'nNumLanguage' ) );
        self.nStep = self.nStateStopped;
        self.output_onStopSpeaking();
        
    def onInput_onStop(self):
        while( self.nStep == self.nStatePreparing ): # can't kill while preparing
            time.sleep( 0.2 );
        # on le fait plusieurs fois car des fois on peut se trouver pile entre le set du play et le lancage de la commande
        for i in range( 3 ):
            if( self.nStep == self.nStateSpeaking ):
                altools.mySystemCall( "killall aplay" );     # todo: better killling method!
                time.sleep( 0.2 );]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="output_onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Text are being prepared" id="4" />
                                                                    <Output name="output_onStartSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao begin to speak" id="5" />
                                                                    <Output name="output_onStopSpeaking" type="1" type_size="1" nature="2" inner="0" tooltip="Nao has stop speaking" id="6" />
                                                                    <Parameter name="bWithLight" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="use light in eyes to speak" id="7" />
                                                                    <Parameter name="bJustPrepare" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Don&apos;t say the text now, just generate it." id="8" />
                                                                    <Parameter name="bStoreToNonVolatilePath" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="copy the generated file to a non volatile path." id="9" />
                                                                    <Parameter name="nNumLanguage" inherits_from_parent="0" content_type="1" value="-1" default_value="-1" min="-1" max="30" tooltip="To speak with a different speak language, specify it there (default -1: current one)" id="10" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                <Link inputowner="14" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList />
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="5" outputowner="5" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Box name="PostParams_ref" robot="" id="3" tooltip="Manually post parameters, to test stuff" bitmap_expanded="1" plugin="" x="110" y="156">
                            <bitmap>media/images/box/icons_appu/shortcut.png</bitmap>
                            <bitmap>media/images/box/icons_appu/settings.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import naolibrary
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        listParams = [];
        listParams.append( [ "rChanceOfLookAt", 20] );
        listParams.append( [ "rTimeOut", 120] );        
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Params( strBehaviorName ), listParams );
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                        <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList />
        </Timeline>
    </Box>
</ChoregrapheProject>
