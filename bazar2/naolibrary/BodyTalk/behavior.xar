<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="2">
    <Box name="root" robot="" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." bitmap_expanded="1" plugin="" x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
            <watches />
            <BehaviorLayer name="behavior_layer1" mute="0">
                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                    <Diagram scale="-1">
                        <Box name="NaoLibrary-Encapsulation_ref" robot="" id="5" tooltip="# NaoLibrary-Encapsulation&#x0A;# v 1.0&#x0A;&#x0A;This box encapsulate any box, so that it transforms it in a regular call, with params in, intermediary out and results out." bitmap_expanded="1" plugin="" x="220" y="42">
                            <bitmap>media/images/box/icons_appu/gear.png</bitmap>
                            <bitmap>media/images/box/icons_appu/shortcut.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# NaoLibrary-Encapsulation
# v1.0
import naolibrary
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.BIND_PYTHON( self.getName(),"callback_output_on_intermediary" );
        self.BIND_PYTHON( self.getName(),"callback_output_on_results" );
        self.BIND_PYTHON( self.getName(),"callback_soft_cancel" );        

    def onLoad(self):
        self.bIsRunning = False;

    def onUnload(self):
        self.onInput_onStop(); # stop current loop execution

    def onInput_onStart(self):
        self.log( self.boxName + ": start - begin" );
        
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" );
            return;
            
        # wait the soft cancel
        self.bIsRunning = True;
        
        # get params from outside
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        try:
            params = ALMemory.getData( naolibrary.xarLoader.getVarName_Params( strBehaviorName ) );
            # erase them for next time
            ALMemory.insertData( naolibrary.xarLoader.getVarName_Params( strBehaviorName ), [] );
        except:
            params = [];
        strOutput = '%s: strBehaviorName: %s, params received: %s' % ( self.getName(), strBehaviorName, str( params ) );
        print( strOutput );        
        self.log( strOutput );
        
        # TODO, BUG a venir: ici il faudrait effacer les paramètres précédemment ajouté par la boite, avec une méthode du genre delParameter
        # car sinon si on écrase les parametres par défaut, tant qu'on ne recharge pas ce comportement, 
        # un appel sans parametre, va utiliser les dernier envoyés... C'est moche.
        i = 0;
        for elem in params:
            self.addParameter( elem[0], elem[1], False );
            i += 1;        
            
        # install hook
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
        ALMemory.subscribeToMicroEvent( self.getName() + "__output_on_intermediary", self.getName(), "", "callback_output_on_intermediary" );
        ALMemory.subscribeToMicroEvent( self.getName() + "__output_on_results", self.getName(), "", "callback_output_on_results" );
        ALMemory.subscribeToMicroEvent( naolibrary.xarLoader.getVarName_SoftCancel( strBehaviorName ), self.getName(), "", "callback_soft_cancel" );        
        
        # launch the box
        self.gotoAndPlay( 0 );
        self.log( "goto and play" );
        self.log( self.boxName + ": start - end" );
    # onInput_onStart - end

    def onInput_onStop(self):
        if( self.bIsRunning ):
            strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
            self.log( '%s: strBehaviorName: %s, stopping...' % ( self.getName(), strBehaviorName, ) );        
            ALMemory.insertData( naolibrary.xarLoader.getVarName_Cancel( strBehaviorName ), True );
            self.onFinished();
            
    def onFinished(self):
        if( self.bIsRunning ):
            strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );        
            self.log( '%s: strBehaviorName: %s, finishing...' % ( self.getName(), strBehaviorName, ) );
            self.bIsRunning = False;
            ALMemory.unsubscribeToMicroEvent( self.getName() + "__output_on_intermediary", self.getName() );
            ALMemory.unsubscribeToMicroEvent( self.getName() + "__output_on_results", self.getName() );
            ALMemory.unsubscribeToMicroEvent( naolibrary.xarLoader.getVarName_SoftCancel( strBehaviorName ), self.getName() );            
            self.gotoAndStop( -1 );                    
        
        
    def callback_output_on_intermediary(self, pDataName, pValue, pMessage):
        "We got there when user activate the intermediary output"
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        self.log( '%s: strBehaviorName: %s, returning intermediary: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );        
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Intermediary( strBehaviorName ), pValue );
        
    def callback_output_on_results(self, pDataName, pValue, pMessage):
        "We got there when user activate the results output"
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );
        self.log( '%s: strBehaviorName: %s, returning results: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Results( strBehaviorName ), pValue );
        # stop the box
        self.onFinished();
        
    def callback_soft_cancel(self, pDataName, pValue, pMessage):
        strBehaviorName = ALFrameManager.getBehaviorPath( self.behaviorId );    
        self.log( '%s: strBehaviorName: %s, soft cancel received: %s' % ( self.getName(), strBehaviorName, str( pValue ) ) );           
        ALMemory.insertData( naolibrary.xarLoader.getVarName_Cancel( strBehaviorName ), True );
        # stop the box
        self.onFinished();
        
# NaoLibrary-Encapsulation - end
pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="output_on_intermediary" type="0" type_size="1" nature="2" inner="0" tooltip="post there your intermediary results" id="4" />
                            <Output name="output_on_results" type="0" type_size="1" nature="2" inner="0" tooltip="post there your final results" id="5" />
                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                <watches />
                                <BehaviorLayer name="behavior_layer1" mute="0">
                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                        <Diagram scale="-1">
                                            <Box name="BodyTalk_p" robot="" id="1" tooltip="This box generates hand, head and leds movement to dress up a long demonstrative speech.&#x0A;&#x0A;works with various position: standing, crouching or sitting.&#x0A;&#x0A;v1.06" bitmap_expanded="1" plugin="" x="261" y="49">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        ""

    def onInput_onStop(self):
        self.onStopped() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onPreparing" type="1" type_size="1" nature="2" inner="0" tooltip="Prepare a body talk" id="2" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the body talk" id="3" />
                                                <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                <Timeline fps="25" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                    <watches />
                                                    <BehaviorLayer name="behavior_layer1" mute="0">
                                                        <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                            <Diagram scale="100">
                                                                <Box name="Text Edit" robot="" id="1" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="47" y="215">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("deprecated !")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>deprecated !</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="ParamsSemiSmooth" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="87" y="369">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onStart(self):
    self.output_Acceleration(0.010);
    self.output_Deceleration(0.0013);]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="output_Acceleration" type="2" type_size="1" nature="2" inner="0" tooltip="output_Acceleration" id="3" />
                                                                    <Output name="output_Deceleration" type="2" type_size="1" nature="2" inner="0" tooltip="output_Deceleration" id="4" />
                                                                </Box>
                                                                <Box name="HandleArms_ref" robot="" id="3" tooltip="Assume arms are in front of the body (works for sitting and standing)" bitmap_expanded="1" plugin="" x="222" y="11">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="IsStandOrCrouch_ref" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="162" y="111">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                            <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                            <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                            <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                            <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                            <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                            <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                            <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                            <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="AssumeBothArmsAreInFrontOfNao_Sitting_p" robot="" id="2" tooltip="Test each arms and move it in front of nao but only if required! - sitting version" bitmap_expanded="1" plugin="" x="395" y="215">
                                                                                        <bitmap>media/images/box/icons_appu/naosit.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="TextEdit" robot="" id="1" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="407" y="40">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>LArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="TextEdit" robot="" id="2" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="497" y="175">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("RArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>RArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="3" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="586" y="40">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront() #~ activate output of the box
        else:
            self.output_onBack() #~ activate output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="4" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="676" y="175">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront() #~ activate output of the box
        else:
            self.output_onBack() #~ activate output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="MovementL" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="722" y="40">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="31.4628" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="38.3184" />
                                                                                                                        <Key frame="25" value="-42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-0.261271" />
                                                                                                                        <Key frame="25" value="-56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="MovementR" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="812" y="175">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="31.4628" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-38.3184" />
                                                                                                                        <Key frame="25" value="42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="0.261271" />
                                                                                                                        <Key frame="25" value="56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Synchro" robot="" id="7" tooltip="When the two first input has been activated, it will trigger.&#x0A;*** state: 2_wip ***&#x0A;*** ref box in: 2_wip/MiscAlex.xar ***&#x0A;*** last modification date(svn): 2009-06-23 15:51:39 +0200 ***" bitmap_expanded="1" plugin="" x="846" y="581">
                                                                                                            <bitmap>media/images/box/sensors/STM.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.nNbrInput = 2; # setting the number of input
    self.abIsActivated = [];
    for i in range(0, self.nNbrInput):
      self.abIsActivated.append( False );
    
    
    # nNumInput numero de l'entr�e 1..n
  def activate( self, nNumInput ):
    self.abIsActivated[nNumInput-1] = True;
    bAll = True;
    for i in range(0, self.nNbrInput):
      if( not self.abIsActivated[i] ):
        bAll = False;
        break;
    if( bAll ):
        self.outputTrigger();
        self.resetActivated();

    
  def resetActivated( self ):
    for i in range(0, self.nNbrInput):
      self.abIsActivated[i] = False;
    
  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onInput1(self):
    self.activate( 1 );

  def onInput_onInput2(self):
    self.activate( 2 );
    
  def onInput_onReset(self):
    self.resetActivated();]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onInput1" type="1" type_size="1" nature="1" inner="0" tooltip="first input to activate" id="2" />
                                                                                                            <Input name="onInput2" type="1" type_size="1" nature="1" inner="0" tooltip="second input to activate" id="3" />
                                                                                                            <Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="reset the two inputs" id="4" />
                                                                                                            <Output name="outputTrigger" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the two input has been triggered" id="5" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="5" />
                                                                                                        <Link inputowner="7" indexofinput="4" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="AssumeBothArmsAreInFrontOfNao_Standing_p" robot="" id="3" tooltip="Test each arms and move it in front of nao but only if required! - standing version" bitmap_expanded="1" plugin="" x="396" y="92">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="TextEdit" robot="" id="1" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="407" y="40">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>LArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="TextEdit" robot="" id="2" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="497" y="175">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("RArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>RArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="3" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="585" y="53">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront();
        elif( aCurrentHandPos[0] <= -0.07 ):
            self.output_onBack();
        else:
            self.output_onSide();
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in front of Nao" id="3" />
                                                                                                            <Output name="output_onSide" type="1" type_size="1" nature="2" inner="0" tooltip="arm is at the side of Nao" id="4" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in the back of Nao" id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="4" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="678" y="177">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront();
        elif( aCurrentHandPos[0] <= -0.07 ):
            self.output_onBack();
        else:
            self.output_onSide();
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in front of Nao" id="3" />
                                                                                                            <Output name="output_onSide" type="1" type_size="1" nature="2" inner="0" tooltip="arm is at the side of Nao" id="4" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in the back of Nao" id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="MovementL" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="722" y="40">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="85" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="38.3184" />
                                                                                                                        <Key frame="25" value="-42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-0.261271" />
                                                                                                                        <Key frame="25" value="-56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="MovementR" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="812" y="175">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="67" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-38.3184" />
                                                                                                                        <Key frame="25" value="42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="0.261271" />
                                                                                                                        <Key frame="25" value="56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Synchro" robot="" id="7" tooltip="When the two first input has been activated, it will trigger.&#x0A;*** state: 2_wip ***&#x0A;*** ref box in: 2_wip/MiscAlex.xar ***&#x0A;*** last modification date(svn): 2009-06-23 15:51:39 +0200 ***" bitmap_expanded="1" plugin="" x="846" y="581">
                                                                                                            <bitmap>media/images/box/sensors/STM.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.nNbrInput = 2; # setting the number of input
    self.abIsActivated = [];
    for i in range(0, self.nNbrInput):
      self.abIsActivated.append( False );
    
    
    # nNumInput numero de l'entr�e 1..n
  def activate( self, nNumInput ):
    self.abIsActivated[nNumInput-1] = True;
    bAll = True;
    for i in range(0, self.nNbrInput):
      if( not self.abIsActivated[i] ):
        bAll = False;
        break;
    if( bAll ):
        self.outputTrigger();
        self.resetActivated();

    
  def resetActivated( self ):
    for i in range(0, self.nNbrInput):
      self.abIsActivated[i] = False;
    
  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onInput1(self):
    self.activate( 1 );

  def onInput_onInput2(self):
    self.activate( 2 );
    
  def onInput_onReset(self):
    self.resetActivated();]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onInput1" type="1" type_size="1" nature="1" inner="0" tooltip="first input to activate" id="2" />
                                                                                                            <Input name="onInput2" type="1" type_size="1" nature="1" inner="0" tooltip="second input to activate" id="3" />
                                                                                                            <Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="reset the two inputs" id="4" />
                                                                                                            <Output name="outputTrigger" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the two input has been triggered" id="5" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="5" />
                                                                                                        <Link inputowner="7" indexofinput="4" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="5" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="4" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="HandleArms_p" robot="" id="4" tooltip="Assume arms are in front of the body (works for sitting and standing)" bitmap_expanded="1" plugin="" x="229" y="126">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="IsStandOrCrouch_p" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="162" y="111">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                            <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                            <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                            <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                            <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                            <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                            <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                            <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                            <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="AssumeBothArmsAreInFrontOfNao_Sitting_p" robot="" id="2" tooltip="Test each arms and move it in front of nao but only if required! - sitting version" bitmap_expanded="1" plugin="" x="395" y="215">
                                                                                        <bitmap>media/images/box/icons_appu/naosit.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="TextEdit" robot="" id="1" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="407" y="40">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>LArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="TextEdit" robot="" id="2" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="497" y="175">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("RArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>RArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="3" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="586" y="40">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront() #~ activate output of the box
        else:
            self.output_onBack() #~ activate output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="4" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="676" y="175">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront() #~ activate output of the box
        else:
            self.output_onBack() #~ activate output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="MovementL" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="722" y="40">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="31.4628" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="38.3184" />
                                                                                                                        <Key frame="25" value="-42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-0.261271" />
                                                                                                                        <Key frame="25" value="-56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="MovementR" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="812" y="175">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="31.4628" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-38.3184" />
                                                                                                                        <Key frame="25" value="42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="0.261271" />
                                                                                                                        <Key frame="25" value="56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Synchro" robot="" id="7" tooltip="When the two first input has been activated, it will trigger.&#x0A;*** state: 2_wip ***&#x0A;*** ref box in: 2_wip/MiscAlex.xar ***&#x0A;*** last modification date(svn): 2009-06-23 15:51:39 +0200 ***" bitmap_expanded="1" plugin="" x="846" y="581">
                                                                                                            <bitmap>media/images/box/sensors/STM.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.nNbrInput = 2; # setting the number of input
    self.abIsActivated = [];
    for i in range(0, self.nNbrInput):
      self.abIsActivated.append( False );
    
    
    # nNumInput numero de l'entr�e 1..n
  def activate( self, nNumInput ):
    self.abIsActivated[nNumInput-1] = True;
    bAll = True;
    for i in range(0, self.nNbrInput):
      if( not self.abIsActivated[i] ):
        bAll = False;
        break;
    if( bAll ):
        self.outputTrigger();
        self.resetActivated();

    
  def resetActivated( self ):
    for i in range(0, self.nNbrInput):
      self.abIsActivated[i] = False;
    
  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onInput1(self):
    self.activate( 1 );

  def onInput_onInput2(self):
    self.activate( 2 );
    
  def onInput_onReset(self):
    self.resetActivated();]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onInput1" type="1" type_size="1" nature="1" inner="0" tooltip="first input to activate" id="2" />
                                                                                                            <Input name="onInput2" type="1" type_size="1" nature="1" inner="0" tooltip="second input to activate" id="3" />
                                                                                                            <Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="reset the two inputs" id="4" />
                                                                                                            <Output name="outputTrigger" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the two input has been triggered" id="5" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="5" />
                                                                                                        <Link inputowner="7" indexofinput="4" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="AssumeBothArmsAreInFrontOfNao_Standing_p" robot="" id="3" tooltip="Test each arms and move it in front of nao but only if required! - standing version" bitmap_expanded="1" plugin="" x="396" y="92">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="TextEdit" robot="" id="1" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="407" y="40">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("LArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>LArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="TextEdit" robot="" id="2" tooltip="This Box just transmits the text you entered when its Input is stimulated." bitmap_expanded="1" plugin="textedit_plugin" x="497" y="175">
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("RArm")]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <text>RArm</text>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits text." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="3" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="585" y="53">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront();
        elif( aCurrentHandPos[0] <= -0.07 ):
            self.output_onBack();
        else:
            self.output_onSide();
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in front of Nao" id="3" />
                                                                                                            <Output name="output_onSide" type="1" type_size="1" nature="2" inner="0" tooltip="arm is at the side of Nao" id="4" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in the back of Nao" id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="GetHandArea_p" robot="" id="4" tooltip="Compute hand position to know if hand are in the front area of nao or on the behind.&#x0A;&#x0A;Warning: The Arm must be stiffness to get the right value" bitmap_expanded="1" plugin="" x="678" y="177">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        
    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, strHandName ):
        aListHand = ["LArm","RArm"];
        aCurrentHandPos = ALMotion.getPosition( strHandName, 0, True ); # 0 = SPACE_BODY # return: [x: from center of nao to his front; y: from center to left; z: from center to head (up)(top)(altitude) ]
        self.log( "%s" % str( aCurrentHandPos ) );
        if( aCurrentHandPos[0] >= 0.07 ): #  and aCurrentHandPos[2] >= 0.0 => if it's too low, it could be stuck rear under the legs BUT in fact to remove the case, we just have to want a position > 0.07 instead of 0.00
            self.output_onFront();
        elif( aCurrentHandPos[0] <= -0.07 ):
            self.output_onBack();
        else:
            self.output_onSide();
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip='Box behavior starts when a signal is received on this input.&#x0A;&#x0A;Parameter is &quot;LHand&quot; or &quot;RHand&quot;' id="2" />
                                                                                                            <Output name="output_onFront" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in front of Nao" id="3" />
                                                                                                            <Output name="output_onSide" type="1" type_size="1" nature="2" inner="0" tooltip="arm is at the side of Nao" id="4" />
                                                                                                            <Output name="output_onBack" type="1" type_size="1" nature="2" inner="0" tooltip="arms is in the back of Nao" id="5" />
                                                                                                        </Box>
                                                                                                        <Box name="MovementL" robot="" id="5" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="722" y="40">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="85" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="38.3184" />
                                                                                                                        <Key frame="25" value="-42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-0.261271" />
                                                                                                                        <Key frame="25" value="-56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="MovementR" robot="" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="812" y="175">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="15" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-24.7879" />
                                                                                                                        <Key frame="25" value="67" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-94.657" />
                                                                                                                        <Key frame="25" value="0" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="-38.3184" />
                                                                                                                        <Key frame="25" value="42.2783" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="15" value="0.261271" />
                                                                                                                        <Key frame="25" value="56.5999" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Synchro" robot="" id="7" tooltip="When the two first input has been activated, it will trigger.&#x0A;*** state: 2_wip ***&#x0A;*** ref box in: 2_wip/MiscAlex.xar ***&#x0A;*** last modification date(svn): 2009-06-23 15:51:39 +0200 ***" bitmap_expanded="1" plugin="" x="846" y="581">
                                                                                                            <bitmap>media/images/box/sensors/STM.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.nNbrInput = 2; # setting the number of input
    self.abIsActivated = [];
    for i in range(0, self.nNbrInput):
      self.abIsActivated.append( False );
    
    
    # nNumInput numero de l'entr�e 1..n
  def activate( self, nNumInput ):
    self.abIsActivated[nNumInput-1] = True;
    bAll = True;
    for i in range(0, self.nNbrInput):
      if( not self.abIsActivated[i] ):
        bAll = False;
        break;
    if( bAll ):
        self.outputTrigger();
        self.resetActivated();

    
  def resetActivated( self ):
    for i in range(0, self.nNbrInput):
      self.abIsActivated[i] = False;
    
  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onInput1(self):
    self.activate( 1 );

  def onInput_onInput2(self):
    self.activate( 2 );
    
  def onInput_onReset(self):
    self.resetActivated();]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onInput1" type="1" type_size="1" nature="1" inner="0" tooltip="first input to activate" id="2" />
                                                                                                            <Input name="onInput2" type="1" type_size="1" nature="1" inner="0" tooltip="second input to activate" id="3" />
                                                                                                            <Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="reset the two inputs" id="4" />
                                                                                                            <Output name="outputTrigger" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the two input has been triggered" id="5" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="5" />
                                                                                                        <Link inputowner="7" indexofinput="4" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="5" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="3" outputowner="4" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="ChangeSpeedParams_p" robot="" id="5" tooltip="Change the speed params" bitmap_expanded="1" plugin="" x="272" y="470">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[def changeGlobalSpeedParams( rAcc, rDec ):
  #self.log( "changeGlobalAcceleration to %f, %f" % ( rAcc, rDec ) );
  listJointName = ALMotion.getBodyJointNames();
  for strJointName in listJointName:
    aVal = ALMotion.getJointSpeedParams( strJointName );
    rVal = ALMotion.setJointSpeedParams( strJointName, aVal[0], rAcc, rDec );
    
# changeGlobalSpeedParams - end

class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.rLastAcceleration = 0.1;
    self.rLastDeceleration = 0.1;
    self.bMutex = False;

  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onChangeAcceleration( self, rNewValue ):
    while( self.bMutex ):
      time.sleep( 0.1 );
    self.bMutex = True;
    self.rLastAcceleration = rNewValue;
    changeGlobalSpeedParams( self.rLastAcceleration, self.rLastDeceleration );
    self.bMutex = False;
    self.onStopped();

    
  def onInput_onChangeDeceleration( self, rNewValue ):
    while( self.bMutex ):
      time.sleep( 0.1 );
    self.bMutex = True;  
    self.rLastDeceleration = rNewValue;
    changeGlobalSpeedParams( self.rLastAcceleration, self.rLastDeceleration );
    self.bMutex = False;    
    self.onStopped();

  def onInput_onExportCurrentValue(self):
    listJointName = ALMotion.getBodyJointNames();
    #self.log( "\nSpeedParams:" );
    for strJointName in listJointName:
      aVal = ALMotion.getJointSpeedParams( strJointName )]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onChangeAcceleration" type="2" type_size="1" nature="1" inner="0" tooltip="Change global acceleration to a new value" id="2" />
                                                                    <Input name="onChangeDeceleration" type="2" type_size="1" nature="1" inner="0" tooltip="Change global deceleration to a new value" id="3" />
                                                                    <Input name="onExportCurrentValue" type="1" type_size="1" nature="1" inner="0" tooltip="Export current accel et decel value so we can generate a script to easily reput them" id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                </Box>
                                                                <Box name="IsHandJoined_ref" robot="" id="6" tooltip="Are the hands joined ?" bitmap_expanded="1" plugin="" x="340" y="15">
                                                                    <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);

  def onUnload(self):
    ""

  def onInput_onStart(self):
    if( altools.PoseLibrary.comparePosition( 
          {  
            'LShoulderPitch': 0.7961040735244751, 'LShoulderRoll': 0.21318404376506805, 'LElbowYaw': -0.8207319974899292, 'RShoulderRoll': -0.15497596561908722, 'RShoulderPitch': 0.77011001110076904,        
             'RElbowYaw': 0.72554004192352295, 'RElbowRoll': 1.2257080078125, 'LElbowRoll': -1.2854501008987427
          } 
          ) < 0.05 ):
      self.output_yes();
    else:
      self.output_no();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                    <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="ArmsBehaviourBodyTalk" robot="" id="7" tooltip="Random arm behavior dedicated to conversation." bitmap_expanded="1" plugin="" x="397" y="192">
                                                                    <bitmap>media/images/box/interaction/social_behavior.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    self.onInput_onStop();
    self.exitBehavior();

  def onInput_onStart(self):
    self.gotoAndStop(1);

  def onInput_onStop(self):
    self.gotoAndStop(250); # to stop everything]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="SettingUp" index="1" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="IsHandJoined_p" robot="" id="1" tooltip="Are the hands joined ?" bitmap_expanded="1" plugin="" x="83" y="71">
                                                                                        <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);

  def onUnload(self):
    ""

  def onInput_onStart(self):
    if( altools.PoseLibrary.comparePosition( 
          {  
            'LShoulderPitch': 0.7961040735244751, 'LShoulderRoll': 0.21318404376506805, 'LElbowYaw': -0.8207319974899292, 'RShoulderRoll': -0.15497596561908722, 'RShoulderPitch': 0.77011001110076904,        
             'RElbowYaw': 0.72554004192352295, 'RElbowRoll': 1.2257080078125, 'LElbowRoll': -1.2854501008987427
          } 
          ) < 0.05 ):
      self.output_yes();
    else:
      self.output_no();]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                    </Box>
                                                                                    <Box name="JoinedHandsMultiPos_p" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="220" y="194">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="IsStandOrCrouch_ref" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="125" y="95">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                                            <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                                    <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                                        <Diagram scale="-1">
                                                                                                                            <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                                                <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                                                <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                                                <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                                                <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                                                <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                                                <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                                                <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                                                <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                                <ActuatorList />
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="JoinedHands" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="343" y="42">
                                                                                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="43.7" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="11.5" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="-48" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="-8.69888" />
                                                                                                                        <Key frame="25" value="-75.3" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="-31.204" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="46" value="57" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="41.8" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="-8.2" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="42.1856" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="14" />
                                                                                                                        <Key frame="25" value="72.2" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="32.8" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="46" value="57" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="JoinedHands_sit" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="352" y="186">
                                                                                                            <bitmap>media/images/box/icons_appu/naosit.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                                                <watches />
                                                                                                                <ActuatorList>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="34" />
                                                                                                                        <Key frame="25" value="43.7" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="59.6" />
                                                                                                                        <Key frame="25" value="11.5" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="-55" />
                                                                                                                        <Key frame="25" value="-48" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="-55" />
                                                                                                                        <Key frame="25" value="-75.3" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="-31.204" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="46" value="57" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="3" />
                                                                                                                        <Key frame="25" value="41.8" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="-45.1" />
                                                                                                                        <Key frame="25" value="-8.2" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="53" />
                                                                                                                        <Key frame="25" value="42.1856" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="14" value="36" />
                                                                                                                        <Key frame="25" value="72.2" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="25" value="32.8" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                                        <Key frame="46" value="57" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="3" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="356" y="137">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="4" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="513" y="131">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="JoinedHands-common" index="20" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="WaitRandom" robot="" id="1" tooltip="wait between 0 and 1 sec" bitmap_expanded="1" plugin="" x="122" y="125">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onStart(self):
    random.uniform( 0.15, 1.8  ); # wait keeping the random position
    self.onStopped() # activate output of the box


  def onInput_onStop(self):
    pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="HandCloseforceAllAngle" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="278" y="131">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="43.7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="11.5" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-48" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-75.3" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-31.204" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="55" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="41.8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-8.2" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="42.1856" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="72.2" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="32.8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="55" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="ChooseRandomMovement" robot="" id="3" tooltip="Choose a random jump from 100 to 200 (proportionnal to size of behaviors)" bitmap_expanded="1" plugin="" x="449" y="128">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import random
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onStart(self):
    nTimeWaitBefore = random.uniform( 0, 1.5 ); # wait keeping joined hand position
    nJumpDest = 100 + random.randint( 0, 99 );
#    self.log( "ChooseRandomMovement: sleep %d sec then jump to frame: %d" % ( nTimeWaitBefore, nJumpDest ));
    time.sleep( nTimeWaitBefore );
    self.onStopped( nJumpDest );

  def onInput_onStop(self):
    pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="4" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="616" y="132">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="OpenHands" index="100" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="HandOpen" robot="" id="1" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="92" y="86">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-61" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="61" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="WaitRandom" robot="" id="2" tooltip="wait between 0 and 1 sec" bitmap_expanded="1" plugin="" x="228" y="95">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onStart(self):
    random.uniform( 0, 0.7  );
    self.onStopped() # activate output of the box


  def onInput_onStop(self):
    pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="3" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="581" y="113">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="4" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="744" y="112">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="HandSky" index="126" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="HandSky" robot="" id="1" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="162" y="92">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-84" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-49" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="44" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="-7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="84" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="49" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="30" value="44" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="2" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="570" y="120">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="3" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="702" y="115">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="HandDemande" index="133" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="IsStandOrCrouch_p" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="77" y="116">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                            <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                            <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                            <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                            <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                            <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                            <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                            <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                            <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="MoveDemander_sit" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="256" y="239">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="30" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="RelativeMoveHipPitch" robot="" id="1" tooltip="Move Hip Pitch From current position, to achieve a slight bend forward" bitmap_expanded="1" plugin="" x="141" y="38">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # absolute position at 50fps
        #     -54.7541 and -56.1652 at index2
        #     -58.8 at index45
        #     -58.8 at index74        
        #     -54.7541 -56.1652 at index112
        listJoints = [ "LHipPitch", "RHipPitch" ];
        listTimes = [0.04, 0.9, 1.48, 2.24];
        allTimes = [ listTimes, listTimes ];
#        rPosL = -54.7541;
#        rPosR = -56.1652;        
        rPosL = ALMotion.getAngles( listJoints[0], True )[0];
        rPosR = ALMotion.getAngles( listJoints[1], True )[0];
        angleL = [rPosL, rPosL - 0.070,  rPosL - 0.070, rPosL ]; # 4.04 => 0.070 radians
        angleR = [rPosR, rPosR - 0.046, rPosR - 0.04, rPosR ]; # 2.64 => 0.046 radians
        
        allAngles = [ angleL, angleR ];
        ALMotion.angleInterpolation( listJoints, allAngles, allTimes, True );

    def onInput_onStop(self):
        self.onUnload() #~ call onUnload of this box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="keyframe89" index="89" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="6.7" />
                                                                                                    <Key frame="58" value="7.46839" />
                                                                                                    <Key frame="87" value="7.46839" />
                                                                                                    <Key frame="125" value="6.7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-14" />
                                                                                                    <Key frame="31" value="-15" />
                                                                                                    <Key frame="37" value="-7.4" />
                                                                                                    <Key frame="43" value="-15" />
                                                                                                    <Key frame="125" value="-14" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-7" />
                                                                                                    <Key frame="31" value="47" />
                                                                                                    <Key frame="35" value="53" />
                                                                                                    <Key frame="58" value="32" />
                                                                                                    <Key frame="87" value="32" />
                                                                                                    <Key frame="125" value="9" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="43" />
                                                                                                    <Key frame="35" value="22" />
                                                                                                    <Key frame="58" value="37" />
                                                                                                    <Key frame="87" value="37" />
                                                                                                    <Key frame="125" value="37" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-58" />
                                                                                                    <Key frame="35" value="-73" />
                                                                                                    <Key frame="58" value="-92" />
                                                                                                    <Key frame="87" value="-92" />
                                                                                                    <Key frame="125" value="-58" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-44.4708" />
                                                                                                    <Key frame="35" value="-88" />
                                                                                                    <Key frame="58" value="-37" />
                                                                                                    <Key frame="87" value="-37" />
                                                                                                    <Key frame="125" value="-44.4708" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-100" />
                                                                                                    <Key frame="35" value="-93.861" />
                                                                                                    <Key frame="58" value="-79" />
                                                                                                    <Key frame="87" value="-79" />
                                                                                                    <Key frame="125" value="-100" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="23.65" />
                                                                                                    <Key frame="35" value="0.490909" />
                                                                                                    <Key frame="58" value="1.03636" />
                                                                                                    <Key frame="87" value="1.03636" />
                                                                                                    <Key frame="125" value="0.436364" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="40.4326" />
                                                                                                    <Key frame="45" value="2" />
                                                                                                    <Key frame="58" value="33" />
                                                                                                    <Key frame="87" value="33" />
                                                                                                    <Key frame="125" value="40.4326" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-0.498473" />
                                                                                                    <Key frame="58" value="-28" />
                                                                                                    <Key frame="87" value="-28" />
                                                                                                    <Key frame="125" value="-0.498473" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="58" />
                                                                                                    <Key frame="58" value="103" />
                                                                                                    <Key frame="87" value="103" />
                                                                                                    <Key frame="125" value="58" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="46" />
                                                                                                    <Key frame="45" value="64" />
                                                                                                    <Key frame="58" value="30" />
                                                                                                    <Key frame="87" value="30" />
                                                                                                    <Key frame="125" value="46" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="104.496" />
                                                                                                    <Key frame="58" value="76" />
                                                                                                    <Key frame="87" value="76" />
                                                                                                    <Key frame="125" value="104.496" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="37.95" />
                                                                                                    <Key frame="58" value="1.03636" />
                                                                                                    <Key frame="87" value="1.03636" />
                                                                                                    <Key frame="125" value="0.690909" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="MoveDemander" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="264" y="110">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="50" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="RelativeMoveHipPitch" robot="" id="1" tooltip="Move Hip Pitch From current position, to achieve a slight bend forward" bitmap_expanded="1" plugin="" x="141" y="38">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import altools
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # absolute position at 50fps
        #     -54.7541 and -56.1652 at index2
        #     -58.8 at index45
        #     -58.8 at index74        
        #     -54.7541 -56.1652 at index112
        listJoints = [ "LHipPitch", "RHipPitch" ];
        listTimes = [0.04, 0.9, 1.48, 2.24];
        allTimes = [ listTimes, listTimes ];
#        rPosL = -54.7541;
#        rPosR = -56.1652;        
        rPosL = ALMotion.getAngles( listJoints[0], True )[0];
        rPosR = ALMotion.getAngles( listJoints[1], True )[0];
        angleL = [rPosL, rPosL - 0.070,  rPosL - 0.070, rPosL ]; # 4.04 => 0.070 radians
        angleR = [rPosR, rPosR - 0.046, rPosR - 0.04, rPosR ]; # 2.64 => 0.046 radians
        
        allAngles = [ angleL, angleR ];
        ALMotion.angleInterpolation( listJoints, allAngles, allTimes, True );

    def onInput_onStop(self):
        self.onUnload() #~ call onUnload of this box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="keyframe89" index="89" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="6.7" />
                                                                                                    <Key frame="58" value="7.46839" />
                                                                                                    <Key frame="87" value="7.46839" />
                                                                                                    <Key frame="125" value="6.7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-14" />
                                                                                                    <Key frame="31" value="-15" />
                                                                                                    <Key frame="37" value="-7.4" />
                                                                                                    <Key frame="43" value="-15" />
                                                                                                    <Key frame="125" value="-14" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="103.27" />
                                                                                                    <Key frame="35" value="92.5186" />
                                                                                                    <Key frame="58" value="32" />
                                                                                                    <Key frame="87" value="32" />
                                                                                                    <Key frame="125" value="103.27" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="37" />
                                                                                                    <Key frame="35" value="22" />
                                                                                                    <Key frame="58" value="37" />
                                                                                                    <Key frame="87" value="37" />
                                                                                                    <Key frame="125" value="37" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-58" />
                                                                                                    <Key frame="35" value="-73" />
                                                                                                    <Key frame="58" value="-92" />
                                                                                                    <Key frame="87" value="-92" />
                                                                                                    <Key frame="125" value="-58" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-44.4708" />
                                                                                                    <Key frame="35" value="-88" />
                                                                                                    <Key frame="58" value="-37" />
                                                                                                    <Key frame="87" value="-37" />
                                                                                                    <Key frame="125" value="-44.4708" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-100" />
                                                                                                    <Key frame="35" value="-93.861" />
                                                                                                    <Key frame="58" value="-79" />
                                                                                                    <Key frame="87" value="-79" />
                                                                                                    <Key frame="125" value="-100" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="23.65" />
                                                                                                    <Key frame="35" value="0.490909" />
                                                                                                    <Key frame="58" value="1.03636" />
                                                                                                    <Key frame="87" value="1.03636" />
                                                                                                    <Key frame="125" value="0.436364" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="40.4326" />
                                                                                                    <Key frame="45" value="2" />
                                                                                                    <Key frame="58" value="33" />
                                                                                                    <Key frame="87" value="33" />
                                                                                                    <Key frame="125" value="40.4326" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-0.498473" />
                                                                                                    <Key frame="58" value="-28" />
                                                                                                    <Key frame="87" value="-28" />
                                                                                                    <Key frame="125" value="-0.498473" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="58" />
                                                                                                    <Key frame="58" value="103" />
                                                                                                    <Key frame="87" value="103" />
                                                                                                    <Key frame="125" value="58" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="46" />
                                                                                                    <Key frame="45" value="64" />
                                                                                                    <Key frame="58" value="30" />
                                                                                                    <Key frame="87" value="30" />
                                                                                                    <Key frame="125" value="46" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="104.496" />
                                                                                                    <Key frame="58" value="76" />
                                                                                                    <Key frame="87" value="76" />
                                                                                                    <Key frame="125" value="104.496" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="37.95" />
                                                                                                    <Key frame="58" value="1.03636" />
                                                                                                    <Key frame="87" value="1.03636" />
                                                                                                    <Key frame="125" value="0.690909" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="4" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="419" y="122">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="5" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="551" y="117">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="RightRaised" index="141" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="RightRaised" robot="" id="1" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="100" y="69">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="0" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="32" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="82" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="78" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="55" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="2" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="508" y="97">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="3" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="640" y="92">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="LeftRaised" index="156" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="LeftRaised" robot="" id="1" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="115" y="72">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="53.9631" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="12.0388" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-82.7085" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="-75.145" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="20" value="33.55" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="2" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="389" y="92">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="3" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="521" y="87">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="HandMyChest" index="172" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="IsStandOrCrouch_p" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="71" y="127">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                            <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                            <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                            <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                            <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                            <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                            <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                            <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                            <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="MoveEnAppuyant_sit" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="215" y="221">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="RelativeMoveHipPitch" robot="" id="1" tooltip="Move Hip Pitch From current position, to achieve a slight bend forward" bitmap_expanded="1" plugin="" x="138" y="51">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # absolute position at 50fps
        #     -54.7541 and -56.1652 at index2
        #     -58.8 at index45
        #     -58.8 at index74        
        #     -54.7541 -56.1652 at index112
        listJoints = [ "LHipPitch", "RHipPitch" ];
        listTimes = [1.5, 2.5];
        allTimes = [ listTimes, listTimes ];
#        rPosL = -54.7541;
#        rPosR = -56.1652;        
        rPosL = ALMotion.getAngles( listJoints[0], True )[0];
        rPosR = ALMotion.getAngles( listJoints[1], True )[0];
        angleL = [rPosL - 0.122, rPosL ]; # 7.0 => 0.122 radians
        angleR = [rPosR - 0.122, rPosR ];
        
        allAngles = [ angleL, angleR ];
        ALMotion.angleInterpolation( listJoints, allAngles, allTimes, True );

    def onInput_onStop(self):
        self.onUnload() #~ call onUnload of this box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="keyframe25" index="25" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="7.46839" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="2" value="-13.8893" />
                                                                                                    <Key frame="4" value="-4.4" />
                                                                                                    <Key frame="8" value="20" />
                                                                                                    <Key frame="12" value="-4.4" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="49" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="22" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-82" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-44.4708" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-105" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="55" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="29" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="11" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="88" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="63" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="18.7" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="MoveEnAppuyant" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="220" y="109">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="RelativeMoveHipPitch" robot="" id="1" tooltip="Move Hip Pitch From current position, to achieve a slight bend forward" bitmap_expanded="1" plugin="" x="138" y="51">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # absolute position at 50fps
        #     -54.7541 and -56.1652 at index2
        #     -58.8 at index45
        #     -58.8 at index74        
        #     -54.7541 -56.1652 at index112
        listJoints = [ "LHipPitch", "RHipPitch" ];
        listTimes = [1.5, 2.5];
        allTimes = [ listTimes, listTimes ];
#        rPosL = -54.7541;
#        rPosR = -56.1652;        
        rPosL = ALMotion.getAngles( listJoints[0], True )[0];
        rPosR = ALMotion.getAngles( listJoints[1], True )[0];
        angleL = [rPosL - 0.122, rPosL ]; # 7.0 => 0.122 radians
        angleR = [rPosR - 0.122, rPosR ];
        
        allAngles = [ angleL, angleR ];
        ALMotion.angleInterpolation( listJoints, allAngles, allTimes, True );

    def onInput_onStop(self):
        self.onUnload() #~ call onUnload of this box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="keyframe25" index="25" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="7.46839" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="2" value="-13.8893" />
                                                                                                    <Key frame="4" value="-4.4" />
                                                                                                    <Key frame="8" value="20" />
                                                                                                    <Key frame="12" value="-4.4" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="103.27" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="22" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-82" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-44.4708" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-105" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="55" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="29" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="-8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="11" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="88" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="63" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="15" value="18.7" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="4" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="372" y="100">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="5" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="535" y="99">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="HandMe" index="178" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="IsStandOrCrouch_p" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="70" y="143">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                            <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                            <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                            <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                            <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                            <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                            <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                            <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                            <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="MoveEstCeCorrect_sit" robot="" id="2" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="228" y="238">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="50" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe22" index="22" bitmap="">
                                                                                                    <Diagram scale="100" />
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="keyframe79" index="79" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="10" />
                                                                                                    <Key frame="44" value="0" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-17.9323" />
                                                                                                    <Key frame="44" value="0" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="49" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="36" />
                                                                                                    <Key frame="59" value="51" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="0" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="74" />
                                                                                                    <Key frame="59" value="35" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="21" />
                                                                                                    <Key frame="29" value="83" />
                                                                                                    <Key frame="59" value="88" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="42.9" />
                                                                                                    <Key frame="59" value="0" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="MoveEstCeCorrect" robot="" id="3" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="234" y="83">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline fps="50" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe22" index="22" bitmap="">
                                                                                                    <Diagram scale="100" />
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="keyframe79" index="79" bitmap="">
                                                                                                    <Diagram scale="100">
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="10" />
                                                                                                    <Key frame="44" value="0" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="22" value="-17.9323" />
                                                                                                    <Key frame="44" value="0" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="72" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="36" />
                                                                                                    <Key frame="59" value="51" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="0" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="74" />
                                                                                                    <Key frame="59" value="35" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="21" />
                                                                                                    <Key frame="29" value="83" />
                                                                                                    <Key frame="59" value="88" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="29" value="42.9" />
                                                                                                    <Key frame="59" value="0" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="4" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="424" y="150">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="5" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="573" y="149">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="HandFlower" index="184" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="HandFlower" robot="" id="1" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="196" y="74">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="35" value="-69" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="35" value="-59" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="35" value="-54" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="0" />
                                                                                                    <Key frame="37" value="1.03636" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="35" value="57" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="35" value="63" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="35" value="111" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="18" value="0" />
                                                                                                    <Key frame="37" value="1.03636" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="2" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="604" y="102">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="3" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="736" y="97">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="HandFall" index="194" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Box name="IsStandOrCrouch_p" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="129" y="151">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                            <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                            <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                            <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                            <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                            <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                            <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                            <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                            <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="HandFall" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="307" y="33">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="93" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="64" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="-14" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="-78" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="14.85" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="93" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="-67" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="14" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="78" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="65" value="6.6" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="gotoCommon" robot="" id="3" tooltip="This Box just transmits the number you entered when its Input is stimulated." bitmap_expanded="1" plugin="numberedit_plugin" x="571" y="112">
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(20)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>20</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Transmits number." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="gotoSpecificAction" robot="" id="4" tooltip="Stop the timeline parent at the frame index received through input." bitmap_expanded="1" plugin="" x="703" y="107">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    ""

  def onInput_onStart(self, p):
    ALFrameManager.gotoAndStop(self.parentId, p)

  def onInput_onStop(self):
    ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Parent timeline goes to the given index." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="the_end" index="202" bitmap="">
                                                                                <Diagram scale="100">
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="HeadBehaviourBodyTalk_ref" robot="" id="8" tooltip="Random head behavior dedicated to conversation" bitmap_expanded="1" plugin="" x="400" y="291">
                                                                    <bitmap>media/images/box/interaction/face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import altools
import random
class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)
    self.chain = "Head"
    self.duration = 0.8 # 1 second
    self.motionProxy = ALProxy('ALMotion')
    # Put adequate max
    self.nMaxPitch = 0.1
    self.nMaxYaw = 0.3
    self.nPitchOffset = -0.3; # direction of look
    self.ToStop = False

  def onUnload(self):
    #puts code for box cleanup here
    self.onInput_onStop()

  def onInput_onStart(self):
    #self.onStopped() # activate output of the box
    self.ToStop = False
    self.output_towave()
    nPreviousTime = time.time()
    while True:
      if self.ToStop:
        break
      #put head stiffness
#      ALMotion.setChainStiffness(self.chain, 0.8, self.duration)
      #The movement of the head
      nValPitch = random.uniform( -self.nMaxPitch , self.nMaxPitch  );
      nValYaw = random.uniform( -self.nMaxYaw , self.nMaxYaw );
      angles = [nValYaw,nValPitch+self.nPitchOffset] # add an offset on pitch
      #if nValPitch*nValPitch + nValYaw*nValYaw > 0.04:
      nCurrentTime = time.time()
      if nCurrentTime-nPreviousTime  > 100:
        nPreviousTime = nCurrentTime
        self.output_towave()
      self.motionProxy.angleInterpolationWithSpeed( self.chain, angles, 0.05);
      time.sleep(0.5+random.uniform(0.0,2.0))      
      if( random.uniform( 0, 1.0 ) > 0.5 ):
        # often add a return to center
        self.motionProxy.angleInterpolationWithSpeed( self.chain, [0,self.nPitchOffset], random.randint( 2, 10 ) / 100. );
        time.sleep(0.5+random.uniform(0.0,2.0))
      if( random.uniform( 0, 1.0 ) > 0.8 ):
        # from times to times add a knock
        self.motionProxy.angleInterpolationWithSpeed( self.chain, [0,0.3+self.nPitchOffset], random.randint( 12, 50 ) / 100. );
        time.sleep(0.5+random.uniform(0.1,0.4));        
        self.motionProxy.angleInterpolationWithSpeed( self.chain, [0,self.nPitchOffset], random.randint( 12, 50 ) / 100. );
        time.sleep(0.5+random.uniform(0.0,2.0));
        
    
  def onInput_onStop(self):
    self.ToStop = True
    self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_towave" type="1" type_size="1" nature="2" inner="0" tooltip="When the robot must wave its arm" id="5" />
                                                                </Box>
                                                                <Box name="BlinkBodyTalk_ref" robot="" id="9" tooltip="Random eye blink dedicated to conversation." bitmap_expanded="1" plugin="" x="402" y="395">
                                                                    <bitmap>media/images/box/interaction/face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import altools
import random

class MyClass(GeneratedClass):
  """ comments """
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );
    
    if( self.bIsRunning ):
      #self.log( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    
    while( not self.bMustStop ):
      if( random.uniform( 0.0, 1.0 ) > 0.9 ):
        # double blink
        time.sleep( 0.15 );        
      else:
        # normal wait
        time.sleep( random.uniform( 1.0, 5.0 ) );
      # blink eyes
#      rDuration = random.uniform( 0.05, 0.6 );
      rDuration = 0.06;
      nSavedColor = altools.getLedValueRGB( "FaceLedLeft0" );
      # to avoid the bug when the leds stay black, they are sometimes set to blue.
      if( nSavedColor == 0 ):
        nSavedColor = 0x8585ff;
      
      ALLeds.fadeRGB( "FaceLeds", 0x000000, rDuration );
      time.sleep( 0.061 );
      # check that no one has changed them, before reputting colors      
      nSavedColor2 = altools.getLedValueRGB( "FaceLedLeft0" );
      #self.log( "nSavedColor2: 0x%08x" % nSavedColor2 );
      if( nSavedColor2 == 0 and nSavedColor != 0 ):
        ALLeds.fadeRGB( "FaceLeds", nSavedColor, rDuration );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # stop current loop execution]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output_towave" type="1" type_size="1" nature="2" inner="0" tooltip="When the robot must wave its arm" id="5" />
                                                                </Box>
                                                                <Box name="JoinedHandsMultiPos_ref" robot="" id="10" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="465" y="74">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                        <watches />
                                                                        <BehaviorLayer name="behavior_layer1" mute="0">
                                                                            <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                <Diagram scale="-1">
                                                                                    <Box name="IsStandOrCrouch_ref" robot="" id="1" tooltip="Enter tooltip here" bitmap_expanded="1" plugin="" x="125" y="95">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output_yes" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output_no" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline fps="10" resources_acquisition="0" size="300" enable="0" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <BehaviorLayer name="behavior_layer1" mute="0">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1" bitmap="">
                                                                                                    <Diagram scale="-1">
                                                                                                        <Box name="DetectPosition_p" robot="" id="1" tooltip="The new body position detector sit/lying/standing, slightly optimised.&#x0A;&#x0A;(But not using FSR)." bitmap_expanded="1" plugin="" x="199" y="84">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# The Detect Position of The Applications and Usage Teams v1.01

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        pass
        
    def debugPrint( self, strText ):
        pass
        self.log( str( strText ) );
    
    def onInput_onStart(self):
        #get value Torso Angle Y & X from Memory to check if the robot is on the belly or on the back
        
        rAngleX, rAngleY = ALMemory.getListData( [ "Device/SubDeviceList/InertialSensor/AngleX/Sensor/Value", "Device/SubDeviceList/InertialSensor/AngleY/Sensor/Value" ] );
        
        self.debugPrint( "DetectPosition: rAngleX: %5.3f; rAngleY: %5.3f" % (rAngleX, rAngleY ) );

        rJointValHipPitch = ( ALMotion.getAngles( "LHipPitch", True )[0] + ALMotion.getAngles( "RHipPitch", True )[0] ) / 2.;
        rJointValKneePitch = ( ALMotion.getAngles( "LKneePitch", True )[0] + ALMotion.getAngles( "RKneePitch", True )[0]  ) / 2.;
        rJointValAnklePitch = ( ALMotion.getAngles( "LAnklePitch", True )[0] + ALMotion.getAngles( "RAnklePitch", True )[0] ) / 2.;
        
        if( rJointValHipPitch > -0.9 and rJointValKneePitch > 1.2 and rJointValAnklePitch > 0.3 and rAngleY < 1.2 ):
            self.debugPrint( "output_kneeling" );
            self.output_kneeling();
            return;
    
        if  rAngleY > -0.82 and rAngleY < 0.9 and abs(rAngleX) < 0.5:
            self.debugPrint( "the torso is vertical" );
            
            strSpecifJointName = "LHipRoll";
            rJointValHipRoll = ALMotion.getAngles( strSpecifJointName, True )[0];
            strSpecifJointName = "LHipYawPitch";
            rJointValLHipYawPitch = ALMotion.getAngles( strSpecifJointName, True )[0];
  
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f; AnklePitch: %5.3f; LHipRoll: %5.3f; LHipYawPitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch, rJointValAnklePitch, rJointValHipRoll, rJointValLHipYawPitch ) );
            if( rJointValHipPitch < -0.45 and rJointValKneePitch > 1.8 and rJointValAnklePitch < -0.7 ):
                self.debugPrint( "output_crouch" );
                self.output_crouch();
            elif(  rJointValHipPitch < -1.2 or ( rJointValHipPitch < -0.8 and rJointValKneePitch < 0.5 ) ):
                self.debugPrint( "output_sit" );
                self.output_sit();
            elif( rJointValHipPitch < 0.5 and rJointValKneePitch < 1.1 and rJointValAnklePitch < 0.54 and rJointValHipRoll < 0.5 ): # Alma: avant le hip pitch etat a 0.3 mais pourquoi pas 0.5 ? idem pour rJointValHipRoll (pour position avec une jambe sur le coté)
            # modif ankle 0.1 => 0.54 pour quand Nao fait caca debout (fesses en arrieres)
                self.debugPrint( "output_standing" );
                self.output_standing();
            elif( rJointValHipPitch < -1.2 and rJointValKneePitch > 1.1 ):
                # predefined position: "intermediary" => stand, sit or lying (already done in the horizontal case)
                if( rAngleY > -0.7 and rAngleY < 0.1 ):
                    self.debugPrint( "output_sit2" );
                    self.output_sit();
                elif( rAngleY > 0.4 ):
                    self.debugPrint( "output_standing2" );
                    self.output_standing();
                else:
                    self.debugPrint( "output_unknown1" );
                    self.output_unknown();
            else:
                self.debugPrint( "output_unknown2" );
                self.output_unknown();
        else:
            self.debugPrint( "the torso is horizontal" );
            self.debugPrint( "DetectPosition: HipPitch: %5.3f; KneePitch: %5.3f" % (rJointValHipPitch, rJointValKneePitch ) );
            rAngleX_Side = 1.3;
            rErrorMax = 0.3;
            if( rAngleY > 1.0 ):
                self.debugPrint( "output_belly" );
                self.output_belly();
            elif( rAngleY < -0.85 ):
                self.debugPrint( "output_back" );
                self.output_back();
            elif( rAngleY > -0.6 and rAngleY < 0.6 and 
                (
                        ( rAngleX > rAngleX_Side-rErrorMax  and rAngleX < rAngleX_Side+rErrorMax)
                    or ( rAngleX < -(rAngleX_Side-rErrorMax)   and rAngleX > -(rAngleX_Side+rErrorMax ) )
                    )
            ):
                # on the right side = (0.0, 1.35), on the left side:  (0.0, -1.30)
                if( rAngleX > 0 ):
                    self.debugPrint( "output_side_right" );
                    self.output_side_right();
                else:
                    self.debugPrint( "output_side_left" );
                    self.output_side_left();
            else:
                self.debugPrint( "output_unknown3" );
                self.output_unknown();
                    
    def onInput_onStop(self):
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="output_unknown" type="1" type_size="1" nature="1" inner="0" tooltip="unknown position" id="3" />
                                                                                                            <Output name="output_standing" type="1" type_size="1" nature="2" inner="0" tooltip="outputted when standing" id="4" />
                                                                                                            <Output name="output_sit" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from sitted" id="5" />
                                                                                                            <Output name="output_crouch" type="1" type_size="1" nature="2" inner="0" tooltip="in old bad unstable crouched position" id="6" />
                                                                                                            <Output name="output_back" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from back" id="7" />
                                                                                                            <Output name="output_belly" type="1" type_size="1" nature="2" inner="0" tooltip="The robot need to stand up from belly" id="8" />
                                                                                                            <Output name="output_side_left" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his side" id="9" />
                                                                                                            <Output name="output_side_right" type="1" type_size="1" nature="2" inner="0" tooltip="nao is sleeping on his right side" id="10" />
                                                                                                            <Output name="output_kneeling" type="1" type_size="1" nature="2" inner="0" tooltip="On the back but with legs beside the body (victory like) (on his kneels)" id="11" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="7" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="8" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="9" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="10" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="11" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList />
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="JoinedHands" robot="" id="2" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="343" y="42">
                                                                                        <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="43.7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="11.5" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-48" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-8.69888" />
                                                                                                    <Key frame="25" value="-75.3" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-31.204" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="46" value="57" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="41.8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-8.2" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="42.1856" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="14" />
                                                                                                    <Key frame="25" value="72.2" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="32.8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="46" value="57" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="JoinedHands_sit" robot="" id="3" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." bitmap_expanded="1" plugin="" x="352" y="186">
                                                                                        <bitmap>media/images/box/icons_appu/naosit.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import altools
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Timeline fps="25" resources_acquisition="0" size="300" enable="1" start_frame="0" end_frame="-1" scale="10">
                                                                                            <watches />
                                                                                            <ActuatorList>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="34" />
                                                                                                    <Key frame="25" value="43.7" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="59.6" />
                                                                                                    <Key frame="25" value="11.5" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-55" />
                                                                                                    <Key frame="25" value="-48" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-55" />
                                                                                                    <Key frame="25" value="-75.3" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="-31.204" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="46" value="57" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="3" />
                                                                                                    <Key frame="25" value="41.8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="-45.1" />
                                                                                                    <Key frame="25" value="-8.2" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="53" />
                                                                                                    <Key frame="25" value="42.1856" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="14" value="36" />
                                                                                                    <Key frame="25" value="72.2" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="25" value="32.8" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                                                                    <Key frame="46" value="57" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList />
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Synchro" robot="" id="11" tooltip="When the two first input has been activated, it will trigger.&#x0A;*** ref box in: ./2_wip/MiscAlex.xar ***&#x0A;*** last modification date(svn): 2009-10-01 15:13:08 +0200 (jeu, 01 oct 2009) ***" bitmap_expanded="1" plugin="" x="664" y="138">
                                                                    <bitmap>media/images/box/sensors/STM.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.nNbrInput = 2; # setting the number of input
    self.abIsActivated = [];
    for i in range(0, self.nNbrInput):
      self.abIsActivated.append( False );
    
    
    # nNumInput numero de l'entr�e 1..n
  def activate( self, nNumInput ):
    self.abIsActivated[nNumInput-1] = True;
    bAll = True;
    for i in range(0, self.nNbrInput):
      if( not self.abIsActivated[i] ):
        bAll = False;
        break;
    if( bAll ):
        self.outputTrigger();
        self.resetActivated();

    
  def resetActivated( self ):
    for i in range(0, self.nNbrInput):
      self.abIsActivated[i] = False;
    
  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onInput1(self):
    self.activate( 1 );

  def onInput_onInput2(self):
    self.activate( 2 );
    
  def onInput_onReset(self):
    self.resetActivated();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onInput1" type="1" type_size="1" nature="1" inner="0" tooltip="first input to activate" id="2" />
                                                                    <Input name="onInput2" type="1" type_size="1" nature="1" inner="0" tooltip="second input to activate" id="3" />
                                                                    <Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="reset the two inputs" id="4" />
                                                                    <Output name="outputTrigger" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the two input has been triggered" id="5" />
                                                                </Box>
                                                                <Box name="Synchro" robot="" id="12" tooltip="When the two first input has been activated, it will trigger.&#x0A;*** ref box in: ./2_wip/MiscAlex.xar ***&#x0A;*** last modification date(svn): 2009-10-01 15:13:08 +0200 (jeu, 01 oct 2009) ***" bitmap_expanded="1" plugin="" x="809" y="288">
                                                                    <bitmap>media/images/box/sensors/STM.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.nNbrInput = 2; # setting the number of input
    self.abIsActivated = [];
    for i in range(0, self.nNbrInput):
      self.abIsActivated.append( False );
    
    
    # nNumInput numero de l'entr�e 1..n
  def activate( self, nNumInput ):
    self.abIsActivated[nNumInput-1] = True;
    bAll = True;
    for i in range(0, self.nNbrInput):
      if( not self.abIsActivated[i] ):
        bAll = False;
        break;
    if( bAll ):
        self.outputTrigger();
        self.resetActivated();

    
  def resetActivated( self ):
    for i in range(0, self.nNbrInput):
      self.abIsActivated[i] = False;
    
  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onInput1(self):
    self.activate( 1 );

  def onInput_onInput2(self):
    self.activate( 2 );
    
  def onInput_onReset(self):
    self.resetActivated();]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onInput1" type="1" type_size="1" nature="1" inner="0" tooltip="first input to activate" id="2" />
                                                                    <Input name="onInput2" type="1" type_size="1" nature="1" inner="0" tooltip="second input to activate" id="3" />
                                                                    <Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="reset the two inputs" id="4" />
                                                                    <Output name="outputTrigger" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the two input has been triggered" id="5" />
                                                                </Box>
                                                                <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="3" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="3" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="11" indexofinput="3" outputowner="8" indexofoutput="4" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="5" />
                                                                <Link inputowner="12" indexofinput="3" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="12" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="3" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="8" indexofinput="3" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="3" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="3" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="11" indexofinput="4" outputowner="0" indexofoutput="3" />
                                                                <Link inputowner="12" indexofinput="4" outputowner="0" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="3" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="45" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="9" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="-46" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="-79" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="-31.204" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="0" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="39" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="-13" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="41" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="77.3" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="44.2071" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" alwaysVisible="0">
                                                            <Key frame="15" value="0" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="3" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList />
                            </Timeline>
                        </Box>
                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList />
        </Timeline>
    </Box>
</ChoregrapheProject>
